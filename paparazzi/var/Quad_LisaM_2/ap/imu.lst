   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"imu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.imu_init,"ax",%progbits
  18              		.align	1
  19              		.global	imu_init
  20              		.thumb
  21              		.thumb_func
  23              	imu_init:
  24              	.LFB4:
  25              		.file 1 "subsystems/imu.c"
   1:subsystems/imu.c **** /*
   2:subsystems/imu.c ****  * $Id$
   3:subsystems/imu.c ****  *
   4:subsystems/imu.c ****  * Copyright (C) 2008-2010 The Paparazzi Team
   5:subsystems/imu.c ****  *
   6:subsystems/imu.c ****  * This file is part of paparazzi.
   7:subsystems/imu.c ****  *
   8:subsystems/imu.c ****  * paparazzi is free software; you can redistribute it and/or modify
   9:subsystems/imu.c ****  * it under the terms of the GNU General Public License as published by
  10:subsystems/imu.c ****  * the Free Software Foundation; either version 2, or (at your option)
  11:subsystems/imu.c ****  * any later version.
  12:subsystems/imu.c ****  *
  13:subsystems/imu.c ****  * paparazzi is distributed in the hope that it will be useful,
  14:subsystems/imu.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:subsystems/imu.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:subsystems/imu.c ****  * GNU General Public License for more details.
  17:subsystems/imu.c ****  *
  18:subsystems/imu.c ****  * You should have received a copy of the GNU General Public License
  19:subsystems/imu.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  20:subsystems/imu.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  21:subsystems/imu.c ****  * Boston, MA 02111-1307, USA.
  22:subsystems/imu.c ****  */
  23:subsystems/imu.c **** 
  24:subsystems/imu.c **** /** @file imu.c
  25:subsystems/imu.c ****  * Inertial Measurement Unit interface.
  26:subsystems/imu.c ****  */
  27:subsystems/imu.c **** 
  28:subsystems/imu.c **** #include "subsystems/imu.h"
  29:subsystems/imu.c **** 
  30:subsystems/imu.c **** struct Imu imu;
  31:subsystems/imu.c **** 
  32:subsystems/imu.c **** void imu_init(void) {
  26              		.loc 1 32 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  33:subsystems/imu.c **** 
  34:subsystems/imu.c ****   /* initialises neutrals */
  35:subsystems/imu.c ****   RATES_ASSIGN(imu.gyro_neutral,  IMU_GYRO_P_NEUTRAL,  IMU_GYRO_Q_NEUTRAL,  IMU_GYRO_R_NEUTRAL);
  30              		.loc 1 35 0
  31 0000 5E4B     		ldr	r3, .L7
  32 0002 0022     		movs	r2, #0
  32:subsystems/imu.c **** void imu_init(void) {
  33              		.loc 1 32 0
  34 0004 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 28
  37              		.cfi_offset 14, -4
  38              		.cfi_offset 9, -8
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 7, -16
  41              		.cfi_offset 6, -20
  42              		.cfi_offset 5, -24
  43              		.cfi_offset 4, -28
  44              		.loc 1 35 0
  45 0008 DA63     		str	r2, [r3, #60]
  46 000a 1A64     		str	r2, [r3, #64]
  47 000c 5A64     		str	r2, [r3, #68]
  36:subsystems/imu.c **** 
  37:subsystems/imu.c ****   VECT3_ASSIGN(imu.accel_neutral, IMU_ACCEL_X_NEUTRAL, IMU_ACCEL_Y_NEUTRAL, IMU_ACCEL_Z_NEUTRAL);
  48              		.loc 1 37 0
  49 000e 0B22     		movs	r2, #11
  50 0010 9A64     		str	r2, [r3, #72]
  51 0012 DA64     		str	r2, [r3, #76]
  52 0014 6FF01802 		mvn	r2, #24
  53 0018 1A65     		str	r2, [r3, #80]
  38:subsystems/imu.c **** 
  39:subsystems/imu.c **** #if defined IMU_MAG_X_NEUTRAL && defined IMU_MAG_Y_NEUTRAL && defined IMU_MAG_Z_NEUTRAL
  40:subsystems/imu.c ****   VECT3_ASSIGN(imu.mag_neutral,   IMU_MAG_X_NEUTRAL,   IMU_MAG_Y_NEUTRAL,   IMU_MAG_Z_NEUTRAL);
  54              		.loc 1 40 0
  55 001a 6FF09702 		mvn	r2, #151
  56 001e 5A65     		str	r2, [r3, #84]
  57 0020 6FF03202 		mvn	r2, #50
  58 0024 9A65     		str	r2, [r3, #88]
  59 0026 0A22     		movs	r2, #10
  60 0028 DA65     		str	r2, [r3, #92]
  61              	.LVL0:
  62              	.LBB2:
  63              	.LBB3:
  41:subsystems/imu.c **** #else
  42:subsystems/imu.c **** #if USE_MAGNETOMETER
  43:subsystems/imu.c **** #pragma message "Info: Magnetomter neutrals are set to zero!"
  44:subsystems/imu.c **** #endif
  45:subsystems/imu.c ****   INT_VECT3_ZERO(imu.mag_neutral);
  46:subsystems/imu.c **** #endif
  47:subsystems/imu.c **** 
  48:subsystems/imu.c ****   /*
  49:subsystems/imu.c ****     Compute quaternion and rotation matrix
  50:subsystems/imu.c ****     for conversions between body and imu frame
  51:subsystems/imu.c ****   */
  52:subsystems/imu.c ****   struct Int32Eulers body_to_imu_eulers =
  53:subsystems/imu.c ****     { ANGLE_BFP_OF_REAL(IMU_BODY_TO_IMU_PHI),
  54:subsystems/imu.c ****       ANGLE_BFP_OF_REAL(IMU_BODY_TO_IMU_THETA),
  55:subsystems/imu.c ****       ANGLE_BFP_OF_REAL(IMU_BODY_TO_IMU_PSI) };
  56:subsystems/imu.c ****   INT32_QUAT_OF_EULERS(imu.body_to_imu_quat, body_to_imu_eulers);
  64              		.loc 1 56 0
  65 002a 554B     		ldr	r3, .L7+4
  66              	.LBE3:
  67              	.LBB4:
  68 002c 03F54952 		add	r2, r3, #12864
  69              	.LBE4:
  70              	.LBB5:
  71 0030 B3F9906C 		ldrsh	r6, [r3, #3216]
  72              	.LBE5:
  73              	.LBB6:
  74 0034 B3F90010 		ldrsh	r1, [r3, #0]
  75              	.LVL1:
  76              	.LBE6:
  77              	.LBB7:
  78 0038 B2F90220 		ldrsh	r2, [r2, #2]
  79              	.LVL2:
  80              	.LBE7:
  81              	.LBB8:
  82 003c 03F51653 		add	r3, r3, #9600
  83              	.LBE8:
  84              	.LBB9:
  85 0040 7642     		negs	r6, r6
  86              	.LVL3:
  87              	.LBE9:
  88              	.LBB10:
  89 0042 B3F93230 		ldrsh	r3, [r3, #50]
  90              	.LVL4:
  91              	.LBE10:
  92 0046 06FB02F4 		mul	r4, r6, r2
  93 004a 4E43     		muls	r6, r1, r6
  94              	.LVL5:
  95 004c 03FB02F0 		mul	r0, r3, r2
  96 0050 B613     		asrs	r6, r6, #14
  97 0052 8013     		asrs	r0, r0, #14
  98              	.LVL6:
  99 0054 06FB01FC 		mul	ip, r6, r1
 100 0058 00FB02F5 		mul	r5, r0, r2
 101 005c 4FEA6C3C 		asr	ip, ip, #13
 102 0060 4B43     		muls	r3, r1, r3
 103              	.LVL7:
 104 0062 0CEB653C 		add	ip, ip, r5, asr #13
 105 0066 4843     		muls	r0, r1, r0
 106              	.LVL8:
 107 0068 5542     		negs	r5, r2
 108 006a 6E43     		muls	r6, r5, r6
 109 006c A413     		asrs	r4, r4, #14
 110              	.LVL9:
 111 006e 9B13     		asrs	r3, r3, #14
 112              	.LVL10:
 113 0070 4013     		asrs	r0, r0, #13
 114 0072 04FB01F5 		mul	r5, r4, r1
 115 0076 4F42     		negs	r7, r1
 116 0078 00EB6636 		add	r6, r0, r6, asr #13
 117 007c 03FB02F0 		mul	r0, r3, r2
 118 0080 7B43     		muls	r3, r7, r3
 119              	.LVL11:
 120 0082 5443     		muls	r4, r2, r4
 121              	.LVL12:
 122 0084 6D13     		asrs	r5, r5, #13
 123 0086 5B13     		asrs	r3, r3, #13
 124 0088 05EB6035 		add	r5, r5, r0, asr #13
 125 008c 03EB6434 		add	r4, r3, r4, asr #13
 126              	.LBE2:
 127              	.LBB11:
 128              	.LBB12:
  57:subsystems/imu.c ****   INT32_QUAT_NORMALIZE(imu.body_to_imu_quat);
 129              		.loc 1 57 0
 130 0090 06FB06F8 		mul	r8, r6, r6
 131 0094 05FB05F3 		mul	r3, r5, r5
 132 0098 0CFB0C88 		mla	r8, ip, ip, r8
 133 009c 04FB0433 		mla	r3, r4, r4, r3
 134              	.LVL13:
 135 00a0 18EB0308 		adds	r8, r8, r3
 136              	.LVL14:
 137 00a4 13D0     		beq	.L5
 138              	.LVL15:
 139              	.LBB13:
 140              		.loc 1 57 0 is_stmt 0 discriminator 2
 141 00a6 4346     		mov	r3, r8
 142              	.LVL16:
 143 00a8 4FF02809 		mov	r9, #40
 144 00ac 00E0     		b	.L4
 145              	.LVL17:
 146              	.L6:
 147              		.loc 1 57 0
 148 00ae 0346     		mov	r3, r0
 149              	.LVL18:
 150              	.L4:
 151              		.loc 1 57 0 discriminator 3
 152 00b0 B8FBF3F0 		udiv	r0, r8, r3
 153              	.LVL19:
 154 00b4 C018     		adds	r0, r0, r3
 155              	.LVL20:
 156 00b6 4008     		lsrs	r0, r0, #1
 157              	.LVL21:
 158 00b8 1B1A     		subs	r3, r3, r0
 159              	.LVL22:
 160 00ba 012B     		cmp	r3, #1
 161 00bc 08D9     		bls	.L2
 162              		.loc 1 57 0 discriminator 4
 163 00be 09F1FF39 		add	r9, r9, #-1
 164 00c2 5FFA89F9 		uxtb	r9, r9
 165 00c6 B9F1000F 		cmp	r9, #0
 166 00ca F0D1     		bne	.L6
 167 00cc 00E0     		b	.L2
 168              	.LVL23:
 169              	.L5:
 170              	.LBE13:
 171              		.loc 1 57 0
 172 00ce 4046     		mov	r0, r8
 173              	.L2:
 174              	.LVL24:
 175              	.LBE12:
 176              		.loc 1 57 0 discriminator 6
 177 00d0 2A4B     		ldr	r3, .L7
 178 00d2 E403     		lsls	r4, r4, #15
 179 00d4 F603     		lsls	r6, r6, #15
 180 00d6 ED03     		lsls	r5, r5, #15
 181 00d8 4FEACC3C 		lsl	ip, ip, #15
 182 00dc 9CFBF0FC 		sdiv	ip, ip, r0
 183 00e0 96FBF0F6 		sdiv	r6, r6, r0
 184 00e4 95FBF0F5 		sdiv	r5, r5, r0
 185 00e8 94FBF0F0 		sdiv	r0, r4, r0
 186              	.LVL25:
 187 00ec C3F884C0 		str	ip, [r3, #132]
 188 00f0 C3F89000 		str	r0, [r3, #144]
 189              	.LVL26:
 190              	.LBE11:
 191              	.LBB14:
  58:subsystems/imu.c ****   INT32_RMAT_OF_EULERS(imu.body_to_imu_rmat, body_to_imu_eulers);
 192              		.loc 1 58 0 is_stmt 1 discriminator 6
 193 00f4 01FB01FC 		mul	ip, r1, r1
 194              	.LBB15:
 195 00f8 2248     		ldr	r0, .L7+8
 196              	.LBE15:
 197              	.LBE14:
 198              	.LBB19:
  57:subsystems/imu.c ****   INT32_QUAT_NORMALIZE(imu.body_to_imu_quat);
 199              		.loc 1 57 0 discriminator 6
 200 00fa C3F88860 		str	r6, [r3, #136]
 201              	.LBE19:
 202              	.LBB20:
 203              	.LBB16:
 204              		.loc 1 58 0 discriminator 6
 205 00fe B0F90040 		ldrsh	r4, [r0, #0]
 206              	.LBE16:
 207              	.LBB17:
 208 0102 B0F90200 		ldrsh	r0, [r0, #2]
 209              	.LBE17:
 210              	.LBB18:
 211 0106 6442     		negs	r4, r4
 212              	.LVL27:
 213              	.LBE18:
 214 0108 00FB02F6 		mul	r6, r0, r2
 215 010c 4FEAAC3C 		asr	ip, ip, #14
 216 0110 04FB02F8 		mul	r8, r4, r2
 217              	.LVL28:
 218 0114 C3F89C70 		str	r7, [r3, #156]
 219 0118 00FB0CF7 		mul	r7, r0, ip
 220 011c 04FB0CFC 		mul	ip, r4, ip
 221              	.LBE20:
 222              	.LBB21:
  57:subsystems/imu.c ****   INT32_QUAT_NORMALIZE(imu.body_to_imu_quat);
 223              		.loc 1 57 0 discriminator 6
 224 0120 C3F88C50 		str	r5, [r3, #140]
 225              	.LBE21:
 226              	.LBB22:
 227              		.loc 1 58 0 discriminator 6
 228 0124 01FB02F5 		mul	r5, r1, r2
 229 0128 B613     		asrs	r6, r6, #14
 230              	.LVL29:
 231 012a 4FEAA838 		asr	r8, r8, #14
 232              	.LVL30:
 233 012e C3F89460 		str	r6, [r3, #148]
 234 0132 06EBAC36 		add	r6, r6, ip, asr #14
 235              	.LVL31:
 236 0136 AD13     		asrs	r5, r5, #14
 237              	.LVL32:
 238 0138 C8EBA737 		rsb	r7, r8, r7, asr #14
 239 013c C3F8A460 		str	r6, [r3, #164]
 240 0140 04FB01F6 		mul	r6, r4, r1
 241 0144 4143     		muls	r1, r0, r1
 242              	.LVL33:
 243 0146 C3F8A070 		str	r7, [r3, #160]
 244 014a 6C43     		muls	r4, r5, r4
 245              	.LVL34:
 246 014c 00FB05F7 		mul	r7, r0, r5
 247 0150 5243     		muls	r2, r2, r2
 248              	.LVL35:
 249 0152 B613     		asrs	r6, r6, #14
 250              	.LVL36:
 251 0154 8913     		asrs	r1, r1, #14
 252 0156 06EBA736 		add	r6, r6, r7, asr #14
 253              	.LVL37:
 254 015a C1EBA434 		rsb	r4, r1, r4, asr #14
 255 015e 9213     		asrs	r2, r2, #14
 256              	.LVL38:
 257 0160 C3F89880 		str	r8, [r3, #152]
 258 0164 C3F8A850 		str	r5, [r3, #168]
 259 0168 C3F8AC60 		str	r6, [r3, #172]
 260 016c C3F8B040 		str	r4, [r3, #176]
 261 0170 C3F8B420 		str	r2, [r3, #180]
 262              	.LBE22:
  59:subsystems/imu.c **** 
  60:subsystems/imu.c ****   imu_impl_init();
  61:subsystems/imu.c **** }
 263              		.loc 1 61 0 discriminator 6
 264 0174 BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
  60:subsystems/imu.c ****   imu_impl_init();
 265              		.loc 1 60 0 discriminator 6
 266 0178 FFF7FEBF 		b	imu_impl_init
 267              	.LVL39:
 268              	.L8:
 269              		.align	2
 270              	.L7:
 271 017c 00000000 		.word	.LANCHOR0
 272 0180 00000000 		.word	pprz_trig_int
 273 0184 20190000 		.word	pprz_trig_int+6432
 274              		.cfi_endproc
 275              	.LFE4:
 277              		.section	.text.imu_float_init,"ax",%progbits
 278              		.align	1
 279              		.global	imu_float_init
 280              		.thumb
 281              		.thumb_func
 283              	imu_float_init:
 284              	.LFB5:
  62:subsystems/imu.c **** 
  63:subsystems/imu.c **** 
  64:subsystems/imu.c **** void imu_float_init(struct ImuFloat* imuf) {
 285              		.loc 1 64 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL40:
  65:subsystems/imu.c **** 
  66:subsystems/imu.c ****   /*
  67:subsystems/imu.c ****     Compute quaternion and rotation matrix
  68:subsystems/imu.c ****     for conversions between body and imu frame
  69:subsystems/imu.c ****   */
  70:subsystems/imu.c ****   EULERS_ASSIGN(imuf->body_to_imu_eulers,
 291              		.loc 1 70 0
 292 0000 0D4A     		ldr	r2, .L10
 293              	.LBB23:
  71:subsystems/imu.c **** 		IMU_BODY_TO_IMU_PHI, IMU_BODY_TO_IMU_THETA, IMU_BODY_TO_IMU_PSI);
  72:subsystems/imu.c ****   FLOAT_QUAT_OF_EULERS(imuf->body_to_imu_quat, imuf->body_to_imu_eulers);
  73:subsystems/imu.c ****   FLOAT_QUAT_NORMALIZE(imuf->body_to_imu_quat);
  74:subsystems/imu.c ****   FLOAT_RMAT_OF_EULERS(imuf->body_to_imu_rmat, imuf->body_to_imu_eulers);
 294              		.loc 1 74 0
 295 0002 0E49     		ldr	r1, .L10+4
 296              	.LBE23:
  70:subsystems/imu.c ****   EULERS_ASSIGN(imuf->body_to_imu_eulers,
 297              		.loc 1 70 0
 298 0004 8263     		str	r2, [r0, #56]	@ float
 299              	.LVL41:
 300              	.LBB24:
  72:subsystems/imu.c ****   FLOAT_QUAT_OF_EULERS(imuf->body_to_imu_quat, imuf->body_to_imu_eulers);
 301              		.loc 1 72 0
 302 0006 0E4A     		ldr	r2, .L10+8
 303              	.LBE24:
  70:subsystems/imu.c ****   EULERS_ASSIGN(imuf->body_to_imu_eulers,
 304              		.loc 1 70 0
 305 0008 0023     		movs	r3, #0
 306              	.LBB25:
  72:subsystems/imu.c ****   FLOAT_QUAT_OF_EULERS(imuf->body_to_imu_quat, imuf->body_to_imu_eulers);
 307              		.loc 1 72 0
 308 000a C263     		str	r2, [r0, #60]	@ float
 309              	.LBE25:
 310              	.LBB26:
  73:subsystems/imu.c ****   FLOAT_QUAT_NORMALIZE(imuf->body_to_imu_quat);
 311              		.loc 1 73 0
 312 000c 0D4A     		ldr	r2, .L10+12
 313              	.LBE26:
  70:subsystems/imu.c ****   EULERS_ASSIGN(imuf->body_to_imu_eulers,
 314              		.loc 1 70 0
 315 000e 0363     		str	r3, [r0, #48]	@ float
 316              	.LBB27:
  73:subsystems/imu.c ****   FLOAT_QUAT_NORMALIZE(imuf->body_to_imu_quat);
 317              		.loc 1 73 0
 318 0010 8264     		str	r2, [r0, #72]	@ float
 319              	.LBE27:
 320              	.LBB28:
 321              		.loc 1 74 0
 322 0012 0D4A     		ldr	r2, .L10+16
 323              	.LBE28:
  70:subsystems/imu.c ****   EULERS_ASSIGN(imuf->body_to_imu_eulers,
 324              		.loc 1 70 0
 325 0014 4363     		str	r3, [r0, #52]	@ float
 326              	.LBB29:
  72:subsystems/imu.c ****   FLOAT_QUAT_OF_EULERS(imuf->body_to_imu_quat, imuf->body_to_imu_eulers);
 327              		.loc 1 72 0
 328 0016 0364     		str	r3, [r0, #64]	@ float
 329 0018 4364     		str	r3, [r0, #68]	@ float
 330              	.LVL42:
 331              	.LBE29:
 332              	.LBB30:
 333              		.loc 1 74 0
 334 001a 0165     		str	r1, [r0, #80]	@ float
 335 001c 0366     		str	r3, [r0, #96]	@ float
 336 001e 4FF00041 		mov	r1, #-2147483648
 337 0022 4366     		str	r3, [r0, #100]	@ float
 338 0024 4FF07E53 		mov	r3, #1065353216
 339 0028 C264     		str	r2, [r0, #76]	@ float
 340 002a 4165     		str	r1, [r0, #84]	@ float
 341 002c 8265     		str	r2, [r0, #88]	@ float
 342 002e C265     		str	r2, [r0, #92]	@ float
 343 0030 8166     		str	r1, [r0, #104]	@ float
 344 0032 C366     		str	r3, [r0, #108]	@ float
 345              	.LBE30:
  75:subsystems/imu.c **** 
  76:subsystems/imu.c **** }
 346              		.loc 1 76 0
 347 0034 7047     		bx	lr
 348              	.L11:
 349 0036 00BF     		.align	2
 350              	.L10:
 351 0038 DB0F49BF 		.word	-1085730853
 352 003c F30435BF 		.word	-1087044365
 353 0040 5E836C3F 		.word	1064076126
 354 0044 16EFC3BE 		.word	-1094455530
 355 0048 F304353F 		.word	1060439283
 356              		.cfi_endproc
 357              	.LFE5:
 359              		.global	imu
 360              		.section	.bss.imu,"aw",%nobits
 361              		.align	2
 362              		.set	.LANCHOR0,. + 0
 365              	imu:
 366 0000 00000000 		.space	184
 366      00000000 
 366      00000000 
 366      00000000 
 366      00000000 
 367              		.text
 368              	.Letext0:
 369              		.file 2 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 370              		.file 3 "./math/pprz_algebra_int.h"
 371              		.file 4 "./math/pprz_algebra_float.h"
 372              		.file 5 "./subsystems/imu.h"
 373              		.file 6 "./subsystems/imu/imu_aspirin2.h"
 374              		.file 7 "./math/pprz_trig_int.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 imu.c
     /tmp/cccK4ofL.s:18     .text.imu_init:0000000000000000 $t
     /tmp/cccK4ofL.s:23     .text.imu_init:0000000000000000 imu_init
     /tmp/cccK4ofL.s:271    .text.imu_init:000000000000017c $d
     /tmp/cccK4ofL.s:278    .text.imu_float_init:0000000000000000 $t
     /tmp/cccK4ofL.s:283    .text.imu_float_init:0000000000000000 imu_float_init
     /tmp/cccK4ofL.s:351    .text.imu_float_init:0000000000000038 $d
     /tmp/cccK4ofL.s:365    .bss.imu:0000000000000000 imu
     /tmp/cccK4ofL.s:361    .bss.imu:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
imu_impl_init
pprz_trig_int
