   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"actuators_pwm_supervision.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.actuators_init,"ax",%progbits
  18              		.align	1
  19              		.global	actuators_init
  20              		.thumb
  21              		.thumb_func
  23              	actuators_init:
  24              	.LFB27:
  25              		.file 1 "firmwares/rotorcraft/actuators/actuators_pwm_supervision.c"
   1:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** /*
   2:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * Copyright (C) 2010-2012 The Paparazzi Team
   3:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  *
   4:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * This file is part of paparazzi.
   5:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  *
   6:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * it under the terms of the GNU General Public License as published by
   8:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * any later version.
  10:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  *
  11:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * GNU General Public License for more details.
  15:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  *
  16:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * You should have received a copy of the GNU General Public License
  17:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  * Boston, MA 02111-1307, USA.
  20:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  */
  21:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  22:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** /** @file actuators_pwm_supervision.h
  23:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  *  PWM actuators with supervision.
  24:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****  */
  25:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  26:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #include "generated/airframe.h"
  27:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #include "firmwares/rotorcraft/actuators.h"
  28:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #include "firmwares/rotorcraft/commands.h"
  29:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #include "subsystems/radio_control.h"
  30:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  31:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** /* warn if SUPERVISION_STOP_MOTOR is not define in the airframe file */
  32:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #ifndef SUPERVISION_STOP_MOTOR
  33:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #warning "STOP_MOTOR is not defined in the SUPERVISION section, are you sure you want to use the de
  34:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #endif
  35:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  36:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #include "actuators_pwm_supervision.h"
  37:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  38:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** /* let's start butchery now and use the actuators_pwm arch functions */
  39:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #include "firmwares/rotorcraft/actuators/actuators_pwm.h"
  40:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  41:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #define actuators actuators_pwm_values
  42:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #define Actuator(_x) actuators_pwm_values[_x]
  43:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** #define ActuatorsCommit() {}
  44:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  45:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** /** actuator PWM values in usec. */
  46:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** int32_t actuators_pwm_values[ACTUATORS_PWM_NB];
  47:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  48:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** void actuators_init(void)
  49:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** {
  26              		.loc 1 49 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 3, -8
  50:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   supervision_init();
  35              		.loc 1 50 0
  36 0002 FFF7FEFF 		bl	supervision_init
  51:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   actuators_pwm_arch_init();
  52:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** }
  37              		.loc 1 52 0
  38 0006 BDE80840 		pop	{r3, lr}
  51:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   actuators_pwm_arch_init();
  39              		.loc 1 51 0
  40 000a FFF7FEBF 		b	actuators_pwm_arch_init
  41              		.cfi_endproc
  42              	.LFE27:
  44              		.section	.text.actuators_set,"ax",%progbits
  45              		.align	1
  46              		.global	actuators_set
  47              		.thumb
  48              		.thumb_func
  50              	actuators_set:
  51              	.LFB28:
  53:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  54:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** void actuators_set(bool_t motors_on) {
  52              		.loc 1 54 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              	.LVL0:
  57 0000 08B5     		push	{r3, lr}
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 14, -4
  61              		.cfi_offset 3, -8
  55:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  56:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   /* set normal control surface actuators, i.e. servos */
  57:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   SetActuatorsFromCommands(commands);
  58:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  59:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   /* run supervision for actuators (motor controllers) that need mixing */
  60:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   supervision_run(motors_on, FALSE, commands);
  62              		.loc 1 60 0
  63 0002 0021     		movs	r1, #0
  64 0004 084A     		ldr	r2, .L3
  65 0006 FFF7FEFF 		bl	supervision_run
  66              	.LVL1:
  67              	.LBB2:
  61:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  62:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   for (int i = 0; i < SUPERVISION_NB_MOTOR; i++) {
  63:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****     actuators_pwm_values[i] = supervision.commands[i];
  68              		.loc 1 63 0
  69 000a 084A     		ldr	r2, .L3+4
  70 000c 084B     		ldr	r3, .L3+8
  71 000e 1168     		ldr	r1, [r2, #0]
  72 0010 1960     		str	r1, [r3, #0]
  73              	.LVL2:
  74 0012 5168     		ldr	r1, [r2, #4]
  75 0014 5960     		str	r1, [r3, #4]
  76              	.LVL3:
  77 0016 9168     		ldr	r1, [r2, #8]
  78 0018 D268     		ldr	r2, [r2, #12]
  79 001a 9960     		str	r1, [r3, #8]
  80              	.LVL4:
  81 001c DA60     		str	r2, [r3, #12]
  82              	.LVL5:
  83              	.LBE2:
  64:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   }
  65:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   actuators_pwm_commit();
  66:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** 
  67:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c **** }
  84              		.loc 1 67 0
  85 001e BDE80840 		pop	{r3, lr}
  65:firmwares/rotorcraft/actuators/actuators_pwm_supervision.c ****   actuators_pwm_commit();
  86              		.loc 1 65 0
  87 0022 FFF7FEBF 		b	actuators_pwm_commit
  88              	.L4:
  89 0026 00BF     		.align	2
  90              	.L3:
  91 0028 00000000 		.word	commands
  92 002c 00000000 		.word	supervision
  93 0030 00000000 		.word	.LANCHOR0
  94              		.cfi_endproc
  95              	.LFE28:
  97              		.global	actuators_pwm_values
  98              		.section	.bss.actuators_pwm_values,"aw",%nobits
  99              		.align	2
 100              		.set	.LANCHOR0,. + 0
 103              	actuators_pwm_values:
 104 0000 00000000 		.space	32
 104      00000000 
 104      00000000 
 104      00000000 
 104      00000000 
 105              		.text
 106              	.Letext0:
 107              		.file 2 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 108              		.file 3 "/home/uav/paparazzi/sw/include/std.h"
 109              		.file 4 "./paparazzi.h"
 110              		.file 5 "./subsystems/radio_control.h"
 111              		.file 6 "./firmwares/rotorcraft/actuators/supervision.h"
 112              		.file 7 "./firmwares/rotorcraft/commands.h"
 113              		.file 8 "./firmwares/rotorcraft/actuators/actuators_pwm.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 actuators_pwm_supervision.c
     /tmp/cch75vet.s:18     .text.actuators_init:0000000000000000 $t
     /tmp/cch75vet.s:23     .text.actuators_init:0000000000000000 actuators_init
     /tmp/cch75vet.s:45     .text.actuators_set:0000000000000000 $t
     /tmp/cch75vet.s:50     .text.actuators_set:0000000000000000 actuators_set
     /tmp/cch75vet.s:91     .text.actuators_set:0000000000000028 $d
     /tmp/cch75vet.s:103    .bss.actuators_pwm_values:0000000000000000 actuators_pwm_values
     /tmp/cch75vet.s:99     .bss.actuators_pwm_values:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
supervision_init
actuators_pwm_arch_init
supervision_run
actuators_pwm_commit
commands
supervision
