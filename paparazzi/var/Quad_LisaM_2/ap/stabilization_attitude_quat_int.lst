   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stabilization_attitude_quat_int.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.stabilization_attitude_init,"ax",%progbits
  18              		.align	1
  19              		.global	stabilization_attitude_init
  20              		.thumb
  21              		.thumb_func
  23              	stabilization_attitude_init:
  24              	.LFB31:
  25              		.file 1 "firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c"
   1:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** /*
   2:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * Copyright (C) 2008-2009 Antoine Drouin <poinix@gmail.com>
   3:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  *
   4:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * This file is part of paparazzi.
   5:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  *
   6:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * it under the terms of the GNU General Public License as published by
   8:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * any later version.
  10:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  *
  11:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * GNU General Public License for more details.
  15:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  *
  16:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * You should have received a copy of the GNU General Public License
  17:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * Boston, MA 02111-1307, USA.
  20:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  */
  21:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  22:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** /** @file stabilization_attitude_quat_int.c
  23:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  * Rotorcraft quaternion attitude stabilization
  24:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****  */
  25:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  26:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #include "firmwares/rotorcraft/stabilization.h"
  27:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #include "firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h"
  28:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  29:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #if USE_SETPOINTS_WITH_TRANSITIONS
  30:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #include "firmwares/rotorcraft/stabilization/quat_setpoint_int.h"
  31:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #endif
  32:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  33:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #include <stdio.h>
  34:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #include "math/pprz_algebra_float.h"
  35:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #include "math/pprz_algebra_int.h"
  36:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #include "subsystems/ahrs.h"
  37:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #include "generated/airframe.h"
  38:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  39:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** struct Int32AttitudeGains stabilization_gains = {
  40:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   {STABILIZATION_ATTITUDE_PHI_PGAIN, STABILIZATION_ATTITUDE_THETA_PGAIN, STABILIZATION_ATTITUDE_PSI
  41:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   {STABILIZATION_ATTITUDE_PHI_DGAIN, STABILIZATION_ATTITUDE_THETA_DGAIN, STABILIZATION_ATTITUDE_PSI
  42:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   {STABILIZATION_ATTITUDE_PHI_DDGAIN, STABILIZATION_ATTITUDE_THETA_DDGAIN, STABILIZATION_ATTITUDE_P
  43:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   {STABILIZATION_ATTITUDE_PHI_IGAIN, STABILIZATION_ATTITUDE_THETA_IGAIN, STABILIZATION_ATTITUDE_PSI
  44:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** };
  45:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  46:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** /* warn if some gains are still negative */
  47:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #if (STABILIZATION_ATTITUDE_PHI_PGAIN < 0) ||   \
  48:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   (STABILIZATION_ATTITUDE_THETA_PGAIN < 0) ||   \
  49:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   (STABILIZATION_ATTITUDE_PSI_PGAIN < 0)   ||   \
  50:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   (STABILIZATION_ATTITUDE_PHI_DGAIN < 0)   ||   \
  51:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   (STABILIZATION_ATTITUDE_THETA_DGAIN < 0) ||   \
  52:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   (STABILIZATION_ATTITUDE_PSI_DGAIN < 0)   ||   \
  53:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   (STABILIZATION_ATTITUDE_PHI_IGAIN < 0)   ||   \
  54:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   (STABILIZATION_ATTITUDE_THETA_IGAIN < 0) ||   \
  55:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   (STABILIZATION_ATTITUDE_PSI_IGAIN  < 0)
  56:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #warning "ALL control gains are now positive!!!"
  57:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #endif
  58:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  59:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** struct Int32Quat stabilization_att_sum_err_quat;
  60:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** struct Int32Eulers stabilization_att_sum_err;
  61:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  62:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** int32_t stabilization_att_fb_cmd[COMMANDS_NB];
  63:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** int32_t stabilization_att_ff_cmd[COMMANDS_NB];
  64:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  65:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #define IERROR_SCALE 1024
  66:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #define GAIN_PRESCALER_FF 48
  67:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #define GAIN_PRESCALER_P 48
  68:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #define GAIN_PRESCALER_D 48
  69:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #define GAIN_PRESCALER_I 48
  70:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  71:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** void stabilization_attitude_init(void) {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 3, -8
  72:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  73:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_attitude_ref_init();
  35              		.loc 1 73 0
  36 0002 FFF7FEFF 		bl	stabilization_attitude_ref_init
  74:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  75:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_ZERO( stabilization_att_sum_err_quat );
  37              		.loc 1 75 0
  38 0006 064A     		ldr	r2, .L2
  39 0008 4FF40043 		mov	r3, #32768
  40 000c 1360     		str	r3, [r2, #0]
  41 000e 0023     		movs	r3, #0
  42 0010 5360     		str	r3, [r2, #4]
  43 0012 9360     		str	r3, [r2, #8]
  44 0014 D360     		str	r3, [r2, #12]
  76:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT_EULERS_ZERO( stabilization_att_sum_err );
  45              		.loc 1 76 0
  46 0016 034A     		ldr	r2, .L2+4
  47 0018 1360     		str	r3, [r2, #0]
  48 001a 5360     		str	r3, [r2, #4]
  49 001c 9360     		str	r3, [r2, #8]
  77:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** }
  50              		.loc 1 77 0
  51 001e 08BD     		pop	{r3, pc}
  52              	.L3:
  53              		.align	2
  54              	.L2:
  55 0020 00000000 		.word	.LANCHOR0
  56 0024 00000000 		.word	.LANCHOR1
  57              		.cfi_endproc
  58              	.LFE31:
  60              		.section	.text.stabilization_attitude_enter,"ax",%progbits
  61              		.align	1
  62              		.global	stabilization_attitude_enter
  63              		.thumb
  64              		.thumb_func
  66              	stabilization_attitude_enter:
  67              	.LFB32:
  78:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  79:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** void stabilization_attitude_enter(void) {
  68              		.loc 1 79 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 08B5     		push	{r3, lr}
  73              	.LCFI1:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 14, -4
  76              		.cfi_offset 3, -8
  80:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  81:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #if !USE_SETPOINTS_WITH_TRANSITIONS
  82:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* reset psi setpoint to current psi angle */
  83:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stab_att_sp_euler.psi = ahrs.ltp_to_body_euler.psi;
  77              		.loc 1 83 0
  78 0002 094B     		ldr	r3, .L5
  79 0004 5A6E     		ldr	r2, [r3, #100]
  80 0006 094B     		ldr	r3, .L5+4
  81 0008 9A60     		str	r2, [r3, #8]
  84:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #endif
  85:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  86:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_attitude_ref_enter();
  82              		.loc 1 86 0
  83 000a FFF7FEFF 		bl	stabilization_attitude_ref_enter
  87:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  88:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_ZERO(stabilization_att_sum_err_quat);
  84              		.loc 1 88 0
  85 000e 084A     		ldr	r2, .L5+8
  86 0010 4FF40043 		mov	r3, #32768
  87 0014 1360     		str	r3, [r2, #0]
  88 0016 0023     		movs	r3, #0
  89 0018 5360     		str	r3, [r2, #4]
  90 001a 9360     		str	r3, [r2, #8]
  91 001c D360     		str	r3, [r2, #12]
  89:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT_EULERS_ZERO(stabilization_att_sum_err);
  92              		.loc 1 89 0
  93 001e 054A     		ldr	r2, .L5+12
  94 0020 1360     		str	r3, [r2, #0]
  95 0022 5360     		str	r3, [r2, #4]
  96 0024 9360     		str	r3, [r2, #8]
  90:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** }
  97              		.loc 1 90 0
  98 0026 08BD     		pop	{r3, pc}
  99              	.L6:
 100              		.align	2
 101              	.L5:
 102 0028 00000000 		.word	ahrs
 103 002c 00000000 		.word	stab_att_sp_euler
 104 0030 00000000 		.word	.LANCHOR0
 105 0034 00000000 		.word	.LANCHOR1
 106              		.cfi_endproc
 107              	.LFE32:
 109              		.global	__aeabi_i2f
 110              		.global	__aeabi_fmul
 111              		.global	__aeabi_f2iz
 112              		.global	__aeabi_fadd
 113              		.section	.text.stabilization_attitude_run,"ax",%progbits
 114              		.align	1
 115              		.global	stabilization_attitude_run
 116              		.thumb
 117              		.thumb_func
 119              	stabilization_attitude_run:
 120              	.LFB35:
  91:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  92:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #define OFFSET_AND_ROUND(_a, _b) (((_a)+(1<<((_b)-1)))>>(_b))
  93:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #define OFFSET_AND_ROUND2(_a, _b) (((_a)+(1<<((_b)-1))-((_a)<0?1:0))>>(_b))
  94:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  95:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** static void attitude_run_ff(int32_t ff_commands[], struct Int32AttitudeGains *gains, struct Int32Ra
  96:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** {
  97:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* Compute feedforward based on reference acceleration */
  98:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
  99:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   ff_commands[COMMAND_ROLL]  = GAIN_PRESCALER_FF * gains->dd.x * RATE_FLOAT_OF_BFP(ref_accel->p) / 
 100:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   ff_commands[COMMAND_PITCH] = GAIN_PRESCALER_FF * gains->dd.y * RATE_FLOAT_OF_BFP(ref_accel->q) / 
 101:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   ff_commands[COMMAND_YAW]   = GAIN_PRESCALER_FF * gains->dd.z * RATE_FLOAT_OF_BFP(ref_accel->r) / 
 102:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** }
 103:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 104:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** static void attitude_run_fb(int32_t fb_commands[], struct Int32AttitudeGains *gains, struct Int32Qu
 105:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     struct Int32Rates *rate_err, struct Int32Quat *sum_err)
 106:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** {
 107:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /*  PID feedback */
 108:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   fb_commands[COMMAND_ROLL] =
 109:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.x  * QUAT1_FLOAT_OF_BFP(att_err->qx) / 4 +
 110:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.x  * RATE_FLOAT_OF_BFP(rate_err->p) / 16 +
 111:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_I * gains->i.x  * QUAT1_FLOAT_OF_BFP(sum_err->qx) / 2;
 112:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 113:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   fb_commands[COMMAND_PITCH] =
 114:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.y  * QUAT1_FLOAT_OF_BFP(att_err->qy) / 4 +
 115:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.y  * RATE_FLOAT_OF_BFP(rate_err->q)  / 16 +
 116:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_I * gains->i.y  * QUAT1_FLOAT_OF_BFP(sum_err->qy) / 2;
 117:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 118:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   fb_commands[COMMAND_YAW] =
 119:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.z  * QUAT1_FLOAT_OF_BFP(att_err->qz) / 4 +
 120:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.z  * RATE_FLOAT_OF_BFP(rate_err->r)  / 16 +
 121:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_I * gains->i.z  * QUAT1_FLOAT_OF_BFP(sum_err->qz) / 2;
 122:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 123:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** }
 124:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 125:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** void stabilization_attitude_run(bool_t enable_integrator) {
 121              		.loc 1 125 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 32
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL0:
 126 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 36
 129              		.cfi_offset 14, -4
 130              		.cfi_offset 11, -8
 131              		.cfi_offset 10, -12
 132              		.cfi_offset 9, -16
 133              		.cfi_offset 8, -20
 134              		.cfi_offset 7, -24
 135              		.cfi_offset 6, -28
 136              		.cfi_offset 5, -32
 137              		.cfi_offset 4, -36
 138 0004 89B0     		sub	sp, sp, #36
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 72
 141              		.loc 1 125 0
 142 0006 0446     		mov	r4, r0
 126:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 127:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /*
 128:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****    * Update reference
 129:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****    */
 130:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_attitude_ref_update();
 143              		.loc 1 130 0
 144 0008 FFF7FEFF 		bl	stabilization_attitude_ref_update
 145              	.LVL1:
 131:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 132:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /*
 133:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****    * Compute errors for feedback
 134:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****    */
 135:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 136:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* attitude error                          */
 137:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   struct Int32Quat att_err;
 138:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_INV_COMP(att_err, ahrs.ltp_to_body_quat, stab_att_ref_quat);
 146              		.loc 1 138 0
 147 000c A749     		ldr	r1, .L30
 148 000e A848     		ldr	r0, .L30+4
 149 0010 CE6C     		ldr	r6, [r1, #76]
 150 0012 0268     		ldr	r2, [r0, #0]
 151 0014 0D6D     		ldr	r5, [r1, #80]
 152 0016 4768     		ldr	r7, [r0, #4]
 153 0018 8B6D     		ldr	r3, [r1, #88]
 154 001a D0F80CE0 		ldr	lr, [r0, #12]
 155 001e 496D     		ldr	r1, [r1, #84]
 156 0020 8068     		ldr	r0, [r0, #8]
 157 0022 07FB05F8 		mul	r8, r7, r5
 158 0026 00FB01FC 		mul	ip, r0, r1
 159 002a 02FB0688 		mla	r8, r2, r6, r8
 160 002e 0EFB03CC 		mla	ip, lr, r3, ip
 161 0032 07FB06F9 		mul	r9, r7, r6
 162 0036 C444     		add	ip, r8, ip
 163              	.LVL2:
 164 0038 00FB03F8 		mul	r8, r0, r3
 165 003c 02FB1599 		mls	r9, r2, r5, r9
 166 0040 0EFB1188 		mls	r8, lr, r1, r8
 167 0044 C144     		add	r9, r9, r8
 168 0046 0EFB05F8 		mul	r8, lr, r5
 169 004a 00FB0688 		mla	r8, r0, r6, r8
 170 004e 0EFB06F6 		mul	r6, lr, r6
 171 0052 00FB1565 		mls	r5, r0, r5, r6
 172 0056 07FB0155 		mla	r5, r7, r1, r5
 173 005a 02FB1188 		mls	r8, r2, r1, r8
 174 005e 02FB1355 		mls	r5, r2, r3, r5
 175 0062 07FB1388 		mls	r8, r7, r3, r8
 176 0066 ED13     		asrs	r5, r5, #15
 139:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* wrap it in the shortest direction       */
 140:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_WRAP_SHORTEST(att_err);
 177              		.loc 1 140 0
 178 0068 5FEAEC36 		asrs	r6, ip, #15
 138:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_INV_COMP(att_err, ahrs.ltp_to_body_quat, stab_att_ref_quat);
 179              		.loc 1 138 0
 180 006c 4FEAE939 		asr	r9, r9, #15
 181              	.LVL3:
 182 0070 4FEAE838 		asr	r8, r8, #15
 183              	.LVL4:
 184              		.loc 1 140 0
 185 0074 05D5     		bpl	.L8
 186              		.loc 1 140 0 is_stmt 0 discriminator 1
 187 0076 7642     		negs	r6, r6
 188              	.LVL5:
 189 0078 C9F10009 		rsb	r9, r9, #0
 190              	.LVL6:
 191 007c C8F10008 		rsb	r8, r8, #0
 192              	.LVL7:
 193 0080 6D42     		negs	r5, r5
 194              	.LVL8:
 195              	.L8:
 196              	.LBB33:
 197              	.LBB34:
 141:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_NORMALIZE(att_err);
 198              		.loc 1 141 0 is_stmt 1
 199 0082 09FB09F0 		mul	r0, r9, r9
 200 0086 08FB08F3 		mul	r3, r8, r8
 201 008a 06FB0600 		mla	r0, r6, r6, r0
 202 008e 05FB0533 		mla	r3, r5, r5, r3
 203              	.LVL9:
 204 0092 C318     		adds	r3, r0, r3
 205              	.LVL10:
 206 0094 0FD0     		beq	.L23
 207              	.LVL11:
 208              	.LBB35:
 209              		.loc 1 141 0 is_stmt 0 discriminator 2
 210 0096 1F46     		mov	r7, r3
 211 0098 2822     		movs	r2, #40
 212 009a 00E0     		b	.L11
 213              	.LVL12:
 214              	.L24:
 215              		.loc 1 141 0
 216 009c 0746     		mov	r7, r0
 217              	.LVL13:
 218              	.L11:
 219              		.loc 1 141 0 discriminator 3
 220 009e B3FBF7F0 		udiv	r0, r3, r7
 221              	.LVL14:
 222 00a2 C019     		adds	r0, r0, r7
 223              	.LVL15:
 224 00a4 4008     		lsrs	r0, r0, #1
 225              	.LVL16:
 226 00a6 3F1A     		subs	r7, r7, r0
 227              	.LVL17:
 228 00a8 012F     		cmp	r7, #1
 229 00aa 05D9     		bls	.L9
 230              		.loc 1 141 0 discriminator 4
 231 00ac 013A     		subs	r2, r2, #1
 232 00ae D2B2     		uxtb	r2, r2
 233 00b0 002A     		cmp	r2, #0
 234 00b2 F3D1     		bne	.L24
 235 00b4 00E0     		b	.L9
 236              	.LVL18:
 237              	.L23:
 238              	.LBE35:
 239              		.loc 1 141 0
 240 00b6 1846     		mov	r0, r3
 241              	.L9:
 242              	.LVL19:
 243              	.LBE34:
 244              	.LBE33:
 142:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 143:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /*  rate error                */
 144:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   struct Int32Rates rate_err;
 145:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   RATES_DIFF(rate_err, stab_att_ref_rate, ahrs.body_rate);
 245              		.loc 1 145 0 is_stmt 1 discriminator 6
 246 00b8 7E4A     		ldr	r2, .L30+8
 247 00ba 7C4B     		ldr	r3, .L30
 248              	.LVL20:
 249              	.LBB36:
 141:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_NORMALIZE(att_err);
 250              		.loc 1 141 0 discriminator 6
 251 00bc ED03     		lsls	r5, r5, #15
 252              	.LVL21:
 253 00be 95FBF0F5 		sdiv	r5, r5, r0
 254              	.LBE36:
 255              		.loc 1 145 0 discriminator 6
 256 00c2 D3F88C10 		ldr	r1, [r3, #140]
 257              	.LBB37:
 141:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_NORMALIZE(att_err);
 258              		.loc 1 141 0 discriminator 6
 259 00c6 0495     		str	r5, [sp, #16]
 260              	.LBE37:
 261              		.loc 1 145 0 discriminator 6
 262 00c8 1568     		ldr	r5, [r2, #0]
 263              	.LBB38:
 141:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_NORMALIZE(att_err);
 264              		.loc 1 141 0 discriminator 6
 265 00ca 4FEAC939 		lsl	r9, r9, #15
 266              	.LVL22:
 267              	.LBE38:
 268              		.loc 1 145 0 discriminator 6
 269 00ce 691A     		subs	r1, r5, r1
 270 00d0 0591     		str	r1, [sp, #20]
 271 00d2 5568     		ldr	r5, [r2, #4]
 272 00d4 D3F89010 		ldr	r1, [r3, #144]
 273 00d8 9268     		ldr	r2, [r2, #8]
 274 00da D3F89430 		ldr	r3, [r3, #148]
 275 00de 691A     		subs	r1, r5, r1
 276              	.LBB39:
 141:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_NORMALIZE(att_err);
 277              		.loc 1 141 0 discriminator 6
 278 00e0 4FEAC838 		lsl	r8, r8, #15
 279              	.LVL23:
 280              	.LBE39:
 281              		.loc 1 145 0 discriminator 6
 282 00e4 D31A     		subs	r3, r2, r3
 283              	.LBB40:
 141:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_NORMALIZE(att_err);
 284              		.loc 1 141 0 discriminator 6
 285 00e6 99FBF0F9 		sdiv	r9, r9, r0
 286              	.LVL24:
 287 00ea 98FBF0F8 		sdiv	r8, r8, r0
 288              	.LVL25:
 289              	.LBE40:
 290              		.loc 1 145 0 discriminator 6
 291 00ee 0691     		str	r1, [sp, #24]
 292              	.LVL26:
 293 00f0 0793     		str	r3, [sp, #28]
 294              	.LVL27:
 295 00f2 714D     		ldr	r5, .L30+12
 146:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 147:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* integrated error */
 148:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   if (enable_integrator) {
 296              		.loc 1 148 0 discriminator 6
 297 00f4 002C     		cmp	r4, #0
 298 00f6 00F0E380 		beq	.L12
 299              	.LBB41:
 141:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_NORMALIZE(att_err);
 300              		.loc 1 141 0
 301 00fa F603     		lsls	r6, r6, #15
 302              	.LVL28:
 303              	.LBE41:
 304              	.LBB42:
 149:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     struct Int32Quat new_sum_err, scaled_att_err;
 150:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     /* update accumulator */
 151:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     scaled_att_err.qi = att_err.qi;
 152:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     scaled_att_err.qx = att_err.qx / IERROR_SCALE;
 153:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     scaled_att_err.qy = att_err.qy / IERROR_SCALE;
 154:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     scaled_att_err.qz = att_err.qz / IERROR_SCALE;
 305              		.loc 1 154 0
 306 00fc 049B     		ldr	r3, [sp, #16]
 307              	.LVL29:
 308              	.LBE42:
 309              	.LBB50:
 141:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_NORMALIZE(att_err);
 310              		.loc 1 141 0
 311 00fe 96FBF0F0 		sdiv	r0, r6, r0
 312              	.LVL30:
 313              	.LBE50:
 314              	.LBB51:
 152:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     scaled_att_err.qx = att_err.qx / IERROR_SCALE;
 315              		.loc 1 152 0
 316 0102 4FF4806E 		mov	lr, #1024
 155:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     INT32_QUAT_COMP(new_sum_err, stabilization_att_sum_err_quat, scaled_att_err);
 317              		.loc 1 155 0
 318 0106 95E89000 		ldmia	r5, {r4, r7}
 152:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     scaled_att_err.qx = att_err.qx / IERROR_SCALE;
 319              		.loc 1 152 0
 320 010a 99FBFEF2 		sdiv	r2, r9, lr
 321              	.LVL31:
 153:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     scaled_att_err.qy = att_err.qy / IERROR_SCALE;
 322              		.loc 1 153 0
 323 010e 98FBFEFC 		sdiv	ip, r8, lr
 324              	.LVL32:
 325              		.loc 1 155 0
 326 0112 E968     		ldr	r1, [r5, #12]
 327              	.LVL33:
 154:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     scaled_att_err.qz = att_err.qz / IERROR_SCALE;
 328              		.loc 1 154 0
 329 0114 93FBFEFE 		sdiv	lr, r3, lr
 330              	.LVL34:
 331              		.loc 1 155 0
 332 0118 00FB04FA 		mul	sl, r0, r4
 333 011c AB68     		ldr	r3, [r5, #8]
 334 011e 00FB07F5 		mul	r5, r0, r7
 335 0122 02FB17AA 		mls	sl, r2, r7, sl
 336 0126 02FB0455 		mla	r5, r2, r4, r5
 337 012a 0CFB13AA 		mls	sl, ip, r3, sl
 338 012e 0EFB0355 		mla	r5, lr, r3, r5
 339 0132 00FB03F6 		mul	r6, r0, r3
 340 0136 0CFB04FB 		mul	fp, ip, r4
 341 013a 02FB0166 		mla	r6, r2, r1, r6
 342 013e 0EFB11AA 		mls	sl, lr, r1, sl
 343 0142 0CFB1155 		mls	r5, ip, r1, r5
 344 0146 0EFB17BB 		mls	fp, lr, r7, fp
 345 014a 4143     		muls	r1, r0, r1
 346 014c 0CFB07F7 		mul	r7, ip, r7
 347 0150 02FB1313 		mls	r3, r2, r3, r1
 348 0154 5E44     		add	r6, fp, r6
 349 0156 0EFB0477 		mla	r7, lr, r4, r7
 350 015a ED13     		asrs	r5, r5, #15
 351 015c F613     		asrs	r6, r6, #15
 352              	.LBB43:
 353              	.LBB44:
 156:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     INT32_QUAT_NORMALIZE(new_sum_err);
 354              		.loc 1 156 0
 355 015e 05FB05F1 		mul	r1, r5, r5
 356 0162 06FB06F2 		mul	r2, r6, r6
 357              	.LVL35:
 358              	.LBE44:
 359              	.LBE43:
 155:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     INT32_QUAT_COMP(new_sum_err, stabilization_att_sum_err_quat, scaled_att_err);
 360              		.loc 1 155 0
 361 0166 FB18     		adds	r3, r7, r3
 362 0168 DB13     		asrs	r3, r3, #15
 363 016a 4FEAEA3A 		asr	sl, sl, #15
 364              	.LVL36:
 365              	.LBB47:
 366              	.LBB46:
 367              		.loc 1 156 0
 368 016e 0AFB0A11 		mla	r1, sl, sl, r1
 369 0172 03FB0322 		mla	r2, r3, r3, r2
 370              	.LVL37:
 371 0176 8918     		adds	r1, r1, r2
 372              	.LVL38:
 373 0178 0FD0     		beq	.L25
 374              	.LVL39:
 375              	.LBB45:
 376              		.loc 1 156 0 is_stmt 0 discriminator 2
 377 017a 0A46     		mov	r2, r1
 378              	.LVL40:
 379 017c 2820     		movs	r0, #40
 380 017e 00E0     		b	.L15
 381              	.LVL41:
 382              	.L26:
 383              		.loc 1 156 0
 384 0180 2246     		mov	r2, r4
 385              	.LVL42:
 386              	.L15:
 387              		.loc 1 156 0 discriminator 3
 388 0182 B1FBF2F4 		udiv	r4, r1, r2
 389              	.LVL43:
 390 0186 A418     		adds	r4, r4, r2
 391              	.LVL44:
 392 0188 6408     		lsrs	r4, r4, #1
 393              	.LVL45:
 394 018a 121B     		subs	r2, r2, r4
 395              	.LVL46:
 396 018c 012A     		cmp	r2, #1
 397 018e 05D9     		bls	.L13
 398              		.loc 1 156 0 discriminator 4
 399 0190 0138     		subs	r0, r0, #1
 400 0192 C0B2     		uxtb	r0, r0
 401 0194 0028     		cmp	r0, #0
 402 0196 F3D1     		bne	.L26
 403 0198 00E0     		b	.L13
 404              	.LVL47:
 405              	.L25:
 406              	.LBE45:
 407              		.loc 1 156 0
 408 019a 0C46     		mov	r4, r1
 409              	.LVL48:
 410              	.L13:
 411              	.LBE46:
 412              		.loc 1 156 0 discriminator 6
 413 019c 4FEACA37 		lsl	r7, sl, #15
 414 01a0 DB03     		lsls	r3, r3, #15
 415              	.LVL49:
 416 01a2 ED03     		lsls	r5, r5, #15
 417              	.LVL50:
 418 01a4 F603     		lsls	r6, r6, #15
 419              	.LVL51:
 420 01a6 95FBF4F5 		sdiv	r5, r5, r4
 421 01aa 96FBF4F6 		sdiv	r6, r6, r4
 422 01ae 97FBF4F7 		sdiv	r7, r7, r4
 423              	.LVL52:
 424 01b2 93FBF4F4 		sdiv	r4, r3, r4
 425              	.LVL53:
 426              	.LBE47:
 157:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     QUAT_COPY(stabilization_att_sum_err_quat, new_sum_err);
 427              		.loc 1 157 0 is_stmt 1 discriminator 6
 428 01b6 404B     		ldr	r3, .L30+12
 429              	.LBB48:
 158:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     INT32_EULERS_OF_QUAT(stabilization_att_sum_err, stabilization_att_sum_err_quat);
 430              		.loc 1 158 0 discriminator 6
 431 01b8 05FB07F0 		mul	r0, r5, r7
 432              	.LBE48:
 157:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     QUAT_COPY(stabilization_att_sum_err_quat, new_sum_err);
 433              		.loc 1 157 0 discriminator 6
 434 01bc 1F60     		str	r7, [r3, #0]
 435 01be 5D60     		str	r5, [r3, #4]
 436 01c0 DC60     		str	r4, [r3, #12]
 437              	.LVL54:
 438 01c2 9E60     		str	r6, [r3, #8]
 439              	.LBB49:
 440              		.loc 1 158 0 discriminator 6
 441 01c4 04FB06F3 		mul	r3, r4, r6
 442 01c8 C013     		asrs	r0, r0, #15
 443 01ca 00EBE330 		add	r0, r0, r3, asr #15
 444 01ce 40F31000 		sbfx	r0, r0, #0, #17
 445 01d2 FFF7FEFF 		bl	__aeabi_i2f
 446              	.LVL55:
 447 01d6 4FF06251 		mov	r1, #947912704
 448 01da FFF7FEFF 		bl	__aeabi_fmul
 449 01de 06FB06FA 		mul	sl, r6, r6
 450 01e2 8346     		mov	fp, r0
 451 01e4 05FB05F0 		mul	r0, r5, r5
 452 01e8 4FEAEA3A 		asr	sl, sl, #15
 453              	.LVL56:
 454 01ec 0AEBE030 		add	r0, sl, r0, asr #15
 455 01f0 40F31000 		sbfx	r0, r0, #0, #17
 456 01f4 C0F58040 		rsb	r0, r0, #16384
 457 01f8 FFF7FEFF 		bl	__aeabi_i2f
 458 01fc 4FF06251 		mov	r1, #947912704
 459 0200 FFF7FEFF 		bl	__aeabi_fmul
 460 0204 0146     		mov	r1, r0
 461 0206 5846     		mov	r0, fp
 462 0208 FFF7FEFF 		bl	atan2f
 463 020c 8346     		mov	fp, r0
 464              	.LVL57:
 465 020e 06FB07F0 		mul	r0, r6, r7
 466              	.LVL58:
 467 0212 04FB05F3 		mul	r3, r4, r5
 468 0216 C013     		asrs	r0, r0, #15
 469 0218 C0EBE330 		rsb	r0, r0, r3, asr #15
 470 021c 40F31000 		sbfx	r0, r0, #0, #17
 471 0220 FFF7FEFF 		bl	__aeabi_i2f
 472 0224 4FF06251 		mov	r1, #947912704
 473 0228 FFF7FEFF 		bl	__aeabi_fmul
 474 022c FFF7FEFF 		bl	asinf
 475 0230 6743     		muls	r7, r4, r7
 476              	.LVL59:
 477 0232 7543     		muls	r5, r6, r5
 478              	.LVL60:
 479 0234 FF13     		asrs	r7, r7, #15
 480              	.LVL61:
 481 0236 0346     		mov	r3, r0
 482              	.LVL62:
 483 0238 07EBE530 		add	r0, r7, r5, asr #15
 484              	.LVL63:
 485 023c 40F31000 		sbfx	r0, r0, #0, #17
 486 0240 0393     		str	r3, [sp, #12]
 487 0242 FFF7FEFF 		bl	__aeabi_i2f
 488              	.LVL64:
 489 0246 4FF06251 		mov	r1, #947912704
 490 024a FFF7FEFF 		bl	__aeabi_fmul
 491 024e 6443     		muls	r4, r4, r4
 492              	.LVL65:
 493 0250 0AEBE43A 		add	sl, sl, r4, asr #15
 494              	.LVL66:
 495 0254 0546     		mov	r5, r0
 496 0256 4AF31000 		sbfx	r0, sl, #0, #17
 497 025a C0F58040 		rsb	r0, r0, #16384
 498 025e FFF7FEFF 		bl	__aeabi_i2f
 499 0262 4FF06251 		mov	r1, #947912704
 500 0266 FFF7FEFF 		bl	__aeabi_fmul
 501 026a 0146     		mov	r1, r0
 502 026c 2846     		mov	r0, r5
 503 026e FFF7FEFF 		bl	atan2f
 504 0272 4FF08B41 		mov	r1, #1166016512
 505 0276 0546     		mov	r5, r0
 506              	.LVL67:
 507 0278 5846     		mov	r0, fp
 508              	.LVL68:
 509 027a FFF7FEFF 		bl	__aeabi_fmul
 510 027e FFF7FEFF 		bl	__aeabi_f2iz
 511 0282 0E4C     		ldr	r4, .L30+16
 512 0284 039B     		ldr	r3, [sp, #12]
 513 0286 4FF08B41 		mov	r1, #1166016512
 514 028a 2060     		str	r0, [r4, #0]
 515 028c 03F10040 		add	r0, r3, #-2147483648
 516 0290 FFF7FEFF 		bl	__aeabi_fmul
 517 0294 FFF7FEFF 		bl	__aeabi_f2iz
 518 0298 4FF08B41 		mov	r1, #1166016512
 519 029c 6060     		str	r0, [r4, #4]
 520 029e 2846     		mov	r0, r5
 521 02a0 FFF7FEFF 		bl	__aeabi_fmul
 522 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 523 02a8 A060     		str	r0, [r4, #8]
 524 02aa 13E0     		b	.L16
 525              	.L31:
 526              		.align	2
 527              	.L30:
 528 02ac 00000000 		.word	ahrs
 529 02b0 00000000 		.word	stab_att_ref_quat
 530 02b4 00000000 		.word	stab_att_ref_rate
 531 02b8 00000000 		.word	.LANCHOR0
 532 02bc 00000000 		.word	.LANCHOR1
 533              	.LVL69:
 534              	.L12:
 535              	.LBE49:
 536              	.LBE51:
 159:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   } else {
 160:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     /* reset accumulator */
 161:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     INT32_QUAT_ZERO( stabilization_att_sum_err_quat );
 537              		.loc 1 161 0
 538 02c0 4FF40043 		mov	r3, #32768
 539 02c4 85E81800 		stmia	r5, {r3, r4}
 162:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     INT_EULERS_ZERO( stabilization_att_sum_err );
 540              		.loc 1 162 0
 541 02c8 B34B     		ldr	r3, .L32
 161:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     INT32_QUAT_ZERO( stabilization_att_sum_err_quat );
 542              		.loc 1 161 0
 543 02ca AC60     		str	r4, [r5, #8]
 544 02cc EC60     		str	r4, [r5, #12]
 545              		.loc 1 162 0
 546 02ce 1C60     		str	r4, [r3, #0]
 547 02d0 5C60     		str	r4, [r3, #4]
 548 02d2 9C60     		str	r4, [r3, #8]
 549              	.LVL70:
 550              	.L16:
 551              	.LBB52:
 552              	.LBB53:
  99:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   ff_commands[COMMAND_ROLL]  = GAIN_PRESCALER_FF * gains->dd.x * RATE_FLOAT_OF_BFP(ref_accel->p) / 
 553              		.loc 1 99 0
 554 02d4 B14D     		ldr	r5, .L32+4
 555 02d6 3024     		movs	r4, #48
 556 02d8 A869     		ldr	r0, [r5, #24]
 557 02da B14F     		ldr	r7, .L32+8
 558 02dc 6043     		muls	r0, r4, r0
 559 02de FFF7FEFF 		bl	__aeabi_i2f
 560 02e2 0646     		mov	r6, r0
 561 02e4 3868     		ldr	r0, [r7, #0]
 562 02e6 FFF7FEFF 		bl	__aeabi_i2f
 563 02ea 4FF06651 		mov	r1, #964689920
 564 02ee FFF7FEFF 		bl	__aeabi_fmul
 565 02f2 0146     		mov	r1, r0
 566 02f4 3046     		mov	r0, r6
 567 02f6 FFF7FEFF 		bl	__aeabi_fmul
 568 02fa 4FF07051 		mov	r1, #1006632960
 569 02fe FFF7FEFF 		bl	__aeabi_fmul
 570 0302 FFF7FEFF 		bl	__aeabi_f2iz
 571 0306 A74E     		ldr	r6, .L32+12
 572 0308 8246     		mov	sl, r0
 573 030a 3060     		str	r0, [r6, #0]
 100:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   ff_commands[COMMAND_PITCH] = GAIN_PRESCALER_FF * gains->dd.y * RATE_FLOAT_OF_BFP(ref_accel->q) / 
 574              		.loc 1 100 0
 575 030c E869     		ldr	r0, [r5, #28]
 576 030e 6043     		muls	r0, r4, r0
 577 0310 FFF7FEFF 		bl	__aeabi_i2f
 578 0314 8346     		mov	fp, r0
 579 0316 7868     		ldr	r0, [r7, #4]
 580 0318 FFF7FEFF 		bl	__aeabi_i2f
 581 031c 4FF06651 		mov	r1, #964689920
 582 0320 FFF7FEFF 		bl	__aeabi_fmul
 583 0324 0146     		mov	r1, r0
 584 0326 5846     		mov	r0, fp
 585 0328 FFF7FEFF 		bl	__aeabi_fmul
 586 032c 4FF07051 		mov	r1, #1006632960
 587 0330 FFF7FEFF 		bl	__aeabi_fmul
 588 0334 FFF7FEFF 		bl	__aeabi_f2iz
 589 0338 8446     		mov	ip, r0
 590 033a 7060     		str	r0, [r6, #4]
 101:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   ff_commands[COMMAND_YAW]   = GAIN_PRESCALER_FF * gains->dd.z * RATE_FLOAT_OF_BFP(ref_accel->r) / 
 591              		.loc 1 101 0
 592 033c 286A     		ldr	r0, [r5, #32]
 593 033e CDF804C0 		str	ip, [sp, #4]
 594 0342 6043     		muls	r0, r4, r0
 595 0344 FFF7FEFF 		bl	__aeabi_i2f
 596 0348 8346     		mov	fp, r0
 597 034a B868     		ldr	r0, [r7, #8]
 598 034c FFF7FEFF 		bl	__aeabi_i2f
 599 0350 4FF06651 		mov	r1, #964689920
 600 0354 FFF7FEFF 		bl	__aeabi_fmul
 601 0358 0146     		mov	r1, r0
 602 035a 5846     		mov	r0, fp
 603 035c FFF7FEFF 		bl	__aeabi_fmul
 604 0360 4FF07051 		mov	r1, #1006632960
 605 0364 FFF7FEFF 		bl	__aeabi_fmul
 606 0368 FFF7FEFF 		bl	__aeabi_f2iz
 607 036c 0246     		mov	r2, r0
 608 036e B060     		str	r0, [r6, #8]
 609              	.LVL71:
 610              	.LBE53:
 611              	.LBE52:
 612              	.LBB54:
 613              	.LBB55:
 109:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.x  * QUAT1_FLOAT_OF_BFP(att_err->qx) / 4 +
 614              		.loc 1 109 0
 615 0370 2868     		ldr	r0, [r5, #0]
 616 0372 0292     		str	r2, [sp, #8]
 617 0374 6043     		muls	r0, r4, r0
 618 0376 FFF7FEFF 		bl	__aeabi_i2f
 619 037a 0646     		mov	r6, r0
 620 037c 4846     		mov	r0, r9
 621 037e FFF7FEFF 		bl	__aeabi_i2f
 622 0382 4FF06051 		mov	r1, #939524096
 623 0386 FFF7FEFF 		bl	__aeabi_fmul
 624 038a 0146     		mov	r1, r0
 625 038c 3046     		mov	r0, r6
 626 038e FFF7FEFF 		bl	__aeabi_fmul
 627 0392 4FF07A51 		mov	r1, #1048576000
 628 0396 FFF7FEFF 		bl	__aeabi_fmul
 629 039a 0646     		mov	r6, r0
 110:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.x  * RATE_FLOAT_OF_BFP(rate_err->p) / 16 +
 630              		.loc 1 110 0
 631 039c E868     		ldr	r0, [r5, #12]
 632 039e 6043     		muls	r0, r4, r0
 633 03a0 FFF7FEFF 		bl	__aeabi_i2f
 634 03a4 0746     		mov	r7, r0
 635 03a6 0598     		ldr	r0, [sp, #20]
 636 03a8 FFF7FEFF 		bl	__aeabi_i2f
 637 03ac 4FF06651 		mov	r1, #964689920
 638 03b0 FFF7FEFF 		bl	__aeabi_fmul
 639 03b4 0146     		mov	r1, r0
 640 03b6 3846     		mov	r0, r7
 641 03b8 FFF7FEFF 		bl	__aeabi_fmul
 642 03bc 4FF07651 		mov	r1, #1031798784
 643 03c0 FFF7FEFF 		bl	__aeabi_fmul
 644 03c4 0146     		mov	r1, r0
 109:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.x  * QUAT1_FLOAT_OF_BFP(att_err->qx) / 4 +
 645              		.loc 1 109 0
 646 03c6 3046     		mov	r0, r6
 647 03c8 FFF7FEFF 		bl	__aeabi_fadd
 648 03cc 0646     		mov	r6, r0
 111:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_I * gains->i.x  * QUAT1_FLOAT_OF_BFP(sum_err->qx) / 2;
 649              		.loc 1 111 0
 650 03ce 686A     		ldr	r0, [r5, #36]
 651 03d0 754F     		ldr	r7, .L32+16
 652 03d2 6043     		muls	r0, r4, r0
 653 03d4 FFF7FEFF 		bl	__aeabi_i2f
 654 03d8 8146     		mov	r9, r0
 655              	.LVL72:
 656 03da 7868     		ldr	r0, [r7, #4]
 657 03dc FFF7FEFF 		bl	__aeabi_i2f
 658 03e0 4FF06051 		mov	r1, #939524096
 659 03e4 FFF7FEFF 		bl	__aeabi_fmul
 660 03e8 0146     		mov	r1, r0
 661 03ea 4846     		mov	r0, r9
 662 03ec FFF7FEFF 		bl	__aeabi_fmul
 663 03f0 4FF07C51 		mov	r1, #1056964608
 664 03f4 FFF7FEFF 		bl	__aeabi_fmul
 665 03f8 0146     		mov	r1, r0
 110:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.x  * RATE_FLOAT_OF_BFP(rate_err->p) / 16 +
 666              		.loc 1 110 0
 667 03fa 3046     		mov	r0, r6
 668 03fc FFF7FEFF 		bl	__aeabi_fadd
 108:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   fb_commands[COMMAND_ROLL] =
 669              		.loc 1 108 0
 670 0400 FFF7FEFF 		bl	__aeabi_f2iz
 671 0404 694E     		ldr	r6, .L32+20
 672 0406 8146     		mov	r9, r0
 673 0408 3060     		str	r0, [r6, #0]
 114:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.y  * QUAT1_FLOAT_OF_BFP(att_err->qy) / 4 +
 674              		.loc 1 114 0
 675 040a 6868     		ldr	r0, [r5, #4]
 676 040c 6043     		muls	r0, r4, r0
 677 040e FFF7FEFF 		bl	__aeabi_i2f
 678 0412 8346     		mov	fp, r0
 679 0414 4046     		mov	r0, r8
 680 0416 FFF7FEFF 		bl	__aeabi_i2f
 681 041a 4FF06051 		mov	r1, #939524096
 682 041e FFF7FEFF 		bl	__aeabi_fmul
 683 0422 0146     		mov	r1, r0
 684 0424 5846     		mov	r0, fp
 685 0426 FFF7FEFF 		bl	__aeabi_fmul
 686 042a 4FF07A51 		mov	r1, #1048576000
 687 042e FFF7FEFF 		bl	__aeabi_fmul
 688 0432 8046     		mov	r8, r0
 689              	.LVL73:
 115:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.y  * RATE_FLOAT_OF_BFP(rate_err->q)  / 16 +
 690              		.loc 1 115 0
 691 0434 2869     		ldr	r0, [r5, #16]
 692 0436 6043     		muls	r0, r4, r0
 693 0438 FFF7FEFF 		bl	__aeabi_i2f
 694 043c 8346     		mov	fp, r0
 695 043e 0698     		ldr	r0, [sp, #24]
 696 0440 FFF7FEFF 		bl	__aeabi_i2f
 697 0444 4FF06651 		mov	r1, #964689920
 698 0448 FFF7FEFF 		bl	__aeabi_fmul
 699 044c 0146     		mov	r1, r0
 700 044e 5846     		mov	r0, fp
 701 0450 FFF7FEFF 		bl	__aeabi_fmul
 702 0454 4FF07651 		mov	r1, #1031798784
 703 0458 FFF7FEFF 		bl	__aeabi_fmul
 704 045c 0146     		mov	r1, r0
 114:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.y  * QUAT1_FLOAT_OF_BFP(att_err->qy) / 4 +
 705              		.loc 1 114 0
 706 045e 4046     		mov	r0, r8
 707 0460 FFF7FEFF 		bl	__aeabi_fadd
 708 0464 8046     		mov	r8, r0
 116:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_I * gains->i.y  * QUAT1_FLOAT_OF_BFP(sum_err->qy) / 2;
 709              		.loc 1 116 0
 710 0466 A86A     		ldr	r0, [r5, #40]
 711 0468 6043     		muls	r0, r4, r0
 712 046a FFF7FEFF 		bl	__aeabi_i2f
 713 046e 8346     		mov	fp, r0
 714 0470 B868     		ldr	r0, [r7, #8]
 715 0472 FFF7FEFF 		bl	__aeabi_i2f
 716 0476 4FF06051 		mov	r1, #939524096
 717 047a FFF7FEFF 		bl	__aeabi_fmul
 718 047e 0146     		mov	r1, r0
 719 0480 5846     		mov	r0, fp
 720 0482 FFF7FEFF 		bl	__aeabi_fmul
 721 0486 4FF07C51 		mov	r1, #1056964608
 722 048a FFF7FEFF 		bl	__aeabi_fmul
 723 048e 0146     		mov	r1, r0
 115:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.y  * RATE_FLOAT_OF_BFP(rate_err->q)  / 16 +
 724              		.loc 1 115 0
 725 0490 4046     		mov	r0, r8
 726 0492 FFF7FEFF 		bl	__aeabi_fadd
 113:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   fb_commands[COMMAND_PITCH] =
 727              		.loc 1 113 0
 728 0496 FFF7FEFF 		bl	__aeabi_f2iz
 729 049a 8046     		mov	r8, r0
 730 049c 7060     		str	r0, [r6, #4]
 119:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.z  * QUAT1_FLOAT_OF_BFP(att_err->qz) / 4 +
 731              		.loc 1 119 0
 732 049e A868     		ldr	r0, [r5, #8]
 733 04a0 6043     		muls	r0, r4, r0
 734 04a2 FFF7FEFF 		bl	__aeabi_i2f
 735 04a6 8346     		mov	fp, r0
 736 04a8 0498     		ldr	r0, [sp, #16]
 737 04aa FFF7FEFF 		bl	__aeabi_i2f
 738 04ae 4FF06051 		mov	r1, #939524096
 739 04b2 FFF7FEFF 		bl	__aeabi_fmul
 740 04b6 0146     		mov	r1, r0
 741 04b8 5846     		mov	r0, fp
 742 04ba FFF7FEFF 		bl	__aeabi_fmul
 743 04be 4FF07A51 		mov	r1, #1048576000
 744 04c2 FFF7FEFF 		bl	__aeabi_fmul
 745 04c6 0346     		mov	r3, r0
 120:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.z  * RATE_FLOAT_OF_BFP(rate_err->r)  / 16 +
 746              		.loc 1 120 0
 747 04c8 6869     		ldr	r0, [r5, #20]
 748 04ca 0393     		str	r3, [sp, #12]
 749 04cc 6043     		muls	r0, r4, r0
 750 04ce FFF7FEFF 		bl	__aeabi_i2f
 751 04d2 8346     		mov	fp, r0
 752 04d4 0798     		ldr	r0, [sp, #28]
 753 04d6 FFF7FEFF 		bl	__aeabi_i2f
 754 04da 4FF06651 		mov	r1, #964689920
 755 04de FFF7FEFF 		bl	__aeabi_fmul
 756 04e2 0146     		mov	r1, r0
 757 04e4 5846     		mov	r0, fp
 758 04e6 FFF7FEFF 		bl	__aeabi_fmul
 759 04ea 4FF07651 		mov	r1, #1031798784
 760 04ee FFF7FEFF 		bl	__aeabi_fmul
 119:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.z  * QUAT1_FLOAT_OF_BFP(att_err->qz) / 4 +
 761              		.loc 1 119 0
 762 04f2 039B     		ldr	r3, [sp, #12]
 120:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.z  * RATE_FLOAT_OF_BFP(rate_err->r)  / 16 +
 763              		.loc 1 120 0
 764 04f4 0146     		mov	r1, r0
 119:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_P * gains->p.z  * QUAT1_FLOAT_OF_BFP(att_err->qz) / 4 +
 765              		.loc 1 119 0
 766 04f6 1846     		mov	r0, r3
 767 04f8 FFF7FEFF 		bl	__aeabi_fadd
 768 04fc 8346     		mov	fp, r0
 121:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_I * gains->i.z  * QUAT1_FLOAT_OF_BFP(sum_err->qz) / 2;
 769              		.loc 1 121 0
 770 04fe E86A     		ldr	r0, [r5, #44]
 771 0500 6043     		muls	r0, r4, r0
 772 0502 FFF7FEFF 		bl	__aeabi_i2f
 773 0506 0446     		mov	r4, r0
 774 0508 F868     		ldr	r0, [r7, #12]
 775 050a FFF7FEFF 		bl	__aeabi_i2f
 776 050e 4FF06051 		mov	r1, #939524096
 777 0512 FFF7FEFF 		bl	__aeabi_fmul
 778 0516 0146     		mov	r1, r0
 779 0518 2046     		mov	r0, r4
 780 051a FFF7FEFF 		bl	__aeabi_fmul
 781 051e 4FF07C51 		mov	r1, #1056964608
 782 0522 FFF7FEFF 		bl	__aeabi_fmul
 783 0526 0146     		mov	r1, r0
 120:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****     GAIN_PRESCALER_D * gains->d.z  * RATE_FLOAT_OF_BFP(rate_err->r)  / 16 +
 784              		.loc 1 120 0
 785 0528 5846     		mov	r0, fp
 786 052a FFF7FEFF 		bl	__aeabi_fadd
 118:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   fb_commands[COMMAND_YAW] =
 787              		.loc 1 118 0
 788 052e FFF7FEFF 		bl	__aeabi_f2iz
 789 0532 B060     		str	r0, [r6, #8]
 790              	.LBE55:
 791              	.LBE54:
 163:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   }
 164:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 165:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* compute the feed forward command */
 166:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   attitude_run_ff(stabilization_att_ff_cmd, &stabilization_gains, &stab_att_ref_accel);
 167:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 168:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* compute the feed back command */
 169:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   attitude_run_fb(stabilization_att_fb_cmd, &stabilization_gains, &att_err, &rate_err, &stabilizati
 170:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 171:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* sum feedforward and feedback */
 172:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_cmd[COMMAND_ROLL] = stabilization_att_fb_cmd[COMMAND_ROLL] + stabilization_att_ff_c
 173:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_cmd[COMMAND_PITCH] = stabilization_att_fb_cmd[COMMAND_PITCH] + stabilization_att_ff
 792              		.loc 1 173 0
 793 0534 DDF804C0 		ldr	ip, [sp, #4]
 174:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_cmd[COMMAND_YAW] = stabilization_att_fb_cmd[COMMAND_YAW] + stabilization_att_ff_cmd
 794              		.loc 1 174 0
 795 0538 029A     		ldr	r2, [sp, #8]
 172:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_cmd[COMMAND_ROLL] = stabilization_att_fb_cmd[COMMAND_ROLL] + stabilization_att_ff_c
 796              		.loc 1 172 0
 797 053a 1D4B     		ldr	r3, .L32+24
 798 053c 09EB0A04 		add	r4, r9, sl
 173:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_cmd[COMMAND_PITCH] = stabilization_att_fb_cmd[COMMAND_PITCH] + stabilization_att_ff
 799              		.loc 1 173 0
 800 0540 08EB0C01 		add	r1, r8, ip
 801              		.loc 1 174 0
 802 0544 8218     		adds	r2, r0, r2
 175:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 176:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* bound the result */
 177:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   BoundAbs(stabilization_cmd[COMMAND_ROLL], MAX_PPRZ);
 803              		.loc 1 177 0
 804 0546 B4F5165F 		cmp	r4, #9600
 172:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_cmd[COMMAND_ROLL] = stabilization_att_fb_cmd[COMMAND_ROLL] + stabilization_att_ff_c
 805              		.loc 1 172 0
 806 054a 1C60     		str	r4, [r3, #0]
 173:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_cmd[COMMAND_PITCH] = stabilization_att_fb_cmd[COMMAND_PITCH] + stabilization_att_ff
 807              		.loc 1 173 0
 808 054c 5960     		str	r1, [r3, #4]
 174:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_cmd[COMMAND_YAW] = stabilization_att_fb_cmd[COMMAND_YAW] + stabilization_att_ff_cmd
 809              		.loc 1 174 0
 810 054e 9A60     		str	r2, [r3, #8]
 811              		.loc 1 177 0
 812 0550 02DD     		ble	.L17
 813              		.loc 1 177 0 is_stmt 0 discriminator 1
 814 0552 4FF41652 		mov	r2, #9600
 815 0556 03E0     		b	.L27
 816              	.L17:
 817              		.loc 1 177 0 discriminator 2
 818 0558 14F5165F 		cmn	r4, #9600
 819 055c 01DA     		bge	.L18
 820              		.loc 1 177 0 discriminator 3
 821 055e 154A     		ldr	r2, .L32+28
 822              	.L27:
 823 0560 1A60     		str	r2, [r3, #0]
 824              	.L18:
 178:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   BoundAbs(stabilization_cmd[COMMAND_PITCH], MAX_PPRZ);
 825              		.loc 1 178 0 is_stmt 1
 826 0562 B1F5165F 		cmp	r1, #9600
 827 0566 02DD     		ble	.L19
 828              		.loc 1 178 0 is_stmt 0 discriminator 1
 829 0568 4FF41652 		mov	r2, #9600
 830 056c 03E0     		b	.L28
 831              	.L19:
 832              		.loc 1 178 0 discriminator 2
 833 056e 11F5165F 		cmn	r1, #9600
 834 0572 01DA     		bge	.L20
 835              		.loc 1 178 0 discriminator 3
 836 0574 0F4A     		ldr	r2, .L32+28
 837              	.L28:
 838 0576 5A60     		str	r2, [r3, #4]
 839              	.L20:
 179:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   BoundAbs(stabilization_cmd[COMMAND_YAW], MAX_PPRZ);
 840              		.loc 1 179 0 is_stmt 1
 841 0578 9B68     		ldr	r3, [r3, #8]
 842 057a 0D4A     		ldr	r2, .L32+24
 843 057c B3F5165F 		cmp	r3, #9600
 844 0580 02DD     		ble	.L21
 845              		.loc 1 179 0 is_stmt 0 discriminator 1
 846 0582 4FF41653 		mov	r3, #9600
 847 0586 03E0     		b	.L29
 848              	.L21:
 849              		.loc 1 179 0 discriminator 2
 850 0588 13F5165F 		cmn	r3, #9600
 851 058c 01DA     		bge	.L7
 852              		.loc 1 179 0 discriminator 3
 853 058e 094B     		ldr	r3, .L32+28
 854              	.L29:
 855 0590 9360     		str	r3, [r2, #8]
 856              	.L7:
 180:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** }
 857              		.loc 1 180 0 is_stmt 1
 858 0592 09B0     		add	sp, sp, #36
 859 0594 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 860              	.L33:
 861              		.align	2
 862              	.L32:
 863 0598 00000000 		.word	.LANCHOR1
 864 059c 00000000 		.word	.LANCHOR2
 865 05a0 00000000 		.word	stab_att_ref_accel
 866 05a4 00000000 		.word	.LANCHOR3
 867 05a8 00000000 		.word	.LANCHOR0
 868 05ac 00000000 		.word	.LANCHOR4
 869 05b0 00000000 		.word	stabilization_cmd
 870 05b4 80DAFFFF 		.word	-9600
 871              		.cfi_endproc
 872              	.LFE35:
 874              		.section	.text.stabilization_attitude_read_rc,"ax",%progbits
 875              		.align	1
 876              		.global	stabilization_attitude_read_rc
 877              		.thumb
 878              		.thumb_func
 880              	stabilization_attitude_read_rc:
 881              	.LFB36:
 181:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 182:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** void stabilization_attitude_read_rc(bool_t in_flight) {
 882              		.loc 1 182 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              	.LVL74:
 887              	.LBB56:
 888              	.LBB57:
 889              		.file 2 "./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h"
   1:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** /*
   2:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * Copyright (C) 2012 Felix Ruess <felix.ruess@gmail.com>
   3:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  *
   4:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * This file is part of paparazzi.
   5:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  *
   6:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * it under the terms of the GNU General Public License as published by
   8:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * any later version.
  10:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  *
  11:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * paparazzi is distributed in the hope that it will be useful,
  12:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * GNU General Public License for more details.
  15:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  *
  16:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * You should have received a copy of the GNU General Public License
  17:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  * Boston, MA 02111-1307, USA.
  20:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  */
  21:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  22:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** /** @file stabilization_attitude_rc_setpoint.h
  23:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  *  Read an attitude setpoint from the RC.
  24:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****  */
  25:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  26:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #ifndef STABILISATION_ATTITUDE_RC_SETPOINT_H
  27:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define STABILISATION_ATTITUDE_RC_SETPOINT_H
  28:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  29:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #include "std.h"
  30:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #include "generated/airframe.h"
  31:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #include "math/pprz_algebra_int.h"
  32:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #include "math/pprz_algebra_float.h"
  33:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  34:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #include "subsystems/radio_control.h"
  35:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #include "subsystems/ahrs.h"
  36:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  37:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #ifdef STABILISATION_ATTITUDE_TYPE_INT
  38:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define SP_MAX_PHI     (int32_t)ANGLE_BFP_OF_REAL(STABILIZATION_ATTITUDE_SP_MAX_PHI)
  39:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define SP_MAX_THETA   (int32_t)ANGLE_BFP_OF_REAL(STABILIZATION_ATTITUDE_SP_MAX_THETA)
  40:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define SP_MAX_R       (int32_t)ANGLE_BFP_OF_REAL(STABILIZATION_ATTITUDE_SP_MAX_R)
  41:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #endif // STABILISATION_ATTITUDE_TYPE_INT
  42:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  43:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #ifdef STABILISATION_ATTITUDE_TYPE_FLOAT
  44:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define SP_MAX_PHI   STABILIZATION_ATTITUDE_SP_MAX_PHI
  45:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define SP_MAX_THETA STABILIZATION_ATTITUDE_SP_MAX_THETA
  46:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define SP_MAX_R     STABILIZATION_ATTITUDE_SP_MAX_R
  47:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #endif // STABILISATION_ATTITUDE_TYPE_FLOAT
  48:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  49:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define RC_UPDATE_FREQ 40
  50:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  51:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #ifdef STABILIZATION_ATTITUDE_DEADBAND_A
  52:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define ROLL_DEADBAND_EXCEEDED()                                        \
  53:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   (radio_control.values[RADIO_ROLL] >  STABILIZATION_ATTITUDE_DEADBAND_A || \
  54:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****    radio_control.values[RADIO_ROLL] < -STABILIZATION_ATTITUDE_DEADBAND_A)
  55:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #else
  56:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define ROLL_DEADBAND_EXCEEDED() (TRUE)
  57:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #endif /* STABILIZATION_ATTITUDE_DEADBAND_A */
  58:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  59:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #ifdef STABILIZATION_ATTITUDE_DEADBAND_E
  60:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define PITCH_DEADBAND_EXCEEDED()                                       \
  61:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   (radio_control.values[RADIO_PITCH] >  STABILIZATION_ATTITUDE_DEADBAND_E || \
  62:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****    radio_control.values[RADIO_PITCH] < -STABILIZATION_ATTITUDE_DEADBAND_E)
  63:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #else
  64:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define PITCH_DEADBAND_EXCEEDED() (TRUE)
  65:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #endif /* STABILIZATION_ATTITUDE_DEADBAND_E */
  66:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  67:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** #define YAW_DEADBAND_EXCEEDED()                                         \
  68:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   (radio_control.values[RADIO_YAW] >  STABILIZATION_ATTITUDE_DEADBAND_R || \
  69:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****    radio_control.values[RADIO_YAW] < -STABILIZATION_ATTITUDE_DEADBAND_R)
  70:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  71:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** static inline void stabilization_attitude_read_rc_setpoint_eulers(struct Int32Eulers *sp, bool_t in
  72:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  73:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   sp->phi = ((int32_t) radio_control.values[RADIO_ROLL]  * SP_MAX_PHI / MAX_PPRZ);
 890              		.loc 2 73 0
 891 0000 814A     		ldr	r2, .L75
 892              	.LBE57:
 893              	.LBE56:
 894              		.loc 1 182 0
 895 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 896              	.LCFI4:
 897              		.cfi_def_cfa_offset 20
 898              		.cfi_offset 14, -4
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 6, -12
 901              		.cfi_offset 5, -16
 902              		.cfi_offset 4, -20
 903              	.LBB59:
 904              	.LBB58:
 905              		.loc 2 73 0
 906 0004 B2F90840 		ldrsh	r4, [r2, #8]
  74:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   sp->theta = ((int32_t) radio_control.values[RADIO_PITCH] * SP_MAX_THETA / MAX_PPRZ);
 907              		.loc 2 74 0
 908 0008 B2F90A60 		ldrsh	r6, [r2, #10]
  73:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   sp->phi = ((int32_t) radio_control.values[RADIO_ROLL]  * SP_MAX_PHI / MAX_PPRZ);
 909              		.loc 2 73 0
 910 000c 4FF44961 		mov	r1, #3216
 911 0010 4C43     		muls	r4, r1, r4
 912              		.loc 2 74 0
 913 0012 7143     		muls	r1, r6, r1
  73:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   sp->phi = ((int32_t) radio_control.values[RADIO_ROLL]  * SP_MAX_PHI / MAX_PPRZ);
 914              		.loc 2 73 0
 915 0014 4FF41655 		mov	r5, #9600
 916 0018 7C4B     		ldr	r3, .L75+4
 917 001a 94FBF5F4 		sdiv	r4, r4, r5
 918              		.loc 2 74 0
 919 001e 91FBF5F1 		sdiv	r1, r1, r5
  73:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   sp->phi = ((int32_t) radio_control.values[RADIO_ROLL]  * SP_MAX_PHI / MAX_PPRZ);
 920              		.loc 2 73 0
 921 0022 1C60     		str	r4, [r3, #0]
 922              		.loc 2 74 0
 923 0024 5960     		str	r1, [r3, #4]
  75:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h **** 
  76:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   if (in_flight) {
 924              		.loc 2 76 0
 925 0026 10B3     		cbz	r0, .L35
  77:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****     if (YAW_DEADBAND_EXCEEDED()) {
 926              		.loc 2 77 0
 927 0028 9289     		ldrh	r2, [r2, #12]
 928 002a 02F1FA00 		add	r0, r2, #250
 929              	.LVL75:
 930 002e 80B2     		uxth	r0, r0
 931 0030 B0F5FA7F 		cmp	r0, #500
 932 0034 1ED9     		bls	.L36
  78:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****       sp->psi += ((int32_t) radio_control.values[RADIO_YAW] * SP_MAX_R / MAX_PPRZ / RC_UPDATE_FREQ)
 933              		.loc 2 78 0
 934 0036 41F62110 		movw	r0, #6433
 935 003a 12B2     		sxth	r2, r2
 936 003c 4243     		muls	r2, r0, r2
 937 003e 7448     		ldr	r0, .L75+8
 938 0040 92FBF0F2 		sdiv	r2, r2, r0
 939 0044 9868     		ldr	r0, [r3, #8]
 940 0046 1318     		adds	r3, r2, r0
  79:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****       INT32_ANGLE_NORMALIZE(sp->psi);
 941              		.loc 2 79 0
 942 0048 43F24322 		movw	r2, #12867
 943 004c 02E0     		b	.L37
 944              	.L38:
 945 004e A3F5C943 		sub	r3, r3, #25728
 946 0052 073B     		subs	r3, r3, #7
 947              	.L37:
 948 0054 9342     		cmp	r3, r2
 949 0056 FADC     		bgt	.L38
 950 0058 03E0     		b	.L72
 951              	.L40:
 952 005a 03F5C943 		add	r3, r3, #25728
 953 005e 0733     		adds	r3, r3, #7
 954 0060 00E0     		b	.L67
 955              	.L72:
 956 0062 6C4A     		ldr	r2, .L75+12
 957              	.L67:
 958 0064 9342     		cmp	r3, r2
 959 0066 F8DB     		blt	.L40
 960 0068 684A     		ldr	r2, .L75+4
 961 006a 9360     		str	r3, [r2, #8]
 962 006c 02E0     		b	.L36
 963              	.LVL76:
 964              	.L35:
  80:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****     }
  81:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   }
  82:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****   else { /* if not flying, use current yaw as setpoint */
  83:./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h ****     sp->psi = ahrs.ltp_to_body_euler.psi;
 965              		.loc 2 83 0
 966 006e 6A4A     		ldr	r2, .L75+16
 967 0070 526E     		ldr	r2, [r2, #100]
 968 0072 9A60     		str	r2, [r3, #8]
 969              	.LVL77:
 970              	.L36:
 971              	.LBE58:
 972              	.LBE59:
 973              	.LBB60:
 183:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** 
 184:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #if USE_SETPOINTS_WITH_TRANSITIONS
 185:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_attitude_read_rc_absolute(in_flight);
 186:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c **** #else
 187:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   stabilization_attitude_read_rc_setpoint_eulers(&stab_att_sp_euler, in_flight);
 188:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   /* update quaternion setpoint from euler setpoint */
 189:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_OF_EULERS(stab_att_sp_quat, stab_att_sp_euler);
 974              		.loc 1 189 0
 975 0074 654A     		ldr	r2, .L75+4
 976 0076 0223     		movs	r3, #2
 977 0078 94FBF3F4 		sdiv	r4, r4, r3
 978              	.LVL78:
 979 007c 9268     		ldr	r2, [r2, #8]
 980              	.LBB61:
 981 007e 002C     		cmp	r4, #0
 982              	.LBE61:
 983 0080 91FBF3F1 		sdiv	r1, r1, r3
 984              	.LVL79:
 985 0084 92FBF3F3 		sdiv	r3, r2, r3
 986              	.LVL80:
 987 0088 644A     		ldr	r2, .L75+20
 988              	.LBB62:
 989 008a 02DB     		blt	.L41
 990              		.loc 1 189 0 is_stmt 0 discriminator 11
 991 008c 32F91400 		ldrsh	r0, [r2, r4, lsl #1]
 992              	.LVL81:
 993 0090 03E0     		b	.L42
 994              	.LVL82:
 995              	.L41:
 996              		.loc 1 189 0 discriminator 12
 997 0092 6042     		negs	r0, r4
 998 0094 32F91000 		ldrsh	r0, [r2, r0, lsl #1]
 999 0098 4042     		negs	r0, r0
 1000              	.LVL83:
 1001              	.L42:
 1002              	.LBE62:
 1003              	.LBB63:
 1004              		.loc 1 189 0 discriminator 13
 1005 009a 04F5C955 		add	r5, r4, #6432
 1006 009e 0135     		adds	r5, r5, #1
 1007              	.LVL84:
 1008 00a0 41F62112 		movw	r2, #6433
 1009 00a4 9542     		cmp	r5, r2
 1010 00a6 C8BF     		it	gt
 1011 00a8 C4F5C954 		rsbgt	r4, r4, #6432
 1012              	.LVL85:
 1013 00ac 5B4A     		ldr	r2, .L75+20
 1014 00ae C8BF     		it	gt
 1015 00b0 A51C     		addgt	r5, r4, #2
 1016              	.LVL86:
 1017              	.LBE63:
 1018              	.LBB64:
 1019 00b2 0029     		cmp	r1, #0
 1020              	.LBE64:
 1021              	.LBB65:
 1022 00b4 32F91540 		ldrsh	r4, [r2, r5, lsl #1]
 1023              	.LVL87:
 1024              	.LBE65:
 1025              	.LBB66:
 1026 00b8 02DB     		blt	.L44
 1027              		.loc 1 189 0 discriminator 37
 1028 00ba 32F91150 		ldrsh	r5, [r2, r1, lsl #1]
 1029              	.LVL88:
 1030 00be 03E0     		b	.L45
 1031              	.LVL89:
 1032              	.L44:
 1033              		.loc 1 189 0 discriminator 38
 1034 00c0 4D42     		negs	r5, r1
 1035              	.LVL90:
 1036 00c2 32F91550 		ldrsh	r5, [r2, r5, lsl #1]
 1037 00c6 6D42     		negs	r5, r5
 1038              	.LVL91:
 1039              	.L45:
 1040              	.LBE66:
 1041              	.LBB67:
 1042              		.loc 1 189 0 discriminator 39
 1043 00c8 01F5C952 		add	r2, r1, #6432
 1044 00cc 0132     		adds	r2, r2, #1
 1045              	.LVL92:
 1046 00ce 41F62116 		movw	r6, #6433
 1047 00d2 B242     		cmp	r2, r6
 1048 00d4 C4BF     		itt	gt
 1049 00d6 C1F5C951 		rsbgt	r1, r1, #6432
 1050              	.LVL93:
 1051 00da 8A1C     		addgt	r2, r1, #2
 1052              	.LVL94:
 1053 00dc 4F49     		ldr	r1, .L75+20
 1054 00de 31F91270 		ldrsh	r7, [r1, r2, lsl #1]
 1055              	.LVL95:
 1056              	.LBE67:
 1057              	.LBB68:
 1058 00e2 1A46     		mov	r2, r3
 1059              	.LVL96:
 1060 00e4 43F24321 		movw	r1, #12867
 1061 00e8 02E0     		b	.L47
 1062              	.LVL97:
 1063              	.L48:
 1064              		.loc 1 189 0 discriminator 54
 1065 00ea A2F5C942 		sub	r2, r2, #25728
 1066              	.LVL98:
 1067 00ee 073A     		subs	r2, r2, #7
 1068              	.LVL99:
 1069              	.L47:
 1070              		.loc 1 189 0 discriminator 53
 1071 00f0 8A42     		cmp	r2, r1
 1072 00f2 FADC     		bgt	.L48
 1073 00f4 03E0     		b	.L73
 1074              	.L50:
 1075              		.loc 1 189 0 discriminator 57
 1076 00f6 02F5C942 		add	r2, r2, #25728
 1077              	.LVL100:
 1078 00fa 0732     		adds	r2, r2, #7
 1079              	.LVL101:
 1080 00fc 00E0     		b	.L69
 1081              	.L73:
 1082              		.loc 1 189 0 discriminator 56
 1083 00fe 4549     		ldr	r1, .L75+12
 1084              	.L69:
 1085 0100 8A42     		cmp	r2, r1
 1086 0102 F8DB     		blt	.L50
 1087              		.loc 1 189 0
 1088 0104 41F62111 		movw	r1, #6433
 1089 0108 8A42     		cmp	r2, r1
 1090 010a 4449     		ldr	r1, .L75+20
 1091 010c 03DD     		ble	.L51
 1092              		.loc 1 189 0 discriminator 59
 1093 010e C2F54952 		rsb	r2, r2, #12864
 1094              	.LVL102:
 1095 0112 0332     		adds	r2, r2, #3
 1096              	.LVL103:
 1097 0114 0CE0     		b	.L52
 1098              	.L51:
 1099              		.loc 1 189 0 discriminator 60
 1100 0116 6FF4C956 		mvn	r6, #6432
 1101 011a B242     		cmp	r2, r6
 1102 011c 06DA     		bge	.L53
 1103              		.loc 1 189 0 discriminator 61
 1104 011e C2F17F42 		rsb	r2, r2, #-16777216
 1105              	.LVL104:
 1106 0122 02F57F02 		add	r2, r2, #16711680
 1107 0126 02F54D42 		add	r2, r2, #52480
 1108 012a BD32     		adds	r2, r2, #189
 1109              	.LVL105:
 1110              	.L53:
 1111              		.loc 1 189 0 discriminator 62
 1112 012c 002A     		cmp	r2, #0
 1113 012e 02DB     		blt	.L54
 1114              	.L52:
 1115              		.loc 1 189 0 discriminator 63
 1116 0130 31F91220 		ldrsh	r2, [r1, r2, lsl #1]
 1117              	.LVL106:
 1118 0134 03E0     		b	.L55
 1119              	.LVL107:
 1120              	.L54:
 1121              		.loc 1 189 0 discriminator 64
 1122 0136 5242     		negs	r2, r2
 1123              	.LVL108:
 1124 0138 31F91220 		ldrsh	r2, [r1, r2, lsl #1]
 1125              	.LVL109:
 1126 013c 5242     		negs	r2, r2
 1127              	.LVL110:
 1128              	.L55:
 1129              	.LBE68:
 1130              	.LBB69:
 1131              		.loc 1 189 0 discriminator 65
 1132 013e 03F5C953 		add	r3, r3, #6432
 1133              	.LVL111:
 1134 0142 0133     		adds	r3, r3, #1
 1135              	.LVL112:
 1136 0144 43F24321 		movw	r1, #12867
 1137 0148 02E0     		b	.L56
 1138              	.LVL113:
 1139              	.L57:
 1140              		.loc 1 189 0 discriminator 67
 1141 014a A3F5C943 		sub	r3, r3, #25728
 1142              	.LVL114:
 1143 014e 073B     		subs	r3, r3, #7
 1144              	.LVL115:
 1145              	.L56:
 1146              		.loc 1 189 0 discriminator 66
 1147 0150 8B42     		cmp	r3, r1
 1148 0152 FADC     		bgt	.L57
 1149 0154 03E0     		b	.L74
 1150              	.L59:
 1151              		.loc 1 189 0 discriminator 70
 1152 0156 03F5C943 		add	r3, r3, #25728
 1153              	.LVL116:
 1154 015a 0733     		adds	r3, r3, #7
 1155              	.LVL117:
 1156 015c 00E0     		b	.L71
 1157              	.L74:
 1158              		.loc 1 189 0 discriminator 69
 1159 015e 2D49     		ldr	r1, .L75+12
 1160              	.L71:
 1161 0160 8B42     		cmp	r3, r1
 1162 0162 F8DB     		blt	.L59
 1163              		.loc 1 189 0
 1164 0164 41F62111 		movw	r1, #6433
 1165 0168 8B42     		cmp	r3, r1
 1166 016a 2C49     		ldr	r1, .L75+20
 1167 016c 03DD     		ble	.L60
 1168              		.loc 1 189 0 discriminator 72
 1169 016e C3F54953 		rsb	r3, r3, #12864
 1170              	.LVL118:
 1171 0172 0333     		adds	r3, r3, #3
 1172              	.LVL119:
 1173 0174 0CE0     		b	.L61
 1174              	.L60:
 1175              		.loc 1 189 0 discriminator 73
 1176 0176 6FF4C956 		mvn	r6, #6432
 1177 017a B342     		cmp	r3, r6
 1178 017c 06DA     		bge	.L62
 1179              		.loc 1 189 0 discriminator 74
 1180 017e C3F17F43 		rsb	r3, r3, #-16777216
 1181              	.LVL120:
 1182 0182 03F57F03 		add	r3, r3, #16711680
 1183 0186 03F54D43 		add	r3, r3, #52480
 1184 018a BD33     		adds	r3, r3, #189
 1185              	.LVL121:
 1186              	.L62:
 1187              		.loc 1 189 0 discriminator 75
 1188 018c 002B     		cmp	r3, #0
 1189 018e 02DB     		blt	.L63
 1190              	.L61:
 1191              		.loc 1 189 0 discriminator 76
 1192 0190 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 1193              	.LVL122:
 1194 0194 03E0     		b	.L64
 1195              	.LVL123:
 1196              	.L63:
 1197              		.loc 1 189 0 discriminator 77
 1198 0196 5B42     		negs	r3, r3
 1199              	.LVL124:
 1200 0198 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 1201              	.LVL125:
 1202 019c 5B42     		negs	r3, r3
 1203              	.LVL126:
 1204              	.L64:
 1205              	.LBE69:
 1206              		.loc 1 189 0 discriminator 78
 1207 019e 03FB07F1 		mul	r1, r3, r7
 1208 01a2 5743     		muls	r7, r2, r7
 1209              	.LVL127:
 1210 01a4 6A43     		muls	r2, r5, r2
 1211              	.LVL128:
 1212 01a6 8913     		asrs	r1, r1, #14
 1213              	.LVL129:
 1214 01a8 9613     		asrs	r6, r2, #14
 1215 01aa 5D43     		muls	r5, r3, r5
 1216              	.LVL130:
 1217 01ac C4F1000C 		rsb	ip, r4, #0
 1218 01b0 01FB04F3 		mul	r3, r1, r4
 1219              	.LVL131:
 1220 01b4 4143     		muls	r1, r0, r1
 1221              	.LVL132:
 1222 01b6 06FB00F2 		mul	r2, r6, r0
 1223 01ba 06FB0CF6 		mul	r6, r6, ip
 1224 01be BF13     		asrs	r7, r7, #14
 1225              	.LVL133:
 1226 01c0 4913     		asrs	r1, r1, #13
 1227 01c2 AD13     		asrs	r5, r5, #14
 1228              	.LVL134:
 1229 01c4 01EB6636 		add	r6, r1, r6, asr #13
 1230 01c8 07FB00F1 		mul	r1, r7, r0
 1231 01cc 4042     		negs	r0, r0
 1232              	.LVL135:
 1233 01ce 05FB04FC 		mul	ip, r5, r4
 1234 01d2 4543     		muls	r5, r0, r5
 1235              	.LVL136:
 1236 01d4 7C43     		muls	r4, r7, r4
 1237              	.LVL137:
 1238 01d6 5213     		asrs	r2, r2, #13
 1239 01d8 02EB6332 		add	r2, r2, r3, asr #13
 1240 01dc 4913     		asrs	r1, r1, #13
 1241 01de 104B     		ldr	r3, .L75+24
 1242 01e0 6D13     		asrs	r5, r5, #13
 1243 01e2 01EB6C31 		add	r1, r1, ip, asr #13
 1244 01e6 05EB6434 		add	r4, r5, r4, asr #13
 1245              	.LBE60:
 190:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_WRAP_SHORTEST(stab_att_sp_quat);
 1246              		.loc 1 190 0 is_stmt 1 discriminator 78
 1247 01ea 002A     		cmp	r2, #0
 1248              	.LBB70:
 189:firmwares/rotorcraft/stabilization/stabilization_attitude_quat_int.c ****   INT32_QUAT_OF_EULERS(stab_att_sp_quat, stab_att_sp_euler);
 1249              		.loc 1 189 0 discriminator 78
 1250 01ec 1A60     		str	r2, [r3, #0]
 1251 01ee 5E60     		str	r6, [r3, #4]
 1252 01f0 9960     		str	r1, [r3, #8]
 1253 01f2 DC60     		str	r4, [r3, #12]
 1254              	.LBE70:
 1255              		.loc 1 190 0 discriminator 78
 1256 01f4 07DA     		bge	.L34
 1257              		.loc 1 190 0 is_stmt 0 discriminator 1
 1258 01f6 5242     		negs	r2, r2
 1259 01f8 7642     		negs	r6, r6
 1260 01fa 4942     		negs	r1, r1
 1261 01fc 6442     		negs	r4, r4
 1262 01fe 1A60     		str	r2, [r3, #0]
 1263 0200 5E60     		str	r6, [r3, #4]
 1264 0202 9960     		str	r1, [r3, #8]
 1265 0204 DC60     		str	r4, [r3, #12]
 1266              	.L34:
 1267 0206 F0BD     		pop	{r4, r5, r6, r7, pc}
 1268              	.L76:
 1269              		.align	2
 1270              	.L75:
 1271 0208 00000000 		.word	radio_control
 1272 020c 00000000 		.word	stab_att_sp_euler
 1273 0210 00DC0500 		.word	384000
 1274 0214 BDCDFFFF 		.word	-12867
 1275 0218 00000000 		.word	ahrs
 1276 021c 00000000 		.word	pprz_trig_int
 1277 0220 00000000 		.word	stab_att_sp_quat
 1278              		.cfi_endproc
 1279              	.LFE36:
 1281              		.global	stabilization_att_ff_cmd
 1282              		.global	stabilization_att_fb_cmd
 1283              		.global	stabilization_att_sum_err
 1284              		.global	stabilization_att_sum_err_quat
 1285              		.global	stabilization_gains
 1286              		.section	.bss.stabilization_att_sum_err_quat,"aw",%nobits
 1287              		.align	2
 1288              		.set	.LANCHOR0,. + 0
 1291              	stabilization_att_sum_err_quat:
 1292 0000 00000000 		.space	16
 1292      00000000 
 1292      00000000 
 1292      00000000 
 1293              		.section	.bss.stabilization_att_fb_cmd,"aw",%nobits
 1294              		.align	2
 1295              		.set	.LANCHOR4,. + 0
 1298              	stabilization_att_fb_cmd:
 1299 0000 00000000 		.space	16
 1299      00000000 
 1299      00000000 
 1299      00000000 
 1300              		.section	.bss.stabilization_att_sum_err,"aw",%nobits
 1301              		.align	2
 1302              		.set	.LANCHOR1,. + 0
 1305              	stabilization_att_sum_err:
 1306 0000 00000000 		.space	12
 1306      00000000 
 1306      00000000 
 1307              		.section	.data.stabilization_gains,"aw",%progbits
 1308              		.align	2
 1309              		.set	.LANCHOR2,. + 0
 1312              	stabilization_gains:
 1313 0000 E8030000 		.word	1000
 1314 0004 E8030000 		.word	1000
 1315 0008 F4010000 		.word	500
 1316 000c 90010000 		.word	400
 1317 0010 90010000 		.word	400
 1318 0014 2C010000 		.word	300
 1319 0018 2C010000 		.word	300
 1320 001c 2C010000 		.word	300
 1321 0020 2C010000 		.word	300
 1322 0024 C8000000 		.word	200
 1323 0028 C8000000 		.word	200
 1324 002c 0A000000 		.word	10
 1325              		.section	.bss.stabilization_att_ff_cmd,"aw",%nobits
 1326              		.align	2
 1327              		.set	.LANCHOR3,. + 0
 1330              	stabilization_att_ff_cmd:
 1331 0000 00000000 		.space	16
 1331      00000000 
 1331      00000000 
 1331      00000000 
 1332              		.text
 1333              	.Letext0:
 1334              		.file 3 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 1335              		.file 4 "/home/uav/paparazzi/sw/include/std.h"
 1336              		.file 5 "./math/pprz_algebra_int.h"
 1337              		.file 6 "firmwares/rotorcraft/stabilization/stabilization_attitude_int.h"
 1338              		.file 7 "./subsystems/ahrs.h"
 1339              		.file 8 "./paparazzi.h"
 1340              		.file 9 "./subsystems/radio_control.h"
 1341              		.file 10 "./math/pprz_trig_int.h"
 1342              		.file 11 "firmwares/rotorcraft/stabilization/stabilization_attitude_ref_int.h"
 1343              		.file 12 "./firmwares/rotorcraft/stabilization.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stabilization_attitude_quat_int.c
     /tmp/ccWu0Dqw.s:18     .text.stabilization_attitude_init:0000000000000000 $t
     /tmp/ccWu0Dqw.s:23     .text.stabilization_attitude_init:0000000000000000 stabilization_attitude_init
     /tmp/ccWu0Dqw.s:55     .text.stabilization_attitude_init:0000000000000020 $d
     /tmp/ccWu0Dqw.s:61     .text.stabilization_attitude_enter:0000000000000000 $t
     /tmp/ccWu0Dqw.s:66     .text.stabilization_attitude_enter:0000000000000000 stabilization_attitude_enter
     /tmp/ccWu0Dqw.s:102    .text.stabilization_attitude_enter:0000000000000028 $d
     /tmp/ccWu0Dqw.s:114    .text.stabilization_attitude_run:0000000000000000 $t
     /tmp/ccWu0Dqw.s:119    .text.stabilization_attitude_run:0000000000000000 stabilization_attitude_run
     /tmp/ccWu0Dqw.s:528    .text.stabilization_attitude_run:00000000000002ac $d
     /tmp/ccWu0Dqw.s:538    .text.stabilization_attitude_run:00000000000002c0 $t
     /tmp/ccWu0Dqw.s:863    .text.stabilization_attitude_run:0000000000000598 $d
     /tmp/ccWu0Dqw.s:875    .text.stabilization_attitude_read_rc:0000000000000000 $t
     /tmp/ccWu0Dqw.s:880    .text.stabilization_attitude_read_rc:0000000000000000 stabilization_attitude_read_rc
     /tmp/ccWu0Dqw.s:1271   .text.stabilization_attitude_read_rc:0000000000000208 $d
     /tmp/ccWu0Dqw.s:1330   .bss.stabilization_att_ff_cmd:0000000000000000 stabilization_att_ff_cmd
     /tmp/ccWu0Dqw.s:1298   .bss.stabilization_att_fb_cmd:0000000000000000 stabilization_att_fb_cmd
     /tmp/ccWu0Dqw.s:1305   .bss.stabilization_att_sum_err:0000000000000000 stabilization_att_sum_err
     /tmp/ccWu0Dqw.s:1291   .bss.stabilization_att_sum_err_quat:0000000000000000 stabilization_att_sum_err_quat
     /tmp/ccWu0Dqw.s:1312   .data.stabilization_gains:0000000000000000 stabilization_gains
     /tmp/ccWu0Dqw.s:1287   .bss.stabilization_att_sum_err_quat:0000000000000000 $d
     /tmp/ccWu0Dqw.s:1294   .bss.stabilization_att_fb_cmd:0000000000000000 $d
     /tmp/ccWu0Dqw.s:1301   .bss.stabilization_att_sum_err:0000000000000000 $d
     /tmp/ccWu0Dqw.s:1308   .data.stabilization_gains:0000000000000000 $d
     /tmp/ccWu0Dqw.s:1326   .bss.stabilization_att_ff_cmd:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
stabilization_attitude_ref_init
stabilization_attitude_ref_enter
ahrs
stab_att_sp_euler
__aeabi_i2f
__aeabi_fmul
__aeabi_f2iz
__aeabi_fadd
stabilization_attitude_ref_update
atan2f
asinf
stab_att_ref_quat
stab_att_ref_rate
stab_att_ref_accel
stabilization_cmd
radio_control
pprz_trig_int
stab_att_sp_quat
