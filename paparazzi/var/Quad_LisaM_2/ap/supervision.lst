   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"supervision.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.supervision_init,"ax",%progbits
  18              		.align	1
  19              		.global	supervision_init
  20              		.thumb
  21              		.thumb_func
  23              	supervision_init:
  24              	.LFB0:
  25              		.file 1 "firmwares/rotorcraft/actuators/supervision.c"
   1:firmwares/rotorcraft/actuators/supervision.c **** /*
   2:firmwares/rotorcraft/actuators/supervision.c ****  * Copyright (C) 2008-2012 The Paparazzi Team
   3:firmwares/rotorcraft/actuators/supervision.c ****  *
   4:firmwares/rotorcraft/actuators/supervision.c ****  * This file is part of Paparazzi.
   5:firmwares/rotorcraft/actuators/supervision.c ****  *
   6:firmwares/rotorcraft/actuators/supervision.c ****  * Paparazzi is free software; you can redistribute it and/or modify
   7:firmwares/rotorcraft/actuators/supervision.c ****  * it under the terms of the GNU General Public License as published by
   8:firmwares/rotorcraft/actuators/supervision.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:firmwares/rotorcraft/actuators/supervision.c ****  * any later version.
  10:firmwares/rotorcraft/actuators/supervision.c ****  *
  11:firmwares/rotorcraft/actuators/supervision.c ****  * Paparazzi is distributed in the hope that it will be useful,
  12:firmwares/rotorcraft/actuators/supervision.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:firmwares/rotorcraft/actuators/supervision.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:firmwares/rotorcraft/actuators/supervision.c ****  * GNU General Public License for more details.
  15:firmwares/rotorcraft/actuators/supervision.c ****  *
  16:firmwares/rotorcraft/actuators/supervision.c ****  * You should have received a copy of the GNU General Public License
  17:firmwares/rotorcraft/actuators/supervision.c ****  * along with Paparazzi; see the file COPYING.  If not, write to
  18:firmwares/rotorcraft/actuators/supervision.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:firmwares/rotorcraft/actuators/supervision.c ****  * Boston, MA 02111-1307, USA.
  20:firmwares/rotorcraft/actuators/supervision.c ****  */
  21:firmwares/rotorcraft/actuators/supervision.c **** 
  22:firmwares/rotorcraft/actuators/supervision.c **** /** @file supervision.c
  23:firmwares/rotorcraft/actuators/supervision.c ****  *  Supervision.
  24:firmwares/rotorcraft/actuators/supervision.c ****  *  Handles the mapping of roll/pitch/yaw commands
  25:firmwares/rotorcraft/actuators/supervision.c ****  *  to actual motor commands.
  26:firmwares/rotorcraft/actuators/supervision.c ****  */
  27:firmwares/rotorcraft/actuators/supervision.c **** 
  28:firmwares/rotorcraft/actuators/supervision.c **** #include "firmwares/rotorcraft/actuators/supervision.h"
  29:firmwares/rotorcraft/actuators/supervision.c **** #include "paparazzi.h"
  30:firmwares/rotorcraft/actuators/supervision.c **** 
  31:firmwares/rotorcraft/actuators/supervision.c **** //#include <stdint.h>
  32:firmwares/rotorcraft/actuators/supervision.c **** #ifndef INT32_MIN
  33:firmwares/rotorcraft/actuators/supervision.c **** #define INT32_MIN (-2147483647-1)
  34:firmwares/rotorcraft/actuators/supervision.c **** #endif
  35:firmwares/rotorcraft/actuators/supervision.c **** 
  36:firmwares/rotorcraft/actuators/supervision.c **** #ifndef INT32_MAX
  37:firmwares/rotorcraft/actuators/supervision.c **** #define INT32_MAX (2147483647)
  38:firmwares/rotorcraft/actuators/supervision.c **** #endif
  39:firmwares/rotorcraft/actuators/supervision.c **** 
  40:firmwares/rotorcraft/actuators/supervision.c **** #ifndef SUPERVISION_STOP_MOTOR
  41:firmwares/rotorcraft/actuators/supervision.c **** #define SUPERVISION_STOP_MOTOR 0
  42:firmwares/rotorcraft/actuators/supervision.c **** #endif
  43:firmwares/rotorcraft/actuators/supervision.c **** 
  44:firmwares/rotorcraft/actuators/supervision.c **** #ifndef SUPERVISION_MIN_MOTOR_STARTUP
  45:firmwares/rotorcraft/actuators/supervision.c **** #define SUPERVISION_MIN_MOTOR_STARTUP SUPERVISION_MIN_MOTOR
  46:firmwares/rotorcraft/actuators/supervision.c **** #endif
  47:firmwares/rotorcraft/actuators/supervision.c **** 
  48:firmwares/rotorcraft/actuators/supervision.c **** #if defined (SUPERVISION_MAX_NEGATIVE_MOTOR_STEP) || defined (SUPERVISION_MAX_POSITIVE_MOTOR_STEP)
  49:firmwares/rotorcraft/actuators/supervision.c **** #define SUPERVISION_USE_MAX_MOTOR_STEP_BINDING
  50:firmwares/rotorcraft/actuators/supervision.c **** 
  51:firmwares/rotorcraft/actuators/supervision.c **** #ifndef SUPERVISION_MAX_NEGATIVE_MOTOR_STEP
  52:firmwares/rotorcraft/actuators/supervision.c **** #define SUPERVISION_MAX_NEGATIVE_MOTOR_STEP INT32_MIN
  53:firmwares/rotorcraft/actuators/supervision.c **** #endif
  54:firmwares/rotorcraft/actuators/supervision.c **** /*
  55:firmwares/rotorcraft/actuators/supervision.c **** #ifndef SUPERVISION_MAX_POSITIVE_MOTOR_STEP
  56:firmwares/rotorcraft/actuators/supervision.c **** #define SUPERVISION_MAX_POSITIVE_MOTOR_STEP INT32_MAX
  57:firmwares/rotorcraft/actuators/supervision.c **** #endif
  58:firmwares/rotorcraft/actuators/supervision.c **** */
  59:firmwares/rotorcraft/actuators/supervision.c **** #endif
  60:firmwares/rotorcraft/actuators/supervision.c **** 
  61:firmwares/rotorcraft/actuators/supervision.c **** static const int32_t roll_coef[SUPERVISION_NB_MOTOR]   = SUPERVISION_ROLL_COEF;
  62:firmwares/rotorcraft/actuators/supervision.c **** static const int32_t pitch_coef[SUPERVISION_NB_MOTOR]  = SUPERVISION_PITCH_COEF;
  63:firmwares/rotorcraft/actuators/supervision.c **** static const int32_t yaw_coef[SUPERVISION_NB_MOTOR]    = SUPERVISION_YAW_COEF;
  64:firmwares/rotorcraft/actuators/supervision.c **** static const int32_t thrust_coef[SUPERVISION_NB_MOTOR] = SUPERVISION_THRUST_COEF;
  65:firmwares/rotorcraft/actuators/supervision.c **** 
  66:firmwares/rotorcraft/actuators/supervision.c **** struct Supervision supervision;
  67:firmwares/rotorcraft/actuators/supervision.c **** 
  68:firmwares/rotorcraft/actuators/supervision.c **** void supervision_init(void) {
  26              		.loc 1 68 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 0A4B     		ldr	r3, .L4
  32 0002 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 4, -8
  37              		.loc 1 68 0
  38 0004 03F11F00 		add	r0, r3, #31
  39 0008 0422     		movs	r2, #4
  69:firmwares/rotorcraft/actuators/supervision.c ****   uint8_t i;
  70:firmwares/rotorcraft/actuators/supervision.c ****   for (i=0; i<SUPERVISION_NB_MOTOR; i++) {
  71:firmwares/rotorcraft/actuators/supervision.c ****     supervision.commands[i] = 0;
  40              		.loc 1 71 0
  41 000a 0021     		movs	r1, #0
  72:firmwares/rotorcraft/actuators/supervision.c ****     supervision.trim[i] =
  73:firmwares/rotorcraft/actuators/supervision.c ****       roll_coef[i]  * SUPERVISION_TRIM_A +
  74:firmwares/rotorcraft/actuators/supervision.c ****       pitch_coef[i] * SUPERVISION_TRIM_E +
  75:firmwares/rotorcraft/actuators/supervision.c ****       yaw_coef[i]   * SUPERVISION_TRIM_R;
  76:firmwares/rotorcraft/actuators/supervision.c ****     supervision.override_enabled[i] = FALSE;
  77:firmwares/rotorcraft/actuators/supervision.c ****     supervision.override_value[i] = SUPERVISION_STOP_MOTOR;
  42              		.loc 1 77 0
  43 000c 4FF47A74 		mov	r4, #1000
  44              	.LVL1:
  45              	.L2:
  46              		.loc 1 77 0 is_stmt 0 discriminator 2
  47 0010 013A     		subs	r2, r2, #1
  48 0012 D2B2     		uxtb	r2, r2
  71:firmwares/rotorcraft/actuators/supervision.c ****     supervision.commands[i] = 0;
  49              		.loc 1 71 0 is_stmt 1 discriminator 2
  50 0014 1960     		str	r1, [r3, #0]
  72:firmwares/rotorcraft/actuators/supervision.c ****     supervision.trim[i] =
  51              		.loc 1 72 0 discriminator 2
  52 0016 1961     		str	r1, [r3, #16]
  76:firmwares/rotorcraft/actuators/supervision.c ****     supervision.override_enabled[i] = FALSE;
  53              		.loc 1 76 0 discriminator 2
  54 0018 00F8011F 		strb	r1, [r0, #1]!
  55              		.loc 1 77 0 discriminator 2
  56 001c 5C62     		str	r4, [r3, #36]
  57 001e 0433     		adds	r3, r3, #4
  70:firmwares/rotorcraft/actuators/supervision.c ****   for (i=0; i<SUPERVISION_NB_MOTOR; i++) {
  58              		.loc 1 70 0 discriminator 2
  59 0020 002A     		cmp	r2, #0
  60 0022 F5D1     		bne	.L2
  78:firmwares/rotorcraft/actuators/supervision.c ****   }
  79:firmwares/rotorcraft/actuators/supervision.c ****   supervision.nb_failure = 0;
  61              		.loc 1 79 0
  62 0024 014B     		ldr	r3, .L4
  63 0026 5A63     		str	r2, [r3, #52]
  80:firmwares/rotorcraft/actuators/supervision.c **** }
  64              		.loc 1 80 0
  65 0028 10BD     		pop	{r4, pc}
  66              	.L5:
  67 002a 00BF     		.align	2
  68              	.L4:
  69 002c 00000000 		.word	.LANCHOR0
  70              		.cfi_endproc
  71              	.LFE0:
  73              		.section	.text.supervision_run_spinup,"ax",%progbits
  74              		.align	1
  75              		.global	supervision_run_spinup
  76              		.thumb
  77              		.thumb_func
  79              	supervision_run_spinup:
  80              	.LFB4:
  81:firmwares/rotorcraft/actuators/supervision.c **** 
  82:firmwares/rotorcraft/actuators/supervision.c **** __attribute__ ((always_inline)) static inline void offset_commands(int32_t offset) {
  83:firmwares/rotorcraft/actuators/supervision.c ****   uint8_t j;
  84:firmwares/rotorcraft/actuators/supervision.c ****   for (j=0; j<SUPERVISION_NB_MOTOR; j++)
  85:firmwares/rotorcraft/actuators/supervision.c ****     supervision.commands[j] += (offset);
  86:firmwares/rotorcraft/actuators/supervision.c **** }
  87:firmwares/rotorcraft/actuators/supervision.c **** 
  88:firmwares/rotorcraft/actuators/supervision.c **** __attribute__ ((always_inline)) static inline void bound_commands(void) {
  89:firmwares/rotorcraft/actuators/supervision.c ****   uint8_t j;
  90:firmwares/rotorcraft/actuators/supervision.c ****   for (j=0; j<SUPERVISION_NB_MOTOR; j++)
  91:firmwares/rotorcraft/actuators/supervision.c ****     Bound(supervision.commands[j],
  92:firmwares/rotorcraft/actuators/supervision.c ****           SUPERVISION_MIN_MOTOR, SUPERVISION_MAX_MOTOR);
  93:firmwares/rotorcraft/actuators/supervision.c **** }
  94:firmwares/rotorcraft/actuators/supervision.c **** 
  95:firmwares/rotorcraft/actuators/supervision.c **** #ifdef SUPERVISION_USE_MAX_MOTOR_STEP_BINDING
  96:firmwares/rotorcraft/actuators/supervision.c **** __attribute__ ((always_inline)) static inline void bound_commands_step(void) {
  97:firmwares/rotorcraft/actuators/supervision.c ****   uint8_t j;
  98:firmwares/rotorcraft/actuators/supervision.c ****   static int32_t prev_commands[SUPERVISION_NB_MOTOR];
  99:firmwares/rotorcraft/actuators/supervision.c ****   static uint8_t initialized = 0;
 100:firmwares/rotorcraft/actuators/supervision.c **** 
 101:firmwares/rotorcraft/actuators/supervision.c ****   if (initialized == 1) {
 102:firmwares/rotorcraft/actuators/supervision.c ****     for (j=0; j<SUPERVISION_NB_MOTOR; j++) {
 103:firmwares/rotorcraft/actuators/supervision.c ****       int32_t new_command_diff = supervision.commands[j] - prev_commands[j];
 104:firmwares/rotorcraft/actuators/supervision.c ****       Bound(new_command_diff,
 105:firmwares/rotorcraft/actuators/supervision.c ****             SUPERVISION_MAX_NEGATIVE_MOTOR_STEP, SUPERVISION_MAX_POSITIVE_MOTOR_STEP);
 106:firmwares/rotorcraft/actuators/supervision.c ****       supervision.commands[j] = prev_commands[j] + new_command_diff;
 107:firmwares/rotorcraft/actuators/supervision.c ****     }
 108:firmwares/rotorcraft/actuators/supervision.c ****   }else{
 109:firmwares/rotorcraft/actuators/supervision.c ****     initialized = 1;
 110:firmwares/rotorcraft/actuators/supervision.c ****   }
 111:firmwares/rotorcraft/actuators/supervision.c **** 
 112:firmwares/rotorcraft/actuators/supervision.c ****   for (j=0; j<SUPERVISION_NB_MOTOR; j++)
 113:firmwares/rotorcraft/actuators/supervision.c ****     prev_commands[j] = supervision.commands[j];
 114:firmwares/rotorcraft/actuators/supervision.c **** }
 115:firmwares/rotorcraft/actuators/supervision.c **** #else
 116:firmwares/rotorcraft/actuators/supervision.c **** __attribute__ ((always_inline)) static inline void bound_commands_step(void) {
 117:firmwares/rotorcraft/actuators/supervision.c **** }
 118:firmwares/rotorcraft/actuators/supervision.c **** #endif
 119:firmwares/rotorcraft/actuators/supervision.c **** 
 120:firmwares/rotorcraft/actuators/supervision.c **** void supervision_run_spinup(uint32_t counter, uint32_t max_counter)
 121:firmwares/rotorcraft/actuators/supervision.c **** {
  81              		.loc 1 121 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL2:
  86 0000 30B5     		push	{r4, r5, lr}
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 12
  89              		.cfi_offset 14, -4
  90              		.cfi_offset 5, -8
  91              		.cfi_offset 4, -12
  92              		.loc 1 121 0
  93 0002 0023     		movs	r3, #0
 122:firmwares/rotorcraft/actuators/supervision.c ****   int i;
 123:firmwares/rotorcraft/actuators/supervision.c ****   for (i = 0; i < SUPERVISION_NB_MOTOR; i++) {
 124:firmwares/rotorcraft/actuators/supervision.c **** #ifdef SUPERVISION_STARTUP_DELAY
 125:firmwares/rotorcraft/actuators/supervision.c ****     if (counter > i * max_counter / (SUPERVISION_NB_MOTOR + SUPERVISION_STARTUP_DELAY)) {
 126:firmwares/rotorcraft/actuators/supervision.c ****       if (counter > SUPERVISION_NB_MOTOR * max_counter / (SUPERVISION_NB_MOTOR + SUPERVISION_STARTU
 127:firmwares/rotorcraft/actuators/supervision.c ****         supervision.commands[i] = SUPERVISION_MIN_MOTOR_STARTUP + (SUPERVISION_MIN_MOTOR - SUPERVIS
 128:firmwares/rotorcraft/actuators/supervision.c ****       } else {
 129:firmwares/rotorcraft/actuators/supervision.c ****         supervision.commands[i] = SUPERVISION_MIN_MOTOR_STARTUP;
 130:firmwares/rotorcraft/actuators/supervision.c ****       }
 131:firmwares/rotorcraft/actuators/supervision.c ****     } else {
 132:firmwares/rotorcraft/actuators/supervision.c ****       supervision.commands[i] = 0;
 133:firmwares/rotorcraft/actuators/supervision.c ****     }
 134:firmwares/rotorcraft/actuators/supervision.c **** #else
 135:firmwares/rotorcraft/actuators/supervision.c ****     if (counter < i * max_counter / SUPERVISION_NB_MOTOR) {
 136:firmwares/rotorcraft/actuators/supervision.c ****       supervision.commands[i] = SUPERVISION_MIN_MOTOR_STARTUP;
  94              		.loc 1 136 0
  95 0004 064D     		ldr	r5, .L10
 121:firmwares/rotorcraft/actuators/supervision.c **** {
  96              		.loc 1 121 0
  97 0006 1A46     		mov	r2, r3
  98              		.loc 1 136 0
  99 0008 40F24C44 		movw	r4, #1100
 100              	.LVL3:
 101              	.L8:
 135:firmwares/rotorcraft/actuators/supervision.c ****     if (counter < i * max_counter / SUPERVISION_NB_MOTOR) {
 102              		.loc 1 135 0
 103 000c B0EB920F 		cmp	r0, r2, lsr #2
 104              		.loc 1 136 0
 105 0010 38BF     		it	cc
 106 0012 5C51     		strcc	r4, [r3, r5]
 107 0014 0433     		adds	r3, r3, #4
 123:firmwares/rotorcraft/actuators/supervision.c ****   for (i = 0; i < SUPERVISION_NB_MOTOR; i++) {
 108              		.loc 1 123 0
 109 0016 102B     		cmp	r3, #16
 110              		.loc 1 136 0
 111 0018 0A44     		add	r2, r2, r1
 123:firmwares/rotorcraft/actuators/supervision.c ****   for (i = 0; i < SUPERVISION_NB_MOTOR; i++) {
 112              		.loc 1 123 0
 113 001a F7D1     		bne	.L8
 137:firmwares/rotorcraft/actuators/supervision.c ****     }
 138:firmwares/rotorcraft/actuators/supervision.c **** #endif
 139:firmwares/rotorcraft/actuators/supervision.c ****   }
 140:firmwares/rotorcraft/actuators/supervision.c **** }
 114              		.loc 1 140 0
 115 001c 30BD     		pop	{r4, r5, pc}
 116              	.L11:
 117 001e 00BF     		.align	2
 118              	.L10:
 119 0020 00000000 		.word	.LANCHOR0
 120              		.cfi_endproc
 121              	.LFE4:
 123              		.section	.text.supervision_run,"ax",%progbits
 124              		.align	1
 125              		.global	supervision_run
 126              		.thumb
 127              		.thumb_func
 129              	supervision_run:
 130              	.LFB5:
 141:firmwares/rotorcraft/actuators/supervision.c **** 
 142:firmwares/rotorcraft/actuators/supervision.c **** void supervision_run(bool_t motors_on, bool_t override_on, int32_t in_cmd[] ) {
 131              		.loc 1 142 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              	.LVL4:
 136 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 48
 139              		.cfi_offset 14, -4
 140              		.cfi_offset 11, -8
 141              		.cfi_offset 10, -12
 142              		.cfi_offset 9, -16
 143              		.cfi_offset 8, -20
 144              		.cfi_offset 7, -24
 145              		.cfi_offset 6, -28
 146              		.cfi_offset 5, -32
 147              		.cfi_offset 4, -36
 148              		.cfi_offset 2, -40
 149              		.cfi_offset 1, -44
 150              		.cfi_offset 0, -48
 143:firmwares/rotorcraft/actuators/supervision.c ****   uint8_t i;
 144:firmwares/rotorcraft/actuators/supervision.c ****   if (motors_on) {
 151              		.loc 1 144 0
 152 0004 38B9     		cbnz	r0, .L13
 153              	.LVL5:
 145:firmwares/rotorcraft/actuators/supervision.c ****     int32_t min_cmd = INT32_MAX;
 146:firmwares/rotorcraft/actuators/supervision.c ****     int32_t max_cmd = INT32_MIN;
 147:firmwares/rotorcraft/actuators/supervision.c ****     /* do the mixing in float to avoid overflows, implicitly casted back to int32_t */
 148:firmwares/rotorcraft/actuators/supervision.c ****     for (i=0; i<SUPERVISION_NB_MOTOR; i++) {
 149:firmwares/rotorcraft/actuators/supervision.c ****       supervision.commands[i] = SUPERVISION_MIN_MOTOR +
 150:firmwares/rotorcraft/actuators/supervision.c ****         (thrust_coef[i] * in_cmd[COMMAND_THRUST] +
 151:firmwares/rotorcraft/actuators/supervision.c ****          roll_coef[i]   * in_cmd[COMMAND_ROLL]   +
 152:firmwares/rotorcraft/actuators/supervision.c ****          pitch_coef[i]  * in_cmd[COMMAND_PITCH]  +
 153:firmwares/rotorcraft/actuators/supervision.c ****          yaw_coef[i]    * in_cmd[COMMAND_YAW]    +
 154:firmwares/rotorcraft/actuators/supervision.c ****          supervision.trim[i]) / SUPERVISION_SCALE *
 155:firmwares/rotorcraft/actuators/supervision.c ****         (SUPERVISION_MAX_MOTOR - SUPERVISION_MIN_MOTOR) / MAX_PPRZ;
 156:firmwares/rotorcraft/actuators/supervision.c ****       if (supervision.commands[i] < min_cmd)
 157:firmwares/rotorcraft/actuators/supervision.c ****         min_cmd = supervision.commands[i];
 158:firmwares/rotorcraft/actuators/supervision.c ****       if (supervision.commands[i] > max_cmd)
 159:firmwares/rotorcraft/actuators/supervision.c ****         max_cmd = supervision.commands[i];
 160:firmwares/rotorcraft/actuators/supervision.c ****     }
 161:firmwares/rotorcraft/actuators/supervision.c ****     if (min_cmd < SUPERVISION_MIN_MOTOR && max_cmd > SUPERVISION_MAX_MOTOR)
 162:firmwares/rotorcraft/actuators/supervision.c ****       supervision.nb_failure++;
 163:firmwares/rotorcraft/actuators/supervision.c ****     if (min_cmd < SUPERVISION_MIN_MOTOR)
 164:firmwares/rotorcraft/actuators/supervision.c ****       offset_commands(-(min_cmd - SUPERVISION_MIN_MOTOR));
 165:firmwares/rotorcraft/actuators/supervision.c ****     if (max_cmd > SUPERVISION_MAX_MOTOR)
 166:firmwares/rotorcraft/actuators/supervision.c ****       offset_commands(-(max_cmd - SUPERVISION_MAX_MOTOR));
 167:firmwares/rotorcraft/actuators/supervision.c **** 
 168:firmwares/rotorcraft/actuators/supervision.c ****     /* For testing motor failure */
 169:firmwares/rotorcraft/actuators/supervision.c ****     if (motors_on && override_on) {
 170:firmwares/rotorcraft/actuators/supervision.c ****       for (i = 0; i < SUPERVISION_NB_MOTOR; i++) {
 171:firmwares/rotorcraft/actuators/supervision.c ****         if (supervision.override_enabled[i])
 172:firmwares/rotorcraft/actuators/supervision.c ****           supervision.commands[i] = supervision.override_value[i];
 173:firmwares/rotorcraft/actuators/supervision.c ****       }
 174:firmwares/rotorcraft/actuators/supervision.c ****     }
 175:firmwares/rotorcraft/actuators/supervision.c ****     bound_commands();
 176:firmwares/rotorcraft/actuators/supervision.c ****     bound_commands_step();
 177:firmwares/rotorcraft/actuators/supervision.c ****   }
 178:firmwares/rotorcraft/actuators/supervision.c ****   else {
 179:firmwares/rotorcraft/actuators/supervision.c ****     for (i=0; i<SUPERVISION_NB_MOTOR; i++) {
 180:firmwares/rotorcraft/actuators/supervision.c ****       supervision.commands[i] = SUPERVISION_STOP_MOTOR;
 154              		.loc 1 180 0 discriminator 1
 155 0006 4C4B     		ldr	r3, .L32
 156 0008 4FF47A72 		mov	r2, #1000
 157              	.LVL6:
 158 000c 1A60     		str	r2, [r3, #0]
 159              	.LVL7:
 160 000e 5A60     		str	r2, [r3, #4]
 161              	.LVL8:
 162 0010 9A60     		str	r2, [r3, #8]
 163              	.LVL9:
 164 0012 DA60     		str	r2, [r3, #12]
 165              	.LVL10:
 166 0014 8DE0     		b	.L12
 167              	.LVL11:
 168              	.L13:
 169              		.loc 1 180 0 is_stmt 0
 170 0016 494D     		ldr	r5, .L32+4
 171              	.LBB11:
 150:firmwares/rotorcraft/actuators/supervision.c ****         (thrust_coef[i] * in_cmd[COMMAND_THRUST] +
 172              		.loc 1 150 0 is_stmt 1
 173 0018 DFF83081 		ldr	r8, .L32+20
 149:firmwares/rotorcraft/actuators/supervision.c ****       supervision.commands[i] = SUPERVISION_MIN_MOTOR +
 174              		.loc 1 149 0
 175 001c 8DE82200 		stmia	sp, {r1, r5}
 151:firmwares/rotorcraft/actuators/supervision.c ****          roll_coef[i]   * in_cmd[COMMAND_ROLL]   +
 176              		.loc 1 151 0
 177 0020 DFF82CC1 		ldr	ip, .L32+24
 153:firmwares/rotorcraft/actuators/supervision.c ****          yaw_coef[i]    * in_cmd[COMMAND_YAW]    +
 178              		.loc 1 153 0
 179 0024 464F     		ldr	r7, .L32+8
 152:firmwares/rotorcraft/actuators/supervision.c ****          pitch_coef[i]  * in_cmd[COMMAND_PITCH]  +
 180              		.loc 1 152 0
 181 0026 474E     		ldr	r6, .L32+12
 182              	.LBE11:
 144:firmwares/rotorcraft/actuators/supervision.c ****   if (motors_on) {
 183              		.loc 1 144 0
 184 0028 0023     		movs	r3, #0
 185 002a 4FF00040 		mov	r0, #-2147483648
 186              	.LVL12:
 187 002e 6FF00044 		mvn	r4, #-2147483648
 188              	.LVL13:
 189              	.L15:
 190              	.LBB20:
 151:firmwares/rotorcraft/actuators/supervision.c ****          roll_coef[i]   * in_cmd[COMMAND_ROLL]   +
 191              		.loc 1 151 0
 192 0032 53F80C90 		ldr	r9, [r3, ip]
 193 0036 D2F800B0 		ldr	fp, [r2, #0]
 150:firmwares/rotorcraft/actuators/supervision.c ****         (thrust_coef[i] * in_cmd[COMMAND_THRUST] +
 194              		.loc 1 150 0
 195 003a 53F80850 		ldr	r5, [r3, r8]
 151:firmwares/rotorcraft/actuators/supervision.c ****          roll_coef[i]   * in_cmd[COMMAND_ROLL]   +
 196              		.loc 1 151 0
 197 003e 0BFB09FB 		mul	fp, fp, r9
 150:firmwares/rotorcraft/actuators/supervision.c ****         (thrust_coef[i] * in_cmd[COMMAND_THRUST] +
 198              		.loc 1 150 0
 199 0042 D2F80CA0 		ldr	sl, [r2, #12]
 152:firmwares/rotorcraft/actuators/supervision.c ****          pitch_coef[i]  * in_cmd[COMMAND_PITCH]  +
 200              		.loc 1 152 0
 201 0046 53F80690 		ldr	r9, [r3, r6]
 150:firmwares/rotorcraft/actuators/supervision.c ****         (thrust_coef[i] * in_cmd[COMMAND_THRUST] +
 202              		.loc 1 150 0
 203 004a 0AFB05BB 		mla	fp, sl, r5, fp
 152:firmwares/rotorcraft/actuators/supervision.c ****          pitch_coef[i]  * in_cmd[COMMAND_PITCH]  +
 204              		.loc 1 152 0
 205 004e D2F804A0 		ldr	sl, [r2, #4]
 206 0052 D959     		ldr	r1, [r3, r7]
 207 0054 0AFB09F9 		mul	r9, sl, r9
 208 0058 9568     		ldr	r5, [r2, #8]
 209 005a 05FB0199 		mla	r9, r5, r1, r9
 153:firmwares/rotorcraft/actuators/supervision.c ****          yaw_coef[i]    * in_cmd[COMMAND_YAW]    +
 210              		.loc 1 153 0
 211 005e 0199     		ldr	r1, [sp, #4]
 152:firmwares/rotorcraft/actuators/supervision.c ****          pitch_coef[i]  * in_cmd[COMMAND_PITCH]  +
 212              		.loc 1 152 0
 213 0060 CB44     		add	fp, fp, r9
 153:firmwares/rotorcraft/actuators/supervision.c ****          yaw_coef[i]    * in_cmd[COMMAND_YAW]    +
 214              		.loc 1 153 0
 215 0062 51F804AF 		ldr	sl, [r1, #4]!
 155:firmwares/rotorcraft/actuators/supervision.c ****         (SUPERVISION_MAX_MOTOR - SUPERVISION_MIN_MOTOR) / MAX_PPRZ;
 216              		.loc 1 155 0
 217 0066 4FF44065 		mov	r5, #3072
 153:firmwares/rotorcraft/actuators/supervision.c ****          yaw_coef[i]    * in_cmd[COMMAND_YAW]    +
 218              		.loc 1 153 0
 219 006a D344     		add	fp, fp, sl
 155:firmwares/rotorcraft/actuators/supervision.c ****         (SUPERVISION_MAX_MOTOR - SUPERVISION_MIN_MOTOR) / MAX_PPRZ;
 220              		.loc 1 155 0
 221 006c 9BFBF5FB 		sdiv	fp, fp, r5
 149:firmwares/rotorcraft/actuators/supervision.c ****       supervision.commands[i] = SUPERVISION_MIN_MOTOR +
 222              		.loc 1 149 0
 223 0070 DFF8C490 		ldr	r9, .L32
 224 0074 0BF24C4B 		addw	fp, fp, #1100
 225 0078 43F809B0 		str	fp, [r3, r9]
 226 007c 0433     		adds	r3, r3, #4
 227 007e 5C45     		cmp	r4, fp
 228 0080 A8BF     		it	ge
 229 0082 5C46     		movge	r4, fp
 230              	.LVL14:
 231 0084 5845     		cmp	r0, fp
 232 0086 B8BF     		it	lt
 233 0088 5846     		movlt	r0, fp
 234              	.LVL15:
 148:firmwares/rotorcraft/actuators/supervision.c ****     for (i=0; i<SUPERVISION_NB_MOTOR; i++) {
 235              		.loc 1 148 0
 236 008a 102B     		cmp	r3, #16
 153:firmwares/rotorcraft/actuators/supervision.c ****          yaw_coef[i]    * in_cmd[COMMAND_YAW]    +
 237              		.loc 1 153 0
 238 008c 0191     		str	r1, [sp, #4]
 148:firmwares/rotorcraft/actuators/supervision.c ****     for (i=0; i<SUPERVISION_NB_MOTOR; i++) {
 239              		.loc 1 148 0
 240 008e D0D1     		bne	.L15
 161:firmwares/rotorcraft/actuators/supervision.c ****     if (min_cmd < SUPERVISION_MIN_MOTOR && max_cmd > SUPERVISION_MAX_MOTOR)
 241              		.loc 1 161 0
 242 0090 40F24B43 		movw	r3, #1099
 243 0094 9C42     		cmp	r4, r3
 244 0096 0099     		ldr	r1, [sp, #0]
 245 0098 0FDC     		bgt	.L16
 161:firmwares/rotorcraft/actuators/supervision.c ****     if (min_cmd < SUPERVISION_MIN_MOTOR && max_cmd > SUPERVISION_MAX_MOTOR)
 246              		.loc 1 161 0 is_stmt 0 discriminator 1
 247 009a 40F26C73 		movw	r3, #1900
 248 009e 9842     		cmp	r0, r3
 249 00a0 40DD     		ble	.L17
 162:firmwares/rotorcraft/actuators/supervision.c ****       supervision.nb_failure++;
 250              		.loc 1 162 0 is_stmt 1
 251 00a2 D9F83430 		ldr	r3, [r9, #52]
 252 00a6 0133     		adds	r3, r3, #1
 253 00a8 C9F83430 		str	r3, [r9, #52]
 254 00ac 3AE0     		b	.L17
 255              	.LVL16:
 256              	.L18:
 257              	.LBB12:
 258              	.LBB13:
  85:firmwares/rotorcraft/actuators/supervision.c ****     supervision.commands[j] += (offset);
 259              		.loc 1 85 0
 260 00ae 1D68     		ldr	r5, [r3, #0]
 261 00b0 2D19     		adds	r5, r5, r4
 262 00b2 43F8045B 		str	r5, [r3], #4
  84:firmwares/rotorcraft/actuators/supervision.c ****   for (j=0; j<SUPERVISION_NB_MOTOR; j++)
 263              		.loc 1 84 0
 264 00b6 9342     		cmp	r3, r2
 265 00b8 F9D1     		bne	.L18
 266              	.LVL17:
 267              	.L16:
 268              	.LBE13:
 269              	.LBE12:
 165:firmwares/rotorcraft/actuators/supervision.c ****     if (max_cmd > SUPERVISION_MAX_MOTOR)
 270              		.loc 1 165 0
 271 00ba 40F26C73 		movw	r3, #1900
 272 00be 9842     		cmp	r0, r3
 273 00c0 0BDD     		ble	.L19
 166:firmwares/rotorcraft/actuators/supervision.c ****       offset_commands(-(max_cmd - SUPERVISION_MAX_MOTOR));
 274              		.loc 1 166 0
 275 00c2 1D4B     		ldr	r3, .L32
 276 00c4 C0F5ED60 		rsb	r0, r0, #1896
 277              	.LVL18:
 278 00c8 0430     		adds	r0, r0, #4
 279              	.LVL19:
 142:firmwares/rotorcraft/actuators/supervision.c **** void supervision_run(bool_t motors_on, bool_t override_on, int32_t in_cmd[] ) {
 280              		.loc 1 142 0
 281 00ca 03F11002 		add	r2, r3, #16
 282              	.LVL20:
 283              	.L20:
 284              	.LBB14:
 285              	.LBB15:
  85:firmwares/rotorcraft/actuators/supervision.c ****     supervision.commands[j] += (offset);
 286              		.loc 1 85 0
 287 00ce 1C68     		ldr	r4, [r3, #0]
 288 00d0 2418     		adds	r4, r4, r0
 289 00d2 43F8044B 		str	r4, [r3], #4
  84:firmwares/rotorcraft/actuators/supervision.c ****   for (j=0; j<SUPERVISION_NB_MOTOR; j++)
 290              		.loc 1 84 0
 291 00d6 9342     		cmp	r3, r2
 292 00d8 F9D1     		bne	.L20
 293              	.LVL21:
 294              	.L19:
 295              	.LBE15:
 296              	.LBE14:
 169:firmwares/rotorcraft/actuators/supervision.c ****     if (motors_on && override_on) {
 297              		.loc 1 169 0
 298 00da 61B1     		cbz	r1, .L21
 299 00dc 1A49     		ldr	r1, .L32+16
 300 00de 0023     		movs	r3, #0
 142:firmwares/rotorcraft/actuators/supervision.c **** void supervision_run(bool_t motors_on, bool_t override_on, int32_t in_cmd[] ) {
 301              		.loc 1 142 0
 302 00e0 A1F11F02 		sub	r2, r1, #31
 303              	.L23:
 171:firmwares/rotorcraft/actuators/supervision.c ****         if (supervision.override_enabled[i])
 304              		.loc 1 171 0
 305 00e4 11F8010F 		ldrb	r0, [r1, #1]!	@ zero_extendqisi2
 306 00e8 10B1     		cbz	r0, .L22
 142:firmwares/rotorcraft/actuators/supervision.c **** void supervision_run(bool_t motors_on, bool_t override_on, int32_t in_cmd[] ) {
 307              		.loc 1 142 0
 308 00ea D018     		adds	r0, r2, r3
 172:firmwares/rotorcraft/actuators/supervision.c ****           supervision.commands[i] = supervision.override_value[i];
 309              		.loc 1 172 0
 310 00ec 406A     		ldr	r0, [r0, #36]
 311 00ee 9850     		str	r0, [r3, r2]
 312              	.L22:
 313 00f0 0433     		adds	r3, r3, #4
 170:firmwares/rotorcraft/actuators/supervision.c ****       for (i = 0; i < SUPERVISION_NB_MOTOR; i++) {
 314              		.loc 1 170 0
 315 00f2 102B     		cmp	r3, #16
 316 00f4 F6D1     		bne	.L23
 317              	.L21:
 318              	.LVL22:
 319 00f6 104B     		ldr	r3, .L32
 320              	.LBB16:
 321              	.LBB17:
  91:firmwares/rotorcraft/actuators/supervision.c ****     Bound(supervision.commands[j],
 322              		.loc 1 91 0
 323 00f8 40F26C72 		movw	r2, #1900
 324              	.LBE17:
 325              	.LBE16:
 142:firmwares/rotorcraft/actuators/supervision.c **** void supervision_run(bool_t motors_on, bool_t override_on, int32_t in_cmd[] ) {
 326              		.loc 1 142 0
 327 00fc 03F11005 		add	r5, r3, #16
 328              	.LBB19:
 329              	.LBB18:
  91:firmwares/rotorcraft/actuators/supervision.c ****     Bound(supervision.commands[j],
 330              		.loc 1 91 0
 331 0100 40F24B44 		movw	r4, #1099
 332 0104 40F24C40 		movw	r0, #1100
 333              	.LVL23:
 334              	.L26:
 335 0108 53F8041B 		ldr	r1, [r3], #4
 336 010c 9142     		cmp	r1, r2
 337 010e 02DD     		ble	.L24
 338 0110 43F8042C 		str	r2, [r3, #-4]
 339 0114 03E0     		b	.L25
 340              	.L24:
 341 0116 A142     		cmp	r1, r4
 342 0118 D8BF     		it	le
 343 011a 43F8040C 		strle	r0, [r3, #-4]
 344              	.L25:
  90:firmwares/rotorcraft/actuators/supervision.c ****   for (j=0; j<SUPERVISION_NB_MOTOR; j++)
 345              		.loc 1 90 0
 346 011e AB42     		cmp	r3, r5
 347 0120 F2D1     		bne	.L26
 348 0122 06E0     		b	.L12
 349              	.LVL24:
 350              	.L17:
 351              	.LBE18:
 352              	.LBE19:
 164:firmwares/rotorcraft/actuators/supervision.c ****       offset_commands(-(min_cmd - SUPERVISION_MIN_MOTOR));
 353              		.loc 1 164 0
 354 0124 044B     		ldr	r3, .L32
 355 0126 C4F58964 		rsb	r4, r4, #1096
 356              	.LVL25:
 357 012a 0434     		adds	r4, r4, #4
 358              	.LVL26:
 142:firmwares/rotorcraft/actuators/supervision.c **** void supervision_run(bool_t motors_on, bool_t override_on, int32_t in_cmd[] ) {
 359              		.loc 1 142 0
 360 012c 03F11002 		add	r2, r3, #16
 361              	.LVL27:
 362 0130 BDE7     		b	.L18
 363              	.LVL28:
 364              	.L12:
 365              	.LBE20:
 181:firmwares/rotorcraft/actuators/supervision.c ****     }
 182:firmwares/rotorcraft/actuators/supervision.c ****   }
 183:firmwares/rotorcraft/actuators/supervision.c **** }
 366              		.loc 1 183 0
 367 0132 BDE8FE8F 		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 368              	.L33:
 369 0136 00BF     		.align	2
 370              	.L32:
 371 0138 00000000 		.word	.LANCHOR0
 372 013c 0C000000 		.word	.LANCHOR0+12
 373 0140 00000000 		.word	.LANCHOR3
 374 0144 00000000 		.word	.LANCHOR4
 375 0148 1F000000 		.word	.LANCHOR0+31
 376 014c 00000000 		.word	.LANCHOR1
 377 0150 00000000 		.word	.LANCHOR2
 378              		.cfi_endproc
 379              	.LFE5:
 381              		.global	supervision
 382              		.section	.rodata.yaw_coef,"a",%progbits
 383              		.align	2
 384              		.set	.LANCHOR3,. + 0
 387              	yaw_coef:
 388 0000 00FFFFFF 		.word	-256
 389 0004 00FFFFFF 		.word	-256
 390 0008 00010000 		.word	256
 391 000c 00010000 		.word	256
 392              		.section	.rodata.thrust_coef,"a",%progbits
 393              		.align	2
 394              		.set	.LANCHOR1,. + 0
 397              	thrust_coef:
 398 0000 00010000 		.word	256
 399 0004 00010000 		.word	256
 400 0008 00010000 		.word	256
 401 000c 00010000 		.word	256
 402              		.section	.rodata.pitch_coef,"a",%progbits
 403              		.align	2
 404              		.set	.LANCHOR4,. + 0
 407              	pitch_coef:
 408 0000 00010000 		.word	256
 409 0004 00FFFFFF 		.word	-256
 410 0008 00000000 		.word	0
 411 000c 00000000 		.word	0
 412              		.section	.bss.supervision,"aw",%nobits
 413              		.align	2
 414              		.set	.LANCHOR0,. + 0
 417              	supervision:
 418 0000 00000000 		.space	56
 418      00000000 
 418      00000000 
 418      00000000 
 418      00000000 
 419              		.section	.rodata.roll_coef,"a",%progbits
 420              		.align	2
 421              		.set	.LANCHOR2,. + 0
 424              	roll_coef:
 425 0000 00000000 		.word	0
 426 0004 00000000 		.word	0
 427 0008 00FFFFFF 		.word	-256
 428 000c 00010000 		.word	256
 429              		.text
 430              	.Letext0:
 431              		.file 2 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 432              		.file 3 "/home/uav/paparazzi/sw/include/std.h"
 433              		.file 4 "./firmwares/rotorcraft/actuators/supervision.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 supervision.c
     /tmp/cccXBzDo.s:18     .text.supervision_init:0000000000000000 $t
     /tmp/cccXBzDo.s:23     .text.supervision_init:0000000000000000 supervision_init
     /tmp/cccXBzDo.s:69     .text.supervision_init:000000000000002c $d
     /tmp/cccXBzDo.s:74     .text.supervision_run_spinup:0000000000000000 $t
     /tmp/cccXBzDo.s:79     .text.supervision_run_spinup:0000000000000000 supervision_run_spinup
     /tmp/cccXBzDo.s:119    .text.supervision_run_spinup:0000000000000020 $d
     /tmp/cccXBzDo.s:124    .text.supervision_run:0000000000000000 $t
     /tmp/cccXBzDo.s:129    .text.supervision_run:0000000000000000 supervision_run
     /tmp/cccXBzDo.s:371    .text.supervision_run:0000000000000138 $d
     /tmp/cccXBzDo.s:417    .bss.supervision:0000000000000000 supervision
     /tmp/cccXBzDo.s:383    .rodata.yaw_coef:0000000000000000 $d
     /tmp/cccXBzDo.s:387    .rodata.yaw_coef:0000000000000000 yaw_coef
     /tmp/cccXBzDo.s:393    .rodata.thrust_coef:0000000000000000 $d
     /tmp/cccXBzDo.s:397    .rodata.thrust_coef:0000000000000000 thrust_coef
     /tmp/cccXBzDo.s:403    .rodata.pitch_coef:0000000000000000 $d
     /tmp/cccXBzDo.s:407    .rodata.pitch_coef:0000000000000000 pitch_coef
     /tmp/cccXBzDo.s:413    .bss.supervision:0000000000000000 $d
     /tmp/cccXBzDo.s:420    .rodata.roll_coef:0000000000000000 $d
     /tmp/cccXBzDo.s:424    .rodata.roll_coef:0000000000000000 roll_coef
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
