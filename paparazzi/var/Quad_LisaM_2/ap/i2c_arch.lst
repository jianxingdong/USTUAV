   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"i2c_arch.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.i2c_delay,"ax",%progbits
  18              		.align	1
  19              		.thumb
  20              		.thumb_func
  22              	i2c_delay:
  23              	.LFB24:
  24              		.file 1 "arch/stm32/mcu_periph/i2c_arch.c"
   1:arch/stm32/mcu_periph/i2c_arch.c **** #include "mcu_periph/i2c.h"
   2:arch/stm32/mcu_periph/i2c_arch.c **** 
   3:arch/stm32/mcu_periph/i2c_arch.c **** #include <stm32/rcc.h>
   4:arch/stm32/mcu_periph/i2c_arch.c **** #include <stm32/gpio.h>
   5:arch/stm32/mcu_periph/i2c_arch.c **** #include <stm32/flash.h>
   6:arch/stm32/mcu_periph/i2c_arch.c **** #include <stm32/misc.h>
   7:arch/stm32/mcu_periph/i2c_arch.c **** 
   8:arch/stm32/mcu_periph/i2c_arch.c **** 
   9:arch/stm32/mcu_periph/i2c_arch.c **** static void start_transaction(struct i2c_periph* p);
  10:arch/stm32/mcu_periph/i2c_arch.c **** static inline void end_of_transaction(struct i2c_periph *p);
  11:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_hard_reset(struct i2c_periph *p);
  12:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_reset_init(struct i2c_periph *p);
  13:arch/stm32/mcu_periph/i2c_arch.c **** 
  14:arch/stm32/mcu_periph/i2c_arch.c **** #define I2C_BUSY 0x20
  15:arch/stm32/mcu_periph/i2c_arch.c **** 
  16:arch/stm32/mcu_periph/i2c_arch.c **** // If a hard reset cannot free up SDA, SCL lines abort. Previously stm32 would hang
  17:arch/stm32/mcu_periph/i2c_arch.c **** // when lines stuck i.e. no pullups on I2C lines
  18:arch/stm32/mcu_periph/i2c_arch.c **** #define I2C_MAX_RESET_FAIL_COUNT 20
  19:arch/stm32/mcu_periph/i2c_arch.c **** 
  20:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef DEBUG_I2C
  21:arch/stm32/mcu_periph/i2c_arch.c **** #define SPURIOUS_INTERRUPT(_periph, _status, _event) { while(1); }
  22:arch/stm32/mcu_periph/i2c_arch.c **** #define OUT_OF_SYNC_STATE_MACHINE(_periph, _status, _event) { while(1); }
  23:arch/stm32/mcu_periph/i2c_arch.c **** #else
  24:arch/stm32/mcu_periph/i2c_arch.c **** //#define SPURIOUS_INTERRUPT(_periph, _status, _event) { periph->errors->unexpected_event_cnt++; ab
  25:arch/stm32/mcu_periph/i2c_arch.c **** #define SPURIOUS_INTERRUPT(_periph, _status, _event) { if (_status == I2CAddrWrSent) abort_and_rese
  26:arch/stm32/mcu_periph/i2c_arch.c **** #define OUT_OF_SYNC_STATE_MACHINE(_periph, _status, _event) { abort_and_reset(_periph);}
  27:arch/stm32/mcu_periph/i2c_arch.c **** #endif
  28:arch/stm32/mcu_periph/i2c_arch.c **** 
  29:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C1
  30:arch/stm32/mcu_periph/i2c_arch.c **** #ifndef I2C1_BITRATE
  31:arch/stm32/mcu_periph/i2c_arch.c **** #define I2C1_BITRATE 200000
  32:arch/stm32/mcu_periph/i2c_arch.c **** #endif
  33:arch/stm32/mcu_periph/i2c_arch.c **** static I2C_InitTypeDef  I2C1_InitStruct = {
  34:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_Mode = I2C_Mode_I2C,
  35:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_DutyCycle = I2C_DutyCycle_2,
  36:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_OwnAddress1 = 0x00,
  37:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_Ack = I2C_Ack_Enable,
  38:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit,
  39:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_ClockSpeed = I2C1_BITRATE
  40:arch/stm32/mcu_periph/i2c_arch.c **** };
  41:arch/stm32/mcu_periph/i2c_arch.c **** #endif
  42:arch/stm32/mcu_periph/i2c_arch.c **** 
  43:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C2
  44:arch/stm32/mcu_periph/i2c_arch.c **** #ifndef I2C2_BITRATE
  45:arch/stm32/mcu_periph/i2c_arch.c **** #define I2C2_BITRATE 300000
  46:arch/stm32/mcu_periph/i2c_arch.c **** #endif
  47:arch/stm32/mcu_periph/i2c_arch.c **** static I2C_InitTypeDef  I2C2_InitStruct = {
  48:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_Mode = I2C_Mode_I2C,
  49:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_DutyCycle = I2C_DutyCycle_2,
  50:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_OwnAddress1 = 0x00,
  51:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_Ack = I2C_Ack_Enable,
  52:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit,
  53:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_ClockSpeed = I2C2_BITRATE
  54:arch/stm32/mcu_periph/i2c_arch.c **** };
  55:arch/stm32/mcu_periph/i2c_arch.c **** #endif
  56:arch/stm32/mcu_periph/i2c_arch.c **** 
  57:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_delay(void)
  58:arch/stm32/mcu_periph/i2c_arch.c **** {
  25              		.loc 1 58 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              	.LBB112:
  59:arch/stm32/mcu_periph/i2c_arch.c ****     for (__IO int j = 0; j < 50; j++);
  34              		.loc 1 59 0
  35 0002 0023     		movs	r3, #0
  36 0004 01E0     		b	.L4
  37              	.LVL0:
  38              	.L3:
  39              		.loc 1 59 0 is_stmt 0 discriminator 2
  40 0006 019B     		ldr	r3, [sp, #4]
  41 0008 0133     		adds	r3, r3, #1
  42              	.LVL1:
  43              	.L4:
  44 000a 0193     		str	r3, [sp, #4]
  45 000c 019B     		ldr	r3, [sp, #4]
  46              	.LVL2:
  47 000e 312B     		cmp	r3, #49
  48 0010 F9DD     		ble	.L3
  49              	.LBE112:
  60:arch/stm32/mcu_periph/i2c_arch.c **** }
  50              		.loc 1 60 0 is_stmt 1
  51 0012 02B0     		add	sp, sp, #8
  52 0014 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE24:
  56              		.section	.text.i2c_hard_reset.constprop.6,"ax",%progbits
  57              		.align	1
  58              		.thumb
  59              		.thumb_func
  61              	i2c_hard_reset.constprop.6:
  62              	.LFB50:
  61:arch/stm32/mcu_periph/i2c_arch.c **** 
  62:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_apply_config(struct i2c_periph *p)
  63:arch/stm32/mcu_periph/i2c_arch.c **** {
  64:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_Init(p->reg_addr, p->init_struct);
  65:arch/stm32/mcu_periph/i2c_arch.c **** }
  66:arch/stm32/mcu_periph/i2c_arch.c **** 
  67:arch/stm32/mcu_periph/i2c_arch.c **** static inline void end_of_transaction(struct i2c_periph *p)
  68:arch/stm32/mcu_periph/i2c_arch.c **** {
  69:arch/stm32/mcu_periph/i2c_arch.c ****     p->trans_extract_idx++;
  70:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx >= I2C_TRANSACTION_QUEUE_LEN)
  71:arch/stm32/mcu_periph/i2c_arch.c ****       p->trans_extract_idx = 0;
  72:arch/stm32/mcu_periph/i2c_arch.c ****     /* if we have no more transaction to process, stop here */
  73:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx == p->trans_insert_idx)
  74:arch/stm32/mcu_periph/i2c_arch.c ****       p->status = I2CIdle;
  75:arch/stm32/mcu_periph/i2c_arch.c ****     /* if not, start next transaction */
  76:arch/stm32/mcu_periph/i2c_arch.c ****     else
  77:arch/stm32/mcu_periph/i2c_arch.c ****       start_transaction(p);
  78:arch/stm32/mcu_periph/i2c_arch.c **** }
  79:arch/stm32/mcu_periph/i2c_arch.c **** 
  80:arch/stm32/mcu_periph/i2c_arch.c **** static inline void abort_and_reset(struct i2c_periph *p) {
  81:arch/stm32/mcu_periph/i2c_arch.c ****     struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
  82:arch/stm32/mcu_periph/i2c_arch.c ****     trans->status = I2CTransFailed;
  83:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, DISABLE);
  84:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_hard_reset(p);
  85:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_ERR, ENABLE);
  86:arch/stm32/mcu_periph/i2c_arch.c ****     end_of_transaction(p);
  87:arch/stm32/mcu_periph/i2c_arch.c **** }
  88:arch/stm32/mcu_periph/i2c_arch.c **** 
  89:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_start_requested(struct i2c_periph *periph, struct i2c_transaction* tra
  90:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_addr_wr_sent(struct i2c_periph *periph, struct i2c_transaction* trans,
  91:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_sending_byte(struct i2c_periph *periph, struct i2c_transaction* trans,
  92:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_stop_requested(struct i2c_periph *periph, struct i2c_transaction* tran
  93:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_addr_rd_sent(struct i2c_periph *periph, struct i2c_transaction* trans,
  94:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_reading_byte(struct i2c_periph *periph, struct i2c_transaction* trans,
  95:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_reading_last_byte(struct i2c_periph *periph, struct i2c_transaction* t
  96:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_restart_requested(struct i2c_periph *periph, struct i2c_transaction* t
  97:arch/stm32/mcu_periph/i2c_arch.c **** 
  98:arch/stm32/mcu_periph/i2c_arch.c **** /*
  99:arch/stm32/mcu_periph/i2c_arch.c ****  * Start Requested
 100:arch/stm32/mcu_periph/i2c_arch.c ****  *
 101:arch/stm32/mcu_periph/i2c_arch.c ****  */
 102:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_start_requested(struct i2c_periph *periph, struct i2c_transaction* tra
 103:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_SB) {
 104:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->type == I2CTransRx) {
 105:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Receiver);
 106:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CAddrRdSent;
 107:arch/stm32/mcu_periph/i2c_arch.c ****     }
 108:arch/stm32/mcu_periph/i2c_arch.c ****     else {
 109:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Transmitter);
 110:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CAddrWrSent;
 111:arch/stm32/mcu_periph/i2c_arch.c ****     }
 112:arch/stm32/mcu_periph/i2c_arch.c ****   }
 113:arch/stm32/mcu_periph/i2c_arch.c ****   //  else
 114:arch/stm32/mcu_periph/i2c_arch.c ****   //    SPURIOUS_INTERRUPT(periph, I2CStartRequested, event);
 115:arch/stm32/mcu_periph/i2c_arch.c ****   // FIXME: this one seems to get called all the time with mkk controllers
 116:arch/stm32/mcu_periph/i2c_arch.c **** }
 117:arch/stm32/mcu_periph/i2c_arch.c **** 
 118:arch/stm32/mcu_periph/i2c_arch.c **** /*
 119:arch/stm32/mcu_periph/i2c_arch.c ****  * Addr WR sent
 120:arch/stm32/mcu_periph/i2c_arch.c ****  *
 121:arch/stm32/mcu_periph/i2c_arch.c ****  */
 122:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_addr_wr_sent(struct i2c_periph *periph, struct i2c_transaction* trans,
 123:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && (event & I2C_FLAG_TRA)) {
 124:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SendData(periph->reg_addr, trans->buf[0]);
 125:arch/stm32/mcu_periph/i2c_arch.c ****     if (trans->len_w > 1) {
 126:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_SendData(periph->reg_addr, trans->buf[1]);
 127:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 2;
 128:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 129:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CSendingByte;
 130:arch/stm32/mcu_periph/i2c_arch.c ****     }
 131:arch/stm32/mcu_periph/i2c_arch.c ****     else {
 132:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 1;
 133:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 134:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 135:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CStopRequested;
 136:arch/stm32/mcu_periph/i2c_arch.c ****       }
 137:arch/stm32/mcu_periph/i2c_arch.c ****       else {
 138:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTART(periph->reg_addr, ENABLE);
 139:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CRestartRequested;
 140:arch/stm32/mcu_periph/i2c_arch.c ****       }
 141:arch/stm32/mcu_periph/i2c_arch.c ****     }
 142:arch/stm32/mcu_periph/i2c_arch.c ****   }
 143:arch/stm32/mcu_periph/i2c_arch.c ****   else {
 144:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CAddrWrSent, event);
 145:arch/stm32/mcu_periph/i2c_arch.c ****     // FIXME: this was where the code would break with mkk controllers on april 10 2011
 146:arch/stm32/mcu_periph/i2c_arch.c ****     // now have SPURIOUS_INTERRUPT call abort_and_reset
 147:arch/stm32/mcu_periph/i2c_arch.c ****   }
 148:arch/stm32/mcu_periph/i2c_arch.c **** }
 149:arch/stm32/mcu_periph/i2c_arch.c **** 
 150:arch/stm32/mcu_periph/i2c_arch.c **** /*
 151:arch/stm32/mcu_periph/i2c_arch.c ****  * Sending Byte
 152:arch/stm32/mcu_periph/i2c_arch.c ****  *
 153:arch/stm32/mcu_periph/i2c_arch.c ****  */
 154:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_sending_byte(struct i2c_periph *periph, struct i2c_transaction* trans,
 155:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 156:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_TXE) {
 157:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_w) {
 158:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_SendData(periph->reg_addr, trans->buf[periph->idx_buf]);
 159:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf++;
 160:arch/stm32/mcu_periph/i2c_arch.c ****     }
 161:arch/stm32/mcu_periph/i2c_arch.c ****     else {
 162:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, DISABLE);
 163:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 164:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 165:arch/stm32/mcu_periph/i2c_arch.c ****         /* Make sure that the STOP bit is cleared by Hardware */
 166:arch/stm32/mcu_periph/i2c_arch.c ****         static __IO uint8_t counter = 0;
 167:arch/stm32/mcu_periph/i2c_arch.c ****         while ((regs->CR1 & 0x200) == 0x200) {
 168:arch/stm32/mcu_periph/i2c_arch.c ****           counter++;
 169:arch/stm32/mcu_periph/i2c_arch.c ****           if (counter > 100) break;
 170:arch/stm32/mcu_periph/i2c_arch.c ****         }
 171:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CStopRequested;
 172:arch/stm32/mcu_periph/i2c_arch.c ****       }
 173:arch/stm32/mcu_periph/i2c_arch.c ****       else {
 174:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTART(periph->reg_addr, ENABLE);
 175:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CRestartRequested;
 176:arch/stm32/mcu_periph/i2c_arch.c ****       }
 177:arch/stm32/mcu_periph/i2c_arch.c ****     }
 178:arch/stm32/mcu_periph/i2c_arch.c ****   }
 179:arch/stm32/mcu_periph/i2c_arch.c ****   else
 180:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CSendingByte, event);
 181:arch/stm32/mcu_periph/i2c_arch.c **** }
 182:arch/stm32/mcu_periph/i2c_arch.c **** 
 183:arch/stm32/mcu_periph/i2c_arch.c **** /*
 184:arch/stm32/mcu_periph/i2c_arch.c ****  * Stop Requested
 185:arch/stm32/mcu_periph/i2c_arch.c ****  *
 186:arch/stm32/mcu_periph/i2c_arch.c ****  */
 187:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_stop_requested(struct i2c_periph *periph, struct i2c_transaction* tran
 188:arch/stm32/mcu_periph/i2c_arch.c ****   /* bummer.... */
 189:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 190:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 191:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_r) {
 192:arch/stm32/mcu_periph/i2c_arch.c ****       trans->buf[periph->idx_buf] = read_byte;
 193:arch/stm32/mcu_periph/i2c_arch.c ****     }
 194:arch/stm32/mcu_periph/i2c_arch.c ****   }
 195:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(periph->reg_addr, I2C_IT_EVT|I2C_IT_BUF, DISABLE);  // should only need to disable e
 196:arch/stm32/mcu_periph/i2c_arch.c ****   trans->status = I2CTransSuccess;
 197:arch/stm32/mcu_periph/i2c_arch.c ****   end_of_transaction(periph);
 198:arch/stm32/mcu_periph/i2c_arch.c **** }
 199:arch/stm32/mcu_periph/i2c_arch.c **** 
 200:arch/stm32/mcu_periph/i2c_arch.c **** /*
 201:arch/stm32/mcu_periph/i2c_arch.c ****  * Addr RD sent
 202:arch/stm32/mcu_periph/i2c_arch.c ****  *
 203:arch/stm32/mcu_periph/i2c_arch.c ****  */
 204:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_addr_rd_sent(struct i2c_periph *periph, struct i2c_transaction* trans,
 205:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 206:arch/stm32/mcu_periph/i2c_arch.c **** 
 207:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && !(event & I2C_FLAG_TRA)) {
 208:arch/stm32/mcu_periph/i2c_arch.c ****     periph->idx_buf = 0;
 209:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->len_r == 1) {                                         // If we're going to read only 
 210:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);             // make sure it's gonna be nack
 211:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_GenerateSTOP(periph->reg_addr, ENABLE);               // and followed by a stop
 212:arch/stm32/mcu_periph/i2c_arch.c ****       /* Make sure that the STOP bit is cleared by Hardware */
 213:arch/stm32/mcu_periph/i2c_arch.c ****       static __IO uint8_t counter = 0;
 214:arch/stm32/mcu_periph/i2c_arch.c ****       while ((regs->CR1 & 0x200) == 0x200) {
 215:arch/stm32/mcu_periph/i2c_arch.c ****         counter++;
 216:arch/stm32/mcu_periph/i2c_arch.c ****         if (counter > 100) break;
 217:arch/stm32/mcu_periph/i2c_arch.c ****       }
 218:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CReadingLastByte;                           // and remember we did
 219:arch/stm32/mcu_periph/i2c_arch.c ****     }
 220:arch/stm32/mcu_periph/i2c_arch.c ****     else {
 221:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, ENABLE);               // if it's more than one byte,
 222:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 223:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CReadingByte;                               // and remember we did
 224:arch/stm32/mcu_periph/i2c_arch.c ****     }
 225:arch/stm32/mcu_periph/i2c_arch.c ****   }
 226:arch/stm32/mcu_periph/i2c_arch.c ****   else
 227:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CAddrRdSent, event);
 228:arch/stm32/mcu_periph/i2c_arch.c **** }
 229:arch/stm32/mcu_periph/i2c_arch.c **** 
 230:arch/stm32/mcu_periph/i2c_arch.c **** 
 231:arch/stm32/mcu_periph/i2c_arch.c **** /*
 232:arch/stm32/mcu_periph/i2c_arch.c ****  * Reading byte
 233:arch/stm32/mcu_periph/i2c_arch.c ****  *
 234:arch/stm32/mcu_periph/i2c_arch.c ****  */
 235:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_reading_byte(struct i2c_periph *periph, struct i2c_transaction* trans,
 236:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 237:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 238:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 239:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_r) {
 240:arch/stm32/mcu_periph/i2c_arch.c ****       trans->buf[periph->idx_buf] = read_byte;
 241:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf++;
 242:arch/stm32/mcu_periph/i2c_arch.c ****       if (periph->idx_buf >= trans->len_r-1) {                    // We're reading our last byte
 243:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);         // give them a nack once it's don
 244:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);               // and follow with a stop
 245:arch/stm32/mcu_periph/i2c_arch.c ****         /* Make sure that the STOP bit is cleared by Hardware */
 246:arch/stm32/mcu_periph/i2c_arch.c ****         static __IO uint8_t counter = 0;
 247:arch/stm32/mcu_periph/i2c_arch.c ****         while ((regs->CR1 & 0x200) == 0x200) {
 248:arch/stm32/mcu_periph/i2c_arch.c ****           counter++;
 249:arch/stm32/mcu_periph/i2c_arch.c ****           if (counter > 100) break;
 250:arch/stm32/mcu_periph/i2c_arch.c ****         }
 251:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CStopRequested;                        // remember we already trigered t
 252:arch/stm32/mcu_periph/i2c_arch.c ****       }
 253:arch/stm32/mcu_periph/i2c_arch.c ****     } // else { something very wrong has happened }
 254:arch/stm32/mcu_periph/i2c_arch.c ****   }
 255:arch/stm32/mcu_periph/i2c_arch.c ****   else
 256:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CReadingByte, event);
 257:arch/stm32/mcu_periph/i2c_arch.c **** }
 258:arch/stm32/mcu_periph/i2c_arch.c **** 
 259:arch/stm32/mcu_periph/i2c_arch.c **** /*
 260:arch/stm32/mcu_periph/i2c_arch.c ****  * Reading last byte
 261:arch/stm32/mcu_periph/i2c_arch.c ****  *
 262:arch/stm32/mcu_periph/i2c_arch.c ****  */
 263:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_reading_last_byte(struct i2c_periph *periph, struct i2c_transaction* t
 264:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_BTF) {
 265:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 266:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 267:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 268:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CStopRequested;
 269:arch/stm32/mcu_periph/i2c_arch.c ****   }
 270:arch/stm32/mcu_periph/i2c_arch.c ****   else if (event & I2C_FLAG_RXNE) {       // should really be BTF ?
 271:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 272:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 273:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CStopRequested;
 274:arch/stm32/mcu_periph/i2c_arch.c ****   }
 275:arch/stm32/mcu_periph/i2c_arch.c ****   else
 276:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CReadingLastByte, event);
 277:arch/stm32/mcu_periph/i2c_arch.c **** }
 278:arch/stm32/mcu_periph/i2c_arch.c **** 
 279:arch/stm32/mcu_periph/i2c_arch.c **** /*
 280:arch/stm32/mcu_periph/i2c_arch.c ****  * Restart requested
 281:arch/stm32/mcu_periph/i2c_arch.c ****  *
 282:arch/stm32/mcu_periph/i2c_arch.c ****  */
 283:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_restart_requested(struct i2c_periph *periph, struct i2c_transaction* t
 284:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_SB) {
 285:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Receiver);
 286:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CAddrRdSent;
 287:arch/stm32/mcu_periph/i2c_arch.c ****   }
 288:arch/stm32/mcu_periph/i2c_arch.c **** }
 289:arch/stm32/mcu_periph/i2c_arch.c **** 
 290:arch/stm32/mcu_periph/i2c_arch.c **** void i2c_event(void)
 291:arch/stm32/mcu_periph/i2c_arch.c **** {
 292:arch/stm32/mcu_periph/i2c_arch.c **** }
 293:arch/stm32/mcu_periph/i2c_arch.c **** 
 294:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_driver_event(struct i2c_periph *p, uint32_t event)
 295:arch/stm32/mcu_periph/i2c_arch.c **** {
 296:arch/stm32/mcu_periph/i2c_arch.c ****   struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 297:arch/stm32/mcu_periph/i2c_arch.c ****   switch (p->status) {
 298:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CStartRequested:
 299:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_start_requested(p, trans, event);
 300:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 301:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CAddrWrSent:
 302:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_addr_wr_sent(p, trans, event);
 303:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 304:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CSendingByte:
 305:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_sending_byte(p, trans, event);
 306:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 307:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CStopRequested:
 308:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_stop_requested(p, trans, event);
 309:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 310:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CAddrRdSent:
 311:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_addr_rd_sent(p, trans, event);
 312:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 313:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CReadingByte:
 314:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_reading_byte(p, trans, event);
 315:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 316:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CReadingLastByte:
 317:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_reading_last_byte(p, trans, event);
 318:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 319:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CRestartRequested:
 320:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_restart_requested(p, trans, event);
 321:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 322:arch/stm32/mcu_periph/i2c_arch.c ****   default:
 323:arch/stm32/mcu_periph/i2c_arch.c ****     OUT_OF_SYNC_STATE_MACHINE(p, p->status, event);
 324:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 325:arch/stm32/mcu_periph/i2c_arch.c ****   }
 326:arch/stm32/mcu_periph/i2c_arch.c **** }
 327:arch/stm32/mcu_periph/i2c_arch.c **** 
 328:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_error(struct i2c_periph *p)
 329:arch/stm32/mcu_periph/i2c_arch.c **** {
 330:arch/stm32/mcu_periph/i2c_arch.c ****   p->errors->er_irq_cnt;
 331:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_AF)) {       /* Acknowledge failure */
 332:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->ack_fail_cnt++;
 333:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_AF);
 334:arch/stm32/mcu_periph/i2c_arch.c ****   }
 335:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_BERR)) {     /* Misplaced Start or Stop condition */
 336:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->miss_start_stop_cnt++;
 337:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_BERR);
 338:arch/stm32/mcu_periph/i2c_arch.c ****   }
 339:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_ARLO)) {     /* Arbitration lost */
 340:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->arb_lost_cnt++;
 341:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_ARLO);
 342:arch/stm32/mcu_periph/i2c_arch.c ****     //    I2C_AcknowledgeConfig(I2C2, DISABLE);
 343:arch/stm32/mcu_periph/i2c_arch.c ****     //    uint8_t dummy __attribute__ ((unused)) = I2C_ReceiveData(I2C2);
 344:arch/stm32/mcu_periph/i2c_arch.c ****     //    I2C_GenerateSTOP(I2C2, ENABLE);
 345:arch/stm32/mcu_periph/i2c_arch.c ****   }
 346:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_OVR)) {      /* Overrun/Underrun */
 347:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->over_under_cnt++;
 348:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_OVR);
 349:arch/stm32/mcu_periph/i2c_arch.c ****   }
 350:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_PECERR)) {   /* PEC Error in reception */
 351:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->pec_recep_cnt++;
 352:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_PECERR);
 353:arch/stm32/mcu_periph/i2c_arch.c ****   }
 354:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_TIMEOUT)) {  /* Timeout or Tlow error */
 355:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->timeout_tlow_cnt++;
 356:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_TIMEOUT);
 357:arch/stm32/mcu_periph/i2c_arch.c ****   }
 358:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_SMBALERT)) { /* SMBus alert */
 359:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->smbus_alert_cnt++;
 360:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_SMBALERT);
 361:arch/stm32/mcu_periph/i2c_arch.c ****   }
 362:arch/stm32/mcu_periph/i2c_arch.c **** 
 363:arch/stm32/mcu_periph/i2c_arch.c ****   abort_and_reset(p);
 364:arch/stm32/mcu_periph/i2c_arch.c **** }
 365:arch/stm32/mcu_periph/i2c_arch.c **** 
 366:arch/stm32/mcu_periph/i2c_arch.c **** 
 367:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_hard_reset(struct i2c_periph *p)
  63              		.loc 1 367 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 8
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              	.LVL3:
  68 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 32
  71              		.cfi_offset 14, -4
  72              		.cfi_offset 8, -8
  73              		.cfi_offset 7, -12
  74              		.cfi_offset 6, -16
  75              		.cfi_offset 5, -20
  76              		.cfi_offset 4, -24
  77              		.cfi_offset 1, -28
  78              		.cfi_offset 0, -32
 368:arch/stm32/mcu_periph/i2c_arch.c **** {
 369:arch/stm32/mcu_periph/i2c_arch.c ****   uint8_t timeout_fails=0;
 370:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) p->reg_addr;
  79              		.loc 1 370 0
  80 0004 4A4E     		ldr	r6, .L20
 369:arch/stm32/mcu_periph/i2c_arch.c ****   uint8_t timeout_fails=0;
  81              		.loc 1 369 0
  82 0006 0024     		movs	r4, #0
  83              		.loc 1 370 0
  84 0008 776A     		ldr	r7, [r6, #36]
  85              	.LVL4:
  86 000a B046     		mov	r8, r6
 371:arch/stm32/mcu_periph/i2c_arch.c **** 
 372:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(p->reg_addr);
  87              		.loc 1 372 0
  88 000c 3846     		mov	r0, r7
  89 000e FFF7FEFF 		bl	I2C_DeInit
  90              	.LVL5:
 373:arch/stm32/mcu_periph/i2c_arch.c **** 
 374:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 375:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
  91              		.loc 1 375 0
  92 0012 B38D     		ldrh	r3, [r6, #44]
  93 0014 F18D     		ldrh	r1, [r6, #46]
 376:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 377:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
 378:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin | p->sda_pin);
  94              		.loc 1 378 0
  95 0016 4748     		ldr	r0, .L20+4
 375:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
  96              		.loc 1 375 0
  97 0018 1943     		orrs	r1, r1, r3
 376:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
  98              		.loc 1 376 0
  99 001a 0123     		movs	r3, #1
 375:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
 100              		.loc 1 375 0
 101 001c 89B2     		uxth	r1, r1
 376:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 102              		.loc 1 376 0
 103 001e 8DF80630 		strb	r3, [sp, #6]
 377:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
 104              		.loc 1 377 0
 105 0022 1423     		movs	r3, #20
 375:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
 106              		.loc 1 375 0
 107 0024 ADF80410 		strh	r1, [sp, #4]	@ movhi
 377:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
 108              		.loc 1 377 0
 109 0028 8DF80730 		strb	r3, [sp, #7]
 110              		.loc 1 378 0
 111 002c FFF7FEFF 		bl	GPIO_SetBits
 379:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 112              		.loc 1 379 0
 113 0030 4048     		ldr	r0, .L20+4
 114 0032 01A9     		add	r1, sp, #4
 115 0034 FFF7FEFF 		bl	GPIO_Init
 116 0038 21E0     		b	.L6
 117              	.LVL6:
 118              	.L11:
 380:arch/stm32/mcu_periph/i2c_arch.c **** 
 381:arch/stm32/mcu_periph/i2c_arch.c ****   while((GPIO_ReadInputDataBit(GPIOB, p->sda_pin) == Bit_RESET) && timeout_fails < I2C_MAX_RESET_FA
 382:arch/stm32/mcu_periph/i2c_arch.c ****     // Raise SCL, wait until SCL is high (in case of clock stretching)
 383:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_SetBits(GPIOB, p->scl_pin);
 119              		.loc 1 383 0
 120 003a 3E48     		ldr	r0, .L20+4
 121 003c B18D     		ldrh	r1, [r6, #44]
 122 003e FFF7FEFF 		bl	GPIO_SetBits
 123 0042 03E0     		b	.L7
 124              	.L9:
 384:arch/stm32/mcu_periph/i2c_arch.c ****     while ((GPIO_ReadInputDataBit(GPIOB, p->scl_pin) == Bit_RESET) && timeout_fails < I2C_MAX_RESET
 385:arch/stm32/mcu_periph/i2c_arch.c ****       i2c_delay();
 125              		.loc 1 385 0
 126 0044 FFF7FEFF 		bl	i2c_delay
 386:arch/stm32/mcu_periph/i2c_arch.c ****       timeout_fails++;
 127              		.loc 1 386 0
 128 0048 0134     		adds	r4, r4, #1
 129              	.LVL7:
 130 004a E4B2     		uxtb	r4, r4
 131              	.LVL8:
 132              	.L7:
 384:arch/stm32/mcu_periph/i2c_arch.c ****     while ((GPIO_ReadInputDataBit(GPIOB, p->scl_pin) == Bit_RESET) && timeout_fails < I2C_MAX_RESET
 133              		.loc 1 384 0
 134 004c 3948     		ldr	r0, .L20+4
 135 004e B18D     		ldrh	r1, [r6, #44]
 136 0050 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 137 0054 08B9     		cbnz	r0, .L8
 138 0056 142C     		cmp	r4, #20
 139 0058 F4D1     		bne	.L9
 140              	.L8:
 387:arch/stm32/mcu_periph/i2c_arch.c ****     }
 388:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 141              		.loc 1 388 0
 142 005a FFF7FEFF 		bl	i2c_delay
 389:arch/stm32/mcu_periph/i2c_arch.c **** 
 390:arch/stm32/mcu_periph/i2c_arch.c ****     // Lower SCL, wait
 391:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_ResetBits(GPIOB, p->scl_pin);
 143              		.loc 1 391 0
 144 005e 3548     		ldr	r0, .L20+4
 145 0060 B8F82C10 		ldrh	r1, [r8, #44]
 146 0064 FFF7FEFF 		bl	GPIO_ResetBits
 392:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 147              		.loc 1 392 0
 148 0068 FFF7FEFF 		bl	i2c_delay
 393:arch/stm32/mcu_periph/i2c_arch.c **** 
 394:arch/stm32/mcu_periph/i2c_arch.c ****     // Raise SCL, wait
 395:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_SetBits(GPIOB, p->scl_pin);
 149              		.loc 1 395 0
 150 006c 3148     		ldr	r0, .L20+4
 151 006e B8F82C10 		ldrh	r1, [r8, #44]
 152 0072 FFF7FEFF 		bl	GPIO_SetBits
 396:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 153              		.loc 1 396 0
 154 0076 FFF7FEFF 		bl	i2c_delay
 397:arch/stm32/mcu_periph/i2c_arch.c ****     timeout_fails++;
 155              		.loc 1 397 0
 156 007a 0134     		adds	r4, r4, #1
 157              	.LVL9:
 158 007c E4B2     		uxtb	r4, r4
 159              	.LVL10:
 160              	.L6:
 381:arch/stm32/mcu_periph/i2c_arch.c ****   while((GPIO_ReadInputDataBit(GPIOB, p->sda_pin) == Bit_RESET) && timeout_fails < I2C_MAX_RESET_FA
 161              		.loc 1 381 0
 162 007e 2D48     		ldr	r0, .L20+4
 163 0080 F18D     		ldrh	r1, [r6, #46]
 164 0082 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 165 0086 2A4D     		ldr	r5, .L20
 166 0088 08B9     		cbnz	r0, .L10
 167 008a 132C     		cmp	r4, #19
 168 008c D5D9     		bls	.L11
 169              	.L10:
 398:arch/stm32/mcu_periph/i2c_arch.c ****   }
 399:arch/stm32/mcu_periph/i2c_arch.c **** 
 400:arch/stm32/mcu_periph/i2c_arch.c ****   // Generate a start condition followed by a stop condition
 401:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin);
 170              		.loc 1 401 0
 171 008e A98D     		ldrh	r1, [r5, #44]
 172 0090 2848     		ldr	r0, .L20+4
 173 0092 FFF7FEFF 		bl	GPIO_SetBits
 402:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 174              		.loc 1 402 0
 175 0096 FFF7FEFF 		bl	i2c_delay
 403:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_ResetBits(GPIOB, p->sda_pin);
 176              		.loc 1 403 0
 177 009a E98D     		ldrh	r1, [r5, #46]
 178 009c 2548     		ldr	r0, .L20+4
 179 009e FFF7FEFF 		bl	GPIO_ResetBits
 404:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 180              		.loc 1 404 0
 181 00a2 FFF7FEFF 		bl	i2c_delay
 405:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_ResetBits(GPIOB, p->sda_pin);
 182              		.loc 1 405 0
 183 00a6 E98D     		ldrh	r1, [r5, #46]
 184 00a8 2248     		ldr	r0, .L20+4
 185 00aa FFF7FEFF 		bl	GPIO_ResetBits
 406:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 186              		.loc 1 406 0
 187 00ae FFF7FEFF 		bl	i2c_delay
 407:arch/stm32/mcu_periph/i2c_arch.c **** 
 408:arch/stm32/mcu_periph/i2c_arch.c ****   // Raise both SCL and SDA and wait for SCL high (in case of clock stretching)
 409:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin | p->sda_pin);
 188              		.loc 1 409 0
 189 00b2 E98D     		ldrh	r1, [r5, #46]
 190 00b4 AB8D     		ldrh	r3, [r5, #44]
 191 00b6 1F48     		ldr	r0, .L20+4
 192 00b8 1943     		orrs	r1, r1, r3
 193 00ba 89B2     		uxth	r1, r1
 194 00bc FFF7FEFF 		bl	GPIO_SetBits
 410:arch/stm32/mcu_periph/i2c_arch.c ****   while (GPIO_ReadInputDataBit(GPIOB, p->scl_pin) == Bit_RESET && timeout_fails < I2C_MAX_RESET_FAI
 195              		.loc 1 410 0
 196 00c0 1B4D     		ldr	r5, .L20
 197 00c2 03E0     		b	.L12
 198              	.L14:
 411:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 199              		.loc 1 411 0
 200 00c4 FFF7FEFF 		bl	i2c_delay
 412:arch/stm32/mcu_periph/i2c_arch.c ****     timeout_fails++;
 201              		.loc 1 412 0
 202 00c8 0134     		adds	r4, r4, #1
 203              	.LVL11:
 204 00ca E4B2     		uxtb	r4, r4
 205              	.LVL12:
 206              	.L12:
 410:arch/stm32/mcu_periph/i2c_arch.c ****   while (GPIO_ReadInputDataBit(GPIOB, p->scl_pin) == Bit_RESET && timeout_fails < I2C_MAX_RESET_FAI
 207              		.loc 1 410 0
 208 00cc 1948     		ldr	r0, .L20+4
 209 00ce A98D     		ldrh	r1, [r5, #44]
 210 00d0 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 211 00d4 38B9     		cbnz	r0, .L15
 212 00d6 132C     		cmp	r4, #19
 213 00d8 F4D9     		bls	.L14
 214 00da 04E0     		b	.L15
 215              	.L17:
 413:arch/stm32/mcu_periph/i2c_arch.c ****   }
 414:arch/stm32/mcu_periph/i2c_arch.c **** 
 415:arch/stm32/mcu_periph/i2c_arch.c ****   // Wait for SDA to be high
 416:arch/stm32/mcu_periph/i2c_arch.c ****   while (GPIO_ReadInputDataBit(GPIOB, p->sda_pin) != Bit_SET && timeout_fails < I2C_MAX_RESET_FAIL_
 417:arch/stm32/mcu_periph/i2c_arch.c ****   {
 418:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 419:arch/stm32/mcu_periph/i2c_arch.c ****     timeout_fails++;
 216              		.loc 1 419 0
 217 00dc 0134     		adds	r4, r4, #1
 218              	.LVL13:
 418:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 219              		.loc 1 418 0
 220 00de FFF7FEFF 		bl	i2c_delay
 221              		.loc 1 419 0
 222 00e2 E4B2     		uxtb	r4, r4
 223              	.LVL14:
 224 00e4 00E0     		b	.L19
 225              	.L15:
 416:arch/stm32/mcu_periph/i2c_arch.c ****   while (GPIO_ReadInputDataBit(GPIOB, p->sda_pin) != Bit_SET && timeout_fails < I2C_MAX_RESET_FAIL_
 226              		.loc 1 416 0
 227 00e6 124D     		ldr	r5, .L20
 228              	.LVL15:
 229              	.L19:
 230 00e8 1248     		ldr	r0, .L20+4
 231 00ea E98D     		ldrh	r1, [r5, #46]
 232 00ec FFF7FEFF 		bl	GPIO_ReadInputDataBit
 233 00f0 0128     		cmp	r0, #1
 234 00f2 01D0     		beq	.L16
 235 00f4 132C     		cmp	r4, #19
 236 00f6 F1D9     		bls	.L17
 237              	.L16:
 420:arch/stm32/mcu_periph/i2c_arch.c ****   }
 421:arch/stm32/mcu_periph/i2c_arch.c **** 
 422:arch/stm32/mcu_periph/i2c_arch.c ****   // SCL and SDA should be high at this point, bus should be free
 423:arch/stm32/mcu_periph/i2c_arch.c ****   // Return the GPIO pins to the alternate function
 424:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 425:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 426:arch/stm32/mcu_periph/i2c_arch.c **** 
 427:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(p->reg_addr);
 238              		.loc 1 427 0
 239 00f8 0D4C     		ldr	r4, .L20
 240              	.LVL16:
 424:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 241              		.loc 1 424 0
 242 00fa 1C23     		movs	r3, #28
 425:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 243              		.loc 1 425 0
 244 00fc 01A9     		add	r1, sp, #4
 245 00fe 0D48     		ldr	r0, .L20+4
 424:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 246              		.loc 1 424 0
 247 0100 8DF80730 		strb	r3, [sp, #7]
 425:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 248              		.loc 1 425 0
 249 0104 FFF7FEFF 		bl	GPIO_Init
 250              		.loc 1 427 0
 251 0108 606A     		ldr	r0, [r4, #36]
 252 010a FFF7FEFF 		bl	I2C_DeInit
 253              	.LVL17:
 254              	.LBB119:
 255              	.LBB120:
  64:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_Init(p->reg_addr, p->init_struct);
 256              		.loc 1 64 0
 257 010e 606A     		ldr	r0, [r4, #36]
 258 0110 A16A     		ldr	r1, [r4, #40]
 259 0112 FFF7FEFF 		bl	I2C_Init
 260              	.LBE120:
 261              	.LBE119:
 428:arch/stm32/mcu_periph/i2c_arch.c **** 
 429:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_apply_config(p);
 430:arch/stm32/mcu_periph/i2c_arch.c **** 
 431:arch/stm32/mcu_periph/i2c_arch.c ****   if (regs->SR2 & I2C_BUSY) {
 262              		.loc 1 431 0
 263 0116 3B8B     		ldrh	r3, [r7, #24]
 264 0118 9B06     		lsls	r3, r3, #26
 265 011a 07D5     		bpl	.L5
 266              	.LVL18:
 267              	.LBB121:
 268              	.LBB122:
 432:arch/stm32/mcu_periph/i2c_arch.c ****     // Reset the I2C block
 433:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SoftwareResetCmd(p->reg_addr, ENABLE);
 269              		.loc 1 433 0
 270 011c 606A     		ldr	r0, [r4, #36]
 271 011e 0121     		movs	r1, #1
 272 0120 FFF7FEFF 		bl	I2C_SoftwareResetCmd
 434:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SoftwareResetCmd(p->reg_addr, DISABLE);
 273              		.loc 1 434 0
 274 0124 606A     		ldr	r0, [r4, #36]
 275 0126 0021     		movs	r1, #0
 276 0128 FFF7FEFF 		bl	I2C_SoftwareResetCmd
 277              	.LVL19:
 278              	.L5:
 279              	.LBE122:
 280              	.LBE121:
 435:arch/stm32/mcu_periph/i2c_arch.c ****   }
 436:arch/stm32/mcu_periph/i2c_arch.c **** }
 281              		.loc 1 436 0
 282 012c BDE8FC81 		pop	{r2, r3, r4, r5, r6, r7, r8, pc}
 283              	.L21:
 284              		.align	2
 285              	.L20:
 286 0130 00000000 		.word	i2c2
 287 0134 000C0140 		.word	1073810432
 288              		.cfi_endproc
 289              	.LFE50:
 291              		.section	.text.abort_and_reset.constprop.4,"ax",%progbits
 292              		.align	1
 293              		.thumb
 294              		.thumb_func
 296              	abort_and_reset.constprop.4:
 297              	.LFB52:
  80:arch/stm32/mcu_periph/i2c_arch.c **** static inline void abort_and_reset(struct i2c_periph *p) {
 298              		.loc 1 80 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              	.LVL20:
 303 0000 38B5     		push	{r3, r4, r5, lr}
 304              	.LCFI2:
 305              		.cfi_def_cfa_offset 16
 306              		.cfi_offset 14, -4
 307              		.cfi_offset 5, -8
 308              		.cfi_offset 4, -12
 309              		.cfi_offset 3, -16
  81:arch/stm32/mcu_periph/i2c_arch.c ****     struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 310              		.loc 1 81 0
 311 0002 1F4C     		ldr	r4, .L26
  82:arch/stm32/mcu_periph/i2c_arch.c ****     trans->status = I2CTransFailed;
 312              		.loc 1 82 0
 313 0004 0322     		movs	r2, #3
  81:arch/stm32/mcu_periph/i2c_arch.c ****     struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 314              		.loc 1 81 0
 315 0006 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
  83:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, DISABLE);
 316              		.loc 1 83 0
 317 000a 606A     		ldr	r0, [r4, #36]
  81:arch/stm32/mcu_periph/i2c_arch.c ****     struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 318              		.loc 1 81 0
 319 000c 54F82330 		ldr	r3, [r4, r3, lsl #2]
 320              	.LVL21:
  83:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, DISABLE);
 321              		.loc 1 83 0
 322 0010 4FF4E061 		mov	r1, #1792
  82:arch/stm32/mcu_periph/i2c_arch.c ****     trans->status = I2CTransFailed;
 323              		.loc 1 82 0
 324 0014 83F82520 		strb	r2, [r3, #37]
  83:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, DISABLE);
 325              		.loc 1 83 0
 326 0018 0022     		movs	r2, #0
 327 001a FFF7FEFF 		bl	I2C_ITConfig
 328              	.LVL22:
  84:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_hard_reset(p);
 329              		.loc 1 84 0
 330 001e FFF7FEFF 		bl	i2c_hard_reset.constprop.6
  85:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_ERR, ENABLE);
 331              		.loc 1 85 0
 332 0022 0122     		movs	r2, #1
 333 0024 606A     		ldr	r0, [r4, #36]
 334 0026 4FF48071 		mov	r1, #256
 335 002a FFF7FEFF 		bl	I2C_ITConfig
 336              	.LVL23:
 337              	.LBB132:
 338              	.LBB133:
  69:arch/stm32/mcu_periph/i2c_arch.c ****     p->trans_extract_idx++;
 339              		.loc 1 69 0
 340 002e 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 341 0032 0133     		adds	r3, r3, #1
 342 0034 DBB2     		uxtb	r3, r3
  70:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx >= I2C_TRANSACTION_QUEUE_LEN)
 343              		.loc 1 70 0
 344 0036 072B     		cmp	r3, #7
  69:arch/stm32/mcu_periph/i2c_arch.c ****     p->trans_extract_idx++;
 345              		.loc 1 69 0
 346 0038 84F82130 		strb	r3, [r4, #33]
  70:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx >= I2C_TRANSACTION_QUEUE_LEN)
 347              		.loc 1 70 0
 348 003c 02D9     		bls	.L23
  71:arch/stm32/mcu_periph/i2c_arch.c ****       p->trans_extract_idx = 0;
 349              		.loc 1 71 0
 350 003e 0023     		movs	r3, #0
 351 0040 84F82130 		strb	r3, [r4, #33]
 352              	.L23:
  73:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx == p->trans_insert_idx)
 353              		.loc 1 73 0
 354 0044 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 355 0048 94F82120 		ldrb	r2, [r4, #33]	@ zero_extendqisi2
 356 004c 0C4D     		ldr	r5, .L26
 357 004e 9A42     		cmp	r2, r3
 358 0050 4FF00003 		mov	r3, #0
 359 0054 02D1     		bne	.L24
  74:arch/stm32/mcu_periph/i2c_arch.c ****       p->status = I2CIdle;
 360              		.loc 1 74 0
 361 0056 85F82230 		strb	r3, [r5, #34]
 362              	.LBE133:
 363              	.LBE132:
  87:arch/stm32/mcu_periph/i2c_arch.c **** }
 364              		.loc 1 87 0
 365 005a 38BD     		pop	{r3, r4, r5, pc}
 366              	.L24:
 367              	.LVL24:
 368              	.LBB134:
 369              	.LBB135:
 370              	.LBB136:
 371              	.LBB137:
 372              	.LBB138:
 373              	.LBB139:
 437:arch/stm32/mcu_periph/i2c_arch.c **** 
 438:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_reset_init(struct i2c_periph *p)
 439:arch/stm32/mcu_periph/i2c_arch.c **** {
 440:arch/stm32/mcu_periph/i2c_arch.c ****   // Reset bus and configure GPIO pins
 441:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_hard_reset(p);
 442:arch/stm32/mcu_periph/i2c_arch.c **** 
 443:arch/stm32/mcu_periph/i2c_arch.c ****   // enable peripheral
 444:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_Cmd(p->reg_addr, ENABLE);
 445:arch/stm32/mcu_periph/i2c_arch.c **** 
 446:arch/stm32/mcu_periph/i2c_arch.c ****   // enable error interrupts
 447:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_ERR, ENABLE);
 448:arch/stm32/mcu_periph/i2c_arch.c **** }
 449:arch/stm32/mcu_periph/i2c_arch.c **** 
 450:arch/stm32/mcu_periph/i2c_arch.c **** 
 451:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C1
 452:arch/stm32/mcu_periph/i2c_arch.c **** 
 453:arch/stm32/mcu_periph/i2c_arch.c **** struct i2c_errors i2c1_errors;
 454:arch/stm32/mcu_periph/i2c_arch.c **** 
 455:arch/stm32/mcu_periph/i2c_arch.c **** #include "my_debug_servo.h"
 456:arch/stm32/mcu_periph/i2c_arch.c **** 
 457:arch/stm32/mcu_periph/i2c_arch.c **** void i2c1_hw_init(void) {
 458:arch/stm32/mcu_periph/i2c_arch.c **** 
 459:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.reg_addr = I2C1;
 460:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.init_struct = &I2C1_InitStruct;
 461:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.scl_pin = GPIO_Pin_6;
 462:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.sda_pin = GPIO_Pin_7;
 463:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.errors = &i2c1_errors;
 464:arch/stm32/mcu_periph/i2c_arch.c **** 
 465:arch/stm32/mcu_periph/i2c_arch.c ****   /* zeros error counter */
 466:arch/stm32/mcu_periph/i2c_arch.c ****   ZEROS_ERR_COUNTER(i2c1_errors);
 467:arch/stm32/mcu_periph/i2c_arch.c **** 
 468:arch/stm32/mcu_periph/i2c_arch.c ****   /* reset peripheral to default state ( sometimes not achieved on reset :(  ) */
 469:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(I2C1);
 470:arch/stm32/mcu_periph/i2c_arch.c **** 
 471:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 472:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitTypeDef  NVIC_InitStructure;
 473:arch/stm32/mcu_periph/i2c_arch.c **** 
 474:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure and enable I2C1 event interrupt -------------------------------*/
 475:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C1_EV_IRQn;
 476:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 477:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 478:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 479:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 480:arch/stm32/mcu_periph/i2c_arch.c **** 
 481:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure and enable I2C1 err interrupt -------------------------------*/
 482:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C1_ER_IRQn;
 483:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 484:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 485:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 486:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 487:arch/stm32/mcu_periph/i2c_arch.c **** 
 488:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable peripheral clocks --------------------------------------------------*/
 489:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable I2C1 clock */
 490:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C1, ENABLE);
 491:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable GPIOB clock */
 492:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 493:arch/stm32/mcu_periph/i2c_arch.c **** 
 494:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure I2C1 pins: SCL and SDA ------------------------------------------*/
 495:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 496:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_StructInit(&GPIO_InitStructure);
 497:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7;
 498:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 499:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 500:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 501:arch/stm32/mcu_periph/i2c_arch.c **** 
 502:arch/stm32/mcu_periph/i2c_arch.c ****   /* I2C configuration ----------------------------------------------------------*/
 503:arch/stm32/mcu_periph/i2c_arch.c **** 
 504:arch/stm32/mcu_periph/i2c_arch.c **** 
 505:arch/stm32/mcu_periph/i2c_arch.c ****   /* Reset and initialize I2C HW */
 506:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_reset_init(&i2c1);
 507:arch/stm32/mcu_periph/i2c_arch.c **** 
 508:arch/stm32/mcu_periph/i2c_arch.c **** }
 509:arch/stm32/mcu_periph/i2c_arch.c **** 
 510:arch/stm32/mcu_periph/i2c_arch.c **** 
 511:arch/stm32/mcu_periph/i2c_arch.c **** void i2c1_ev_irq_handler(void) {
 512:arch/stm32/mcu_periph/i2c_arch.c **** 
 513:arch/stm32/mcu_periph/i2c_arch.c ****   uint32_t event = I2C_GetLastEvent(I2C1);
 514:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_driver_event(&i2c1, event);
 515:arch/stm32/mcu_periph/i2c_arch.c **** 
 516:arch/stm32/mcu_periph/i2c_arch.c **** }
 517:arch/stm32/mcu_periph/i2c_arch.c **** 
 518:arch/stm32/mcu_periph/i2c_arch.c **** 
 519:arch/stm32/mcu_periph/i2c_arch.c **** void i2c1_er_irq_handler(void) {
 520:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_error(&i2c1);
 521:arch/stm32/mcu_periph/i2c_arch.c **** }
 522:arch/stm32/mcu_periph/i2c_arch.c **** 
 523:arch/stm32/mcu_periph/i2c_arch.c **** #endif /* USE_I2C1 */
 524:arch/stm32/mcu_periph/i2c_arch.c **** 
 525:arch/stm32/mcu_periph/i2c_arch.c **** 
 526:arch/stm32/mcu_periph/i2c_arch.c **** 
 527:arch/stm32/mcu_periph/i2c_arch.c **** 
 528:arch/stm32/mcu_periph/i2c_arch.c **** 
 529:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C2
 530:arch/stm32/mcu_periph/i2c_arch.c **** 
 531:arch/stm32/mcu_periph/i2c_arch.c **** //  dec      hex
 532:arch/stm32/mcu_periph/i2c_arch.c **** //  196609   30001        BUSY  MSL |                 SB
 533:arch/stm32/mcu_periph/i2c_arch.c **** //  458882   70082    TRA BUSY  MSL | TXE       ADDR
 534:arch/stm32/mcu_periph/i2c_arch.c **** //  458884   70084    TRA BUSY  MSL | TXE  BTF
 535:arch/stm32/mcu_periph/i2c_arch.c **** //  196609   30001        BUSY  MSL |                 SB
 536:arch/stm32/mcu_periph/i2c_arch.c **** //  196610   30002        BUSY  MSL |           ADDR
 537:arch/stm32/mcu_periph/i2c_arch.c **** //
 538:arch/stm32/mcu_periph/i2c_arch.c **** 
 539:arch/stm32/mcu_periph/i2c_arch.c **** 
 540:arch/stm32/mcu_periph/i2c_arch.c **** struct i2c_errors i2c2_errors;
 541:arch/stm32/mcu_periph/i2c_arch.c **** 
 542:arch/stm32/mcu_periph/i2c_arch.c **** #include "my_debug_servo.h"
 543:arch/stm32/mcu_periph/i2c_arch.c **** 
 544:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_hw_init(void) {
 545:arch/stm32/mcu_periph/i2c_arch.c **** 
 546:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.reg_addr = I2C2;
 547:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.init_struct = &I2C2_InitStruct;
 548:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.scl_pin = GPIO_Pin_10;
 549:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.sda_pin = GPIO_Pin_11;
 550:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.errors = &i2c2_errors;
 551:arch/stm32/mcu_periph/i2c_arch.c **** 
 552:arch/stm32/mcu_periph/i2c_arch.c ****   /* zeros error counter */
 553:arch/stm32/mcu_periph/i2c_arch.c ****   ZEROS_ERR_COUNTER(i2c2_errors);
 554:arch/stm32/mcu_periph/i2c_arch.c **** 
 555:arch/stm32/mcu_periph/i2c_arch.c ****   /* reset peripheral to default state ( sometimes not achieved on reset :(  ) */
 556:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(I2C2);
 557:arch/stm32/mcu_periph/i2c_arch.c **** 
 558:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 559:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitTypeDef  NVIC_InitStructure;
 560:arch/stm32/mcu_periph/i2c_arch.c **** 
 561:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure and enable I2C2 event interrupt --------------------------------*/
 562:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_EV_IRQn;
 563:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 564:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 565:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 566:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 567:arch/stm32/mcu_periph/i2c_arch.c **** 
 568:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure and enable I2C2 err interrupt ----------------------------------*/
 569:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_ER_IRQn;
 570:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 571:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 572:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 573:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 574:arch/stm32/mcu_periph/i2c_arch.c **** 
 575:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable peripheral clocks -------------------------------------------------*/
 576:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable I2C2 clock */
 577:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C2, ENABLE);
 578:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable GPIOB clock */
 579:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 580:arch/stm32/mcu_periph/i2c_arch.c **** 
 581:arch/stm32/mcu_periph/i2c_arch.c ****   // Reset and initialize I2C HW
 582:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_reset_init(&i2c2);
 583:arch/stm32/mcu_periph/i2c_arch.c **** 
 584:arch/stm32/mcu_periph/i2c_arch.c **** }
 585:arch/stm32/mcu_periph/i2c_arch.c **** 
 586:arch/stm32/mcu_periph/i2c_arch.c **** 
 587:arch/stm32/mcu_periph/i2c_arch.c **** 
 588:arch/stm32/mcu_periph/i2c_arch.c **** 
 589:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_ev_irq_handler(void) {
 590:arch/stm32/mcu_periph/i2c_arch.c ****   uint32_t event = I2C_GetLastEvent(I2C2);
 591:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_driver_event(&i2c2, event);
 592:arch/stm32/mcu_periph/i2c_arch.c **** }
 593:arch/stm32/mcu_periph/i2c_arch.c **** 
 594:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_er_irq_handler(void) {
 595:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_error(&i2c2);
 596:arch/stm32/mcu_periph/i2c_arch.c **** 
 597:arch/stm32/mcu_periph/i2c_arch.c **** }
 598:arch/stm32/mcu_periph/i2c_arch.c **** 
 599:arch/stm32/mcu_periph/i2c_arch.c **** #endif /* USE_I2C2 */
 600:arch/stm32/mcu_periph/i2c_arch.c **** 
 601:arch/stm32/mcu_periph/i2c_arch.c **** 
 602:arch/stm32/mcu_periph/i2c_arch.c **** 
 603:arch/stm32/mcu_periph/i2c_arch.c **** bool_t i2c_idle(struct i2c_periph* p)
 604:arch/stm32/mcu_periph/i2c_arch.c **** {
 605:arch/stm32/mcu_periph/i2c_arch.c ****   return !I2C_GetFlagStatus(p->reg_addr, I2C_FLAG_BUSY);
 606:arch/stm32/mcu_periph/i2c_arch.c **** }
 607:arch/stm32/mcu_periph/i2c_arch.c **** 
 608:arch/stm32/mcu_periph/i2c_arch.c **** bool_t i2c_submit(struct i2c_periph* p, struct i2c_transaction* t) {
 609:arch/stm32/mcu_periph/i2c_arch.c **** 
 610:arch/stm32/mcu_periph/i2c_arch.c ****   uint8_t temp;
 611:arch/stm32/mcu_periph/i2c_arch.c ****   temp = p->trans_insert_idx + 1;
 612:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp >= I2C_TRANSACTION_QUEUE_LEN) temp = 0;
 613:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp == p->trans_extract_idx)
 614:arch/stm32/mcu_periph/i2c_arch.c ****     return FALSE;                          // queue full
 615:arch/stm32/mcu_periph/i2c_arch.c **** 
 616:arch/stm32/mcu_periph/i2c_arch.c ****   t->status = I2CTransPending;
 617:arch/stm32/mcu_periph/i2c_arch.c **** 
 618:arch/stm32/mcu_periph/i2c_arch.c **** 
 619:arch/stm32/mcu_periph/i2c_arch.c ****   __disable_irq();
 620:arch/stm32/mcu_periph/i2c_arch.c ****   /* put transacation in queue */
 621:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans[p->trans_insert_idx] = t;
 622:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans_insert_idx = temp;
 623:arch/stm32/mcu_periph/i2c_arch.c **** 
 624:arch/stm32/mcu_periph/i2c_arch.c ****   /* if peripheral is idle, start the transaction */
 625:arch/stm32/mcu_periph/i2c_arch.c ****   if (p->status == I2CIdle)
 626:arch/stm32/mcu_periph/i2c_arch.c ****     start_transaction(p);
 627:arch/stm32/mcu_periph/i2c_arch.c ****   /* else it will be started by the interrupt handler when the previous transactions completes */
 628:arch/stm32/mcu_periph/i2c_arch.c ****   __enable_irq();
 629:arch/stm32/mcu_periph/i2c_arch.c **** 
 630:arch/stm32/mcu_periph/i2c_arch.c ****   return TRUE;
 631:arch/stm32/mcu_periph/i2c_arch.c **** }
 632:arch/stm32/mcu_periph/i2c_arch.c **** 
 633:arch/stm32/mcu_periph/i2c_arch.c **** 
 634:arch/stm32/mcu_periph/i2c_arch.c **** static void start_transaction(struct i2c_periph* p) {
 635:arch/stm32/mcu_periph/i2c_arch.c ****   p->idx_buf = 0;
 636:arch/stm32/mcu_periph/i2c_arch.c ****   p->status = I2CStartRequested;
 374              		.loc 1 636 0
 375 005c 0124     		movs	r4, #1
 637:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_EVT, ENABLE);
 376              		.loc 1 637 0
 377 005e 686A     		ldr	r0, [r5, #36]
 378 0060 4FF40071 		mov	r1, #512
 379 0064 2246     		mov	r2, r4
 635:arch/stm32/mcu_periph/i2c_arch.c ****   p->idx_buf = 0;
 380              		.loc 1 635 0
 381 0066 85F82330 		strb	r3, [r5, #35]
 636:arch/stm32/mcu_periph/i2c_arch.c ****   p->status = I2CStartRequested;
 382              		.loc 1 636 0
 383 006a 85F82240 		strb	r4, [r5, #34]
 384              		.loc 1 637 0
 385 006e FFF7FEFF 		bl	I2C_ITConfig
 638:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_GenerateSTART(p->reg_addr, ENABLE);
 386              		.loc 1 638 0
 387 0072 686A     		ldr	r0, [r5, #36]
 388 0074 2146     		mov	r1, r4
 389              	.LBE139:
 390              	.LBE138:
 391              	.LBE137:
 392              	.LBE136:
 393              	.LBE135:
 394              	.LBE134:
  87:arch/stm32/mcu_periph/i2c_arch.c **** }
 395              		.loc 1 87 0
 396 0076 BDE83840 		pop	{r3, r4, r5, lr}
 397              	.LBB145:
 398              	.LBB144:
 399              	.LBB143:
 400              	.LBB142:
 401              	.LBB141:
 402              	.LBB140:
 403              		.loc 1 638 0
 404 007a FFF7FEBF 		b	I2C_GenerateSTART
 405              	.L27:
 406 007e 00BF     		.align	2
 407              	.L26:
 408 0080 00000000 		.word	i2c2
 409              	.LBE140:
 410              	.LBE141:
 411              	.LBE142:
 412              	.LBE143:
 413              	.LBE144:
 414              	.LBE145:
 415              		.cfi_endproc
 416              	.LFE52:
 418              		.section	.text.i2c_event,"ax",%progbits
 419              		.align	1
 420              		.global	i2c_event
 421              		.thumb
 422              		.thumb_func
 424              	i2c_event:
 425              	.LFB36:
 291:arch/stm32/mcu_periph/i2c_arch.c **** {
 426              		.loc 1 291 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 292:arch/stm32/mcu_periph/i2c_arch.c **** }
 431              		.loc 1 292 0
 432 0000 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE36:
 436              		.section	.text.i2c2_hw_init,"ax",%progbits
 437              		.align	1
 438              		.global	i2c2_hw_init
 439              		.thumb
 440              		.thumb_func
 442              	i2c2_hw_init:
 443              	.LFB41:
 544:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_hw_init(void) {
 444              		.loc 1 544 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 8
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 449              	.LCFI3:
 450              		.cfi_def_cfa_offset 24
 451              		.cfi_offset 14, -4
 452              		.cfi_offset 6, -8
 453              		.cfi_offset 5, -12
 454              		.cfi_offset 4, -16
 455              		.cfi_offset 1, -20
 456              		.cfi_offset 0, -24
 547:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.init_struct = &I2C2_InitStruct;
 457              		.loc 1 547 0
 458 0002 274B     		ldr	r3, .L30
 546:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.reg_addr = I2C2;
 459              		.loc 1 546 0
 460 0004 274D     		ldr	r5, .L30+4
 553:arch/stm32/mcu_periph/i2c_arch.c ****   ZEROS_ERR_COUNTER(i2c2_errors);
 461              		.loc 1 553 0
 462 0006 0022     		movs	r2, #0
 547:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.init_struct = &I2C2_InitStruct;
 463              		.loc 1 547 0
 464 0008 AB62     		str	r3, [r5, #40]
 548:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.scl_pin = GPIO_Pin_10;
 465              		.loc 1 548 0
 466 000a 4FF48063 		mov	r3, #1024
 467 000e AB85     		strh	r3, [r5, #44]	@ movhi
 549:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.sda_pin = GPIO_Pin_11;
 468              		.loc 1 549 0
 469 0010 4FF40063 		mov	r3, #2048
 470 0014 EB85     		strh	r3, [r5, #46]	@ movhi
 550:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.errors = &i2c2_errors;
 471              		.loc 1 550 0
 472 0016 244B     		ldr	r3, .L30+8
 546:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.reg_addr = I2C2;
 473              		.loc 1 546 0
 474 0018 2448     		ldr	r0, .L30+12
 553:arch/stm32/mcu_periph/i2c_arch.c ****   ZEROS_ERR_COUNTER(i2c2_errors);
 475              		.loc 1 553 0
 476 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 477 001c 5A80     		strh	r2, [r3, #2]	@ movhi
 478 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 479 0020 DA80     		strh	r2, [r3, #6]	@ movhi
 480 0022 1A81     		strh	r2, [r3, #8]	@ movhi
 481 0024 5A81     		strh	r2, [r3, #10]	@ movhi
 482 0026 9A81     		strh	r2, [r3, #12]	@ movhi
 483 0028 DA81     		strh	r2, [r3, #14]	@ movhi
 484 002a 1A61     		str	r2, [r3, #16]
 485 002c 5A61     		str	r2, [r3, #20]
 486 002e 1646     		mov	r6, r2	@ movhi
 550:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.errors = &i2c2_errors;
 487              		.loc 1 550 0
 488 0030 2B63     		str	r3, [r5, #48]
 546:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.reg_addr = I2C2;
 489              		.loc 1 546 0
 490 0032 6862     		str	r0, [r5, #36]
 556:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(I2C2);
 491              		.loc 1 556 0
 492 0034 FFF7FEFF 		bl	I2C_DeInit
 558:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 493              		.loc 1 558 0
 494 0038 4FF4E060 		mov	r0, #1792
 495 003c FFF7FEFF 		bl	NVIC_PriorityGroupConfig
 565:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 496              		.loc 1 565 0
 497 0040 0124     		movs	r4, #1
 562:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_EV_IRQn;
 498              		.loc 1 562 0
 499 0042 2123     		movs	r3, #33
 566:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 500              		.loc 1 566 0
 501 0044 01A8     		add	r0, sp, #4
 562:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_EV_IRQn;
 502              		.loc 1 562 0
 503 0046 8DF80430 		strb	r3, [sp, #4]
 563:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 504              		.loc 1 563 0
 505 004a 8DF80560 		strb	r6, [sp, #5]
 564:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 506              		.loc 1 564 0
 507 004e 8DF80660 		strb	r6, [sp, #6]
 565:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 508              		.loc 1 565 0
 509 0052 8DF80740 		strb	r4, [sp, #7]
 566:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 510              		.loc 1 566 0
 511 0056 FFF7FEFF 		bl	NVIC_Init
 569:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_ER_IRQn;
 512              		.loc 1 569 0
 513 005a 2223     		movs	r3, #34
 573:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 514              		.loc 1 573 0
 515 005c 01A8     		add	r0, sp, #4
 569:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_ER_IRQn;
 516              		.loc 1 569 0
 517 005e 8DF80430 		strb	r3, [sp, #4]
 570:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 518              		.loc 1 570 0
 519 0062 8DF80560 		strb	r6, [sp, #5]
 571:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 520              		.loc 1 571 0
 521 0066 8DF80640 		strb	r4, [sp, #6]
 572:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 522              		.loc 1 572 0
 523 006a 8DF80740 		strb	r4, [sp, #7]
 573:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 524              		.loc 1 573 0
 525 006e FFF7FEFF 		bl	NVIC_Init
 577:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C2, ENABLE);
 526              		.loc 1 577 0
 527 0072 2146     		mov	r1, r4
 528 0074 4FF48000 		mov	r0, #4194304
 529 0078 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 579:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 530              		.loc 1 579 0
 531 007c 0820     		movs	r0, #8
 532 007e 2146     		mov	r1, r4
 533 0080 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 534              	.LVL25:
 535              	.LBB146:
 536              	.LBB147:
 441:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_hard_reset(p);
 537              		.loc 1 441 0
 538 0084 FFF7FEFF 		bl	i2c_hard_reset.constprop.6
 444:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_Cmd(p->reg_addr, ENABLE);
 539              		.loc 1 444 0
 540 0088 686A     		ldr	r0, [r5, #36]
 541 008a 2146     		mov	r1, r4
 542 008c FFF7FEFF 		bl	I2C_Cmd
 447:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_ERR, ENABLE);
 543              		.loc 1 447 0
 544 0090 686A     		ldr	r0, [r5, #36]
 545 0092 4FF48071 		mov	r1, #256
 546 0096 2246     		mov	r2, r4
 547 0098 FFF7FEFF 		bl	I2C_ITConfig
 548              	.LBE147:
 549              	.LBE146:
 584:arch/stm32/mcu_periph/i2c_arch.c **** }
 550              		.loc 1 584 0
 551 009c 7CBD     		pop	{r2, r3, r4, r5, r6, pc}
 552              	.L31:
 553 009e 00BF     		.align	2
 554              	.L30:
 555 00a0 00000000 		.word	.LANCHOR0
 556 00a4 00000000 		.word	i2c2
 557 00a8 00000000 		.word	.LANCHOR1
 558 00ac 00580040 		.word	1073764352
 559              		.cfi_endproc
 560              	.LFE41:
 562              		.section	.text.i2c2_ev_irq_handler,"ax",%progbits
 563              		.align	1
 564              		.global	i2c2_ev_irq_handler
 565              		.thumb
 566              		.thumb_func
 568              	i2c2_ev_irq_handler:
 569              	.LFB42:
 589:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_ev_irq_handler(void) {
 570              		.loc 1 589 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574 0000 70B5     		push	{r4, r5, r6, lr}
 575              	.LCFI4:
 576              		.cfi_def_cfa_offset 16
 577              		.cfi_offset 14, -4
 578              		.cfi_offset 6, -8
 579              		.cfi_offset 5, -12
 580              		.cfi_offset 4, -16
 581              	.LBB148:
 582              	.LBB149:
 296:arch/stm32/mcu_periph/i2c_arch.c ****   struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 583              		.loc 1 296 0
 584 0002 A24D     		ldr	r5, .L70
 585              	.LBE149:
 586              	.LBE148:
 590:arch/stm32/mcu_periph/i2c_arch.c ****   uint32_t event = I2C_GetLastEvent(I2C2);
 587              		.loc 1 590 0
 588 0004 A248     		ldr	r0, .L70+4
 589 0006 FFF7FEFF 		bl	I2C_GetLastEvent
 590              	.LVL26:
 591              	.LBB190:
 592              	.LBB187:
 296:arch/stm32/mcu_periph/i2c_arch.c ****   struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 593              		.loc 1 296 0
 594 000a 95F82130 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
 595 000e 55F82340 		ldr	r4, [r5, r3, lsl #2]
 596              	.LVL27:
 297:arch/stm32/mcu_periph/i2c_arch.c ****   switch (p->status) {
 597              		.loc 1 297 0
 598 0012 95F82230 		ldrb	r3, [r5, #34]	@ zero_extendqisi2
 599              	.LVL28:
 600 0016 013B     		subs	r3, r3, #1
 601 0018 072B     		cmp	r3, #7
 602 001a 00F26381 		bhi	.L33
 603 001e DFE813F0 		tbh	[pc, r3, lsl #1]
 604              	.L42:
 605 0022 0800     		.2byte	(.L34-.L42)/2
 606 0024 1800     		.2byte	(.L35-.L42)/2
 607 0026 BD00     		.2byte	(.L36-.L42)/2
 608 0028 4300     		.2byte	(.L37-.L42)/2
 609 002a EF00     		.2byte	(.L38-.L42)/2
 610 002c 2601     		.2byte	(.L39-.L42)/2
 611 002e 7B00     		.2byte	(.L40-.L42)/2
 612 0030 5501     		.2byte	(.L41-.L42)/2
 613              	.L34:
 614              	.LVL29:
 615              	.LBB150:
 616              	.LBB151:
 103:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_SB) {
 617              		.loc 1 103 0
 618 0032 984B     		ldr	r3, .L70+8
 619 0034 0340     		ands	r3, r3, r0
 620 0036 002B     		cmp	r3, #0
 621 0038 00F05881 		beq	.L32
 104:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->type == I2CTransRx) {
 622              		.loc 1 104 0
 623 003c 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 624 003e 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 625 0040 012A     		cmp	r2, #1
 105:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Receiver);
 626              		.loc 1 105 0
 627 0042 686A     		ldr	r0, [r5, #36]
 628              	.LVL30:
 104:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->type == I2CTransRx) {
 629              		.loc 1 104 0
 630 0044 00F04881 		beq	.L68
 631              	.L44:
 109:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Transmitter);
 632              		.loc 1 109 0
 633 0048 0022     		movs	r2, #0
 634 004a FFF7FEFF 		bl	I2C_Send7bitAddress
 110:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CAddrWrSent;
 635              		.loc 1 110 0
 636 004e 0223     		movs	r3, #2
 637 0050 45E1     		b	.L65
 638              	.LVL31:
 639              	.L35:
 640              	.LBE151:
 641              	.LBE150:
 642              	.LBB152:
 643              	.LBB153:
 123:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && (event & I2C_FLAG_TRA)) {
 644              		.loc 1 123 0
 645 0052 914B     		ldr	r3, .L70+12
 646 0054 0340     		ands	r3, r3, r0
 647 0056 002B     		cmp	r3, #0
 648 0058 00F04481 		beq	.L33
 649 005c 4303     		lsls	r3, r0, #13
 650 005e 40F14181 		bpl	.L33
 124:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SendData(periph->reg_addr, trans->buf[0]);
 651              		.loc 1 124 0
 652 0062 8A4D     		ldr	r5, .L70
 653 0064 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 654 0066 686A     		ldr	r0, [r5, #36]
 655              	.LVL32:
 656 0068 FFF7FEFF 		bl	I2C_SendData
 125:arch/stm32/mcu_periph/i2c_arch.c ****     if (trans->len_w > 1) {
 657              		.loc 1 125 0
 658 006c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 659 006e 012B     		cmp	r3, #1
 660 0070 0ED9     		bls	.L46
 126:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_SendData(periph->reg_addr, trans->buf[1]);
 661              		.loc 1 126 0
 662 0072 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 663 0074 686A     		ldr	r0, [r5, #36]
 664 0076 FFF7FEFF 		bl	I2C_SendData
 127:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 2;
 665              		.loc 1 127 0
 666 007a 0223     		movs	r3, #2
 667 007c 85F82330 		strb	r3, [r5, #35]
 128:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 668              		.loc 1 128 0
 669 0080 686A     		ldr	r0, [r5, #36]
 670 0082 4FF48061 		mov	r1, #1024
 671 0086 0122     		movs	r2, #1
 672 0088 FFF7FEFF 		bl	I2C_ITConfig
 129:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CSendingByte;
 673              		.loc 1 129 0
 674 008c 0423     		movs	r3, #4
 675 008e 26E1     		b	.L65
 676              	.L46:
 132:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 1;
 677              		.loc 1 132 0
 678 0090 0121     		movs	r1, #1
 679 0092 85F82310 		strb	r1, [r5, #35]
 133:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 680              		.loc 1 133 0
 681 0096 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 134:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 682              		.loc 1 134 0
 683 0098 686A     		ldr	r0, [r5, #36]
 133:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 684              		.loc 1 133 0
 685 009a 002B     		cmp	r3, #0
 686 009c 00F0F380 		beq	.L69
 687              	.L47:
 138:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTART(periph->reg_addr, ENABLE);
 688              		.loc 1 138 0
 689 00a0 FFF7FEFF 		bl	I2C_GenerateSTART
 139:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CRestartRequested;
 690              		.loc 1 139 0
 691 00a4 0823     		movs	r3, #8
 692 00a6 1AE1     		b	.L65
 693              	.LVL33:
 694              	.L37:
 695              	.LBE153:
 696              	.LBE152:
 697              	.LBB154:
 698              	.LBB155:
 156:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_TXE) {
 699              		.loc 1 156 0
 700 00a8 7C4B     		ldr	r3, .L70+16
 155:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 701              		.loc 1 155 0
 702 00aa 784E     		ldr	r6, .L70
 156:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_TXE) {
 703              		.loc 1 156 0
 704 00ac 0340     		ands	r3, r3, r0
 155:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 705              		.loc 1 155 0
 706 00ae 6D6A     		ldr	r5, [r5, #36]
 707              	.LVL34:
 156:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_TXE) {
 708              		.loc 1 156 0
 709 00b0 002B     		cmp	r3, #0
 710 00b2 00F01B81 		beq	.L32
 157:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_w) {
 711              		.loc 1 157 0
 712 00b6 96F82330 		ldrb	r3, [r6, #35]	@ zero_extendqisi2
 713 00ba 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 714 00bc 9A42     		cmp	r2, r3
 715 00be 0DD9     		bls	.L48
 158:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_SendData(periph->reg_addr, trans->buf[periph->idx_buf]);
 716              		.loc 1 158 0
 717 00c0 96F82330 		ldrb	r3, [r6, #35]	@ zero_extendqisi2
 718 00c4 2846     		mov	r0, r5
 719              	.LVL35:
 720 00c6 E418     		adds	r4, r4, r3
 721              	.LVL36:
 722 00c8 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 723 00ca FFF7FEFF 		bl	I2C_SendData
 724              	.LVL37:
 159:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf++;
 725              		.loc 1 159 0
 726 00ce 96F82330 		ldrb	r3, [r6, #35]	@ zero_extendqisi2
 727 00d2 0133     		adds	r3, r3, #1
 728 00d4 DBB2     		uxtb	r3, r3
 729 00d6 86F82330 		strb	r3, [r6, #35]
 730 00da 70BD     		pop	{r4, r5, r6, pc}
 731              	.LVL38:
 732              	.L48:
 162:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, DISABLE);
 733              		.loc 1 162 0
 734 00dc 2846     		mov	r0, r5
 735              	.LVL39:
 736 00de 4FF48061 		mov	r1, #1024
 737 00e2 0022     		movs	r2, #0
 738 00e4 FFF7FEFF 		bl	I2C_ITConfig
 163:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 739              		.loc 1 163 0
 740 00e8 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 741              	.LBB156:
 164:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 742              		.loc 1 164 0
 743 00ea 706A     		ldr	r0, [r6, #36]
 744 00ec 0121     		movs	r1, #1
 745              	.LBE156:
 163:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 746              		.loc 1 163 0
 747 00ee 7BB9     		cbnz	r3, .L49
 748              	.LBB157:
 164:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 749              		.loc 1 164 0
 750 00f0 FFF7FEFF 		bl	I2C_GenerateSTOP
 168:arch/stm32/mcu_periph/i2c_arch.c ****           counter++;
 751              		.loc 1 168 0
 752 00f4 6A4B     		ldr	r3, .L70+20
 753 00f6 07E0     		b	.L50
 754              	.L52:
 755 00f8 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 756 00fa 0132     		adds	r2, r2, #1
 757 00fc D2B2     		uxtb	r2, r2
 758 00fe 1A70     		strb	r2, [r3, #0]
 169:arch/stm32/mcu_periph/i2c_arch.c ****           if (counter > 100) break;
 759              		.loc 1 169 0
 760 0100 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 761 0102 642A     		cmp	r2, #100
 762 0104 00F2AE80 		bhi	.L61
 763              	.L50:
 167:arch/stm32/mcu_periph/i2c_arch.c ****         while ((regs->CR1 & 0x200) == 0x200) {
 764              		.loc 1 167 0
 765 0108 2A88     		ldrh	r2, [r5, #0]
 766 010a 9005     		lsls	r0, r2, #22
 767 010c F4D4     		bmi	.L52
 768 010e A9E0     		b	.L61
 769              	.L49:
 770              	.LBE157:
 174:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTART(periph->reg_addr, ENABLE);
 771              		.loc 1 174 0
 772 0110 FFF7FEFF 		bl	I2C_GenerateSTART
 175:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CRestartRequested;
 773              		.loc 1 175 0
 774 0114 0823     		movs	r3, #8
 775 0116 70E0     		b	.L64
 776              	.LVL40:
 777              	.L40:
 778              	.LBE155:
 779              	.LBE154:
 780              	.LBB158:
 781              	.LBB159:
 189:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 782              		.loc 1 189 0
 783 0118 624B     		ldr	r3, .L70+24
 784 011a 0340     		ands	r3, r3, r0
 785 011c 63B1     		cbz	r3, .L53
 786              	.LBB160:
 190:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 787              		.loc 1 190 0
 788 011e 686A     		ldr	r0, [r5, #36]
 789              	.LVL41:
 790 0120 FFF7FEFF 		bl	I2C_ReceiveData
 791              	.LVL42:
 191:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_r) {
 792              		.loc 1 191 0
 793 0124 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 794 0128 6288     		ldrh	r2, [r4, #2]
 795 012a 9A42     		cmp	r2, r3
 796 012c 04D9     		bls	.L53
 192:arch/stm32/mcu_periph/i2c_arch.c ****       trans->buf[periph->idx_buf] = read_byte;
 797              		.loc 1 192 0
 798 012e 574B     		ldr	r3, .L70
 799 0130 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 800 0134 E318     		adds	r3, r4, r3
 801 0136 5871     		strb	r0, [r3, #5]
 802              	.LVL43:
 803              	.L53:
 804              	.LBE160:
 195:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(periph->reg_addr, I2C_IT_EVT|I2C_IT_BUF, DISABLE);  // should only need to disable e
 805              		.loc 1 195 0
 806 0138 544D     		ldr	r5, .L70
 807 013a 0022     		movs	r2, #0
 808 013c 686A     		ldr	r0, [r5, #36]
 809 013e 4FF4C061 		mov	r1, #1536
 810 0142 FFF7FEFF 		bl	I2C_ITConfig
 196:arch/stm32/mcu_periph/i2c_arch.c ****   trans->status = I2CTransSuccess;
 811              		.loc 1 196 0
 812 0146 0223     		movs	r3, #2
 813 0148 84F82530 		strb	r3, [r4, #37]
 814              	.LVL44:
 815              	.LBB161:
 816              	.LBB162:
  69:arch/stm32/mcu_periph/i2c_arch.c ****     p->trans_extract_idx++;
 817              		.loc 1 69 0
 818 014c 95F82130 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
 819 0150 0133     		adds	r3, r3, #1
 820 0152 DBB2     		uxtb	r3, r3
  70:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx >= I2C_TRANSACTION_QUEUE_LEN)
 821              		.loc 1 70 0
 822 0154 072B     		cmp	r3, #7
  69:arch/stm32/mcu_periph/i2c_arch.c ****     p->trans_extract_idx++;
 823              		.loc 1 69 0
 824 0156 85F82130 		strb	r3, [r5, #33]
  70:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx >= I2C_TRANSACTION_QUEUE_LEN)
 825              		.loc 1 70 0
 826 015a 02D9     		bls	.L54
  71:arch/stm32/mcu_periph/i2c_arch.c ****       p->trans_extract_idx = 0;
 827              		.loc 1 71 0
 828 015c 0023     		movs	r3, #0
 829 015e 85F82130 		strb	r3, [r5, #33]
 830              	.L54:
  73:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx == p->trans_insert_idx)
 831              		.loc 1 73 0
 832 0162 95F82030 		ldrb	r3, [r5, #32]	@ zero_extendqisi2
 833 0166 95F82120 		ldrb	r2, [r5, #33]	@ zero_extendqisi2
 834 016a 484C     		ldr	r4, .L70
 835              	.LVL45:
 836 016c 9A42     		cmp	r2, r3
 837 016e 4FF00003 		mov	r3, #0
 838 0172 02D1     		bne	.L55
  74:arch/stm32/mcu_periph/i2c_arch.c ****       p->status = I2CIdle;
 839              		.loc 1 74 0
 840 0174 84F82230 		strb	r3, [r4, #34]
 841 0178 70BD     		pop	{r4, r5, r6, pc}
 842              	.L55:
 843              	.LVL46:
 844              	.LBB163:
 845              	.LBB164:
 846              	.LBB165:
 636:arch/stm32/mcu_periph/i2c_arch.c ****   p->status = I2CStartRequested;
 847              		.loc 1 636 0
 848 017a 0125     		movs	r5, #1
 635:arch/stm32/mcu_periph/i2c_arch.c ****   p->idx_buf = 0;
 849              		.loc 1 635 0
 850 017c 84F82330 		strb	r3, [r4, #35]
 637:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_EVT, ENABLE);
 851              		.loc 1 637 0
 852 0180 606A     		ldr	r0, [r4, #36]
 636:arch/stm32/mcu_periph/i2c_arch.c ****   p->status = I2CStartRequested;
 853              		.loc 1 636 0
 854 0182 84F82250 		strb	r5, [r4, #34]
 637:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_EVT, ENABLE);
 855              		.loc 1 637 0
 856 0186 4FF40071 		mov	r1, #512
 857 018a 2A46     		mov	r2, r5
 858 018c FFF7FEFF 		bl	I2C_ITConfig
 859              		.loc 1 638 0
 860 0190 606A     		ldr	r0, [r4, #36]
 861 0192 2946     		mov	r1, r5
 862              	.LBE165:
 863              	.LBE164:
 864              	.LBE163:
 865              	.LBE162:
 866              	.LBE161:
 867              	.LBE159:
 868              	.LBE158:
 869              	.LBE187:
 870              	.LBE190:
 592:arch/stm32/mcu_periph/i2c_arch.c **** }
 871              		.loc 1 592 0
 872 0194 BDE87040 		pop	{r4, r5, r6, lr}
 873              	.LBB191:
 874              	.LBB188:
 875              	.LBB172:
 876              	.LBB171:
 877              	.LBB170:
 878              	.LBB169:
 879              	.LBB168:
 880              	.LBB167:
 881              	.LBB166:
 882              		.loc 1 638 0
 883 0198 FFF7FEBF 		b	I2C_GenerateSTART
 884              	.LVL47:
 885              	.L36:
 886              	.LBE166:
 887              	.LBE167:
 888              	.LBE168:
 889              	.LBE169:
 890              	.LBE170:
 891              	.LBE171:
 892              	.LBE172:
 893              	.LBB173:
 894              	.LBB174:
 207:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && !(event & I2C_FLAG_TRA)) {
 895              		.loc 1 207 0
 896 019c 3E4B     		ldr	r3, .L70+12
 205:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 897              		.loc 1 205 0
 898 019e 3B4E     		ldr	r6, .L70
 207:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && !(event & I2C_FLAG_TRA)) {
 899              		.loc 1 207 0
 900 01a0 0340     		ands	r3, r3, r0
 205:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 901              		.loc 1 205 0
 902 01a2 6D6A     		ldr	r5, [r5, #36]
 903              	.LVL48:
 207:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && !(event & I2C_FLAG_TRA)) {
 904              		.loc 1 207 0
 905 01a4 002B     		cmp	r3, #0
 906 01a6 00F0A180 		beq	.L32
 907 01aa 10F48021 		ands	r1, r0, #262144
 908 01ae 40F09D80 		bne	.L32
 208:arch/stm32/mcu_periph/i2c_arch.c ****     periph->idx_buf = 0;
 909              		.loc 1 208 0
 910 01b2 86F82310 		strb	r1, [r6, #35]
 209:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->len_r == 1) {                                         // If we're going to read only 
 911              		.loc 1 209 0
 912 01b6 6488     		ldrh	r4, [r4, #2]
 913              	.LVL49:
 914              	.LBB175:
 210:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);             // make sure it's gonna be nack
 915              		.loc 1 210 0
 916 01b8 2846     		mov	r0, r5
 917              	.LVL50:
 918              	.LBE175:
 209:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->len_r == 1) {                                         // If we're going to read only 
 919              		.loc 1 209 0
 920 01ba 012C     		cmp	r4, #1
 921 01bc 13D1     		bne	.L56
 922              	.LBB176:
 210:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);             // make sure it's gonna be nack
 923              		.loc 1 210 0
 924 01be FFF7FEFF 		bl	I2C_AcknowledgeConfig
 925              	.LVL51:
 211:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_GenerateSTOP(periph->reg_addr, ENABLE);               // and followed by a stop
 926              		.loc 1 211 0
 927 01c2 706A     		ldr	r0, [r6, #36]
 928 01c4 2146     		mov	r1, r4
 929 01c6 FFF7FEFF 		bl	I2C_GenerateSTOP
 215:arch/stm32/mcu_periph/i2c_arch.c ****         counter++;
 930              		.loc 1 215 0
 931 01ca 374B     		ldr	r3, .L70+28
 932 01cc 06E0     		b	.L57
 933              	.L59:
 934 01ce 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 935 01d0 0132     		adds	r2, r2, #1
 936 01d2 D2B2     		uxtb	r2, r2
 937 01d4 1A70     		strb	r2, [r3, #0]
 216:arch/stm32/mcu_periph/i2c_arch.c ****         if (counter > 100) break;
 938              		.loc 1 216 0
 939 01d6 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 940 01d8 642A     		cmp	r2, #100
 941 01da 02D8     		bhi	.L58
 942              	.L57:
 214:arch/stm32/mcu_periph/i2c_arch.c ****       while ((regs->CR1 & 0x200) == 0x200) {
 943              		.loc 1 214 0
 944 01dc 2A88     		ldrh	r2, [r5, #0]
 945 01de 9105     		lsls	r1, r2, #22
 946 01e0 F5D4     		bmi	.L59
 947              	.L58:
 218:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CReadingLastByte;                           // and remember we did
 948              		.loc 1 218 0
 949 01e2 0622     		movs	r2, #6
 950 01e4 3FE0     		b	.L66
 951              	.L56:
 952              	.LBE176:
 221:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, ENABLE);               // if it's more than one byte,
 953              		.loc 1 221 0
 954 01e6 0121     		movs	r1, #1
 955 01e8 FFF7FEFF 		bl	I2C_AcknowledgeConfig
 222:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 956              		.loc 1 222 0
 957 01ec 706A     		ldr	r0, [r6, #36]
 958 01ee 4FF48061 		mov	r1, #1024
 959 01f2 0122     		movs	r2, #1
 960 01f4 FFF7FEFF 		bl	I2C_ITConfig
 223:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CReadingByte;                               // and remember we did
 961              		.loc 1 223 0
 962 01f8 0523     		movs	r3, #5
 963              	.LVL52:
 964              	.L64:
 965 01fa 86F82230 		strb	r3, [r6, #34]
 966 01fe 70BD     		pop	{r4, r5, r6, pc}
 967              	.LVL53:
 968              	.L38:
 969              	.LBE174:
 970              	.LBE173:
 971              	.LBB177:
 972              	.LBB178:
 237:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 973              		.loc 1 237 0
 974 0200 284B     		ldr	r3, .L70+24
 236:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 975              		.loc 1 236 0
 976 0202 224E     		ldr	r6, .L70
 237:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 977              		.loc 1 237 0
 978 0204 0340     		ands	r3, r3, r0
 236:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 979              		.loc 1 236 0
 980 0206 6D6A     		ldr	r5, [r5, #36]
 981              	.LVL54:
 237:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 982              		.loc 1 237 0
 983 0208 002B     		cmp	r3, #0
 984 020a 6FD0     		beq	.L32
 985              	.LBB179:
 238:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 986              		.loc 1 238 0
 987 020c 2846     		mov	r0, r5
 988              	.LVL55:
 989 020e FFF7FEFF 		bl	I2C_ReceiveData
 990              	.LVL56:
 239:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_r) {
 991              		.loc 1 239 0
 992 0212 96F82330 		ldrb	r3, [r6, #35]	@ zero_extendqisi2
 993 0216 6288     		ldrh	r2, [r4, #2]
 994 0218 9A42     		cmp	r2, r3
 995 021a 67D9     		bls	.L32
 240:arch/stm32/mcu_periph/i2c_arch.c ****       trans->buf[periph->idx_buf] = read_byte;
 996              		.loc 1 240 0
 997 021c 96F82330 		ldrb	r3, [r6, #35]	@ zero_extendqisi2
 998 0220 E318     		adds	r3, r4, r3
 999 0222 5871     		strb	r0, [r3, #5]
 241:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf++;
 1000              		.loc 1 241 0
 1001 0224 96F82330 		ldrb	r3, [r6, #35]	@ zero_extendqisi2
 1002 0228 0133     		adds	r3, r3, #1
 1003 022a DBB2     		uxtb	r3, r3
 1004 022c 86F82330 		strb	r3, [r6, #35]
 242:arch/stm32/mcu_periph/i2c_arch.c ****       if (periph->idx_buf >= trans->len_r-1) {                    // We're reading our last byte
 1005              		.loc 1 242 0
 1006 0230 6388     		ldrh	r3, [r4, #2]
 1007 0232 96F82320 		ldrb	r2, [r6, #35]	@ zero_extendqisi2
 1008 0236 013B     		subs	r3, r3, #1
 1009 0238 9A42     		cmp	r2, r3
 1010 023a 57DB     		blt	.L32
 1011              	.LBB180:
 243:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);         // give them a nack once it's don
 1012              		.loc 1 243 0
 1013 023c 706A     		ldr	r0, [r6, #36]
 1014              	.LVL57:
 1015 023e 0021     		movs	r1, #0
 1016 0240 FFF7FEFF 		bl	I2C_AcknowledgeConfig
 244:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);               // and follow with a stop
 1017              		.loc 1 244 0
 1018 0244 706A     		ldr	r0, [r6, #36]
 1019 0246 0121     		movs	r1, #1
 1020 0248 FFF7FEFF 		bl	I2C_GenerateSTOP
 248:arch/stm32/mcu_periph/i2c_arch.c ****           counter++;
 1021              		.loc 1 248 0
 1022 024c 174B     		ldr	r3, .L70+32
 1023 024e 06E0     		b	.L60
 1024              	.L62:
 1025 0250 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1026 0252 0132     		adds	r2, r2, #1
 1027 0254 D2B2     		uxtb	r2, r2
 1028 0256 1A70     		strb	r2, [r3, #0]
 249:arch/stm32/mcu_periph/i2c_arch.c ****           if (counter > 100) break;
 1029              		.loc 1 249 0
 1030 0258 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1031 025a 642A     		cmp	r2, #100
 1032 025c 02D8     		bhi	.L61
 1033              	.L60:
 247:arch/stm32/mcu_periph/i2c_arch.c ****         while ((regs->CR1 & 0x200) == 0x200) {
 1034              		.loc 1 247 0
 1035 025e 2A88     		ldrh	r2, [r5, #0]
 1036 0260 9205     		lsls	r2, r2, #22
 1037 0262 F5D4     		bmi	.L62
 1038              	.LVL58:
 1039              	.L61:
 251:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CStopRequested;                        // remember we already trigered t
 1040              		.loc 1 251 0
 1041 0264 0722     		movs	r2, #7
 1042              	.LVL59:
 1043              	.L66:
 1044 0266 094B     		ldr	r3, .L70
 1045 0268 83F82220 		strb	r2, [r3, #34]
 1046 026c 70BD     		pop	{r4, r5, r6, pc}
 1047              	.LVL60:
 1048              	.L39:
 1049              	.LBE180:
 1050              	.LBE179:
 1051              	.LBE178:
 1052              	.LBE177:
 1053              	.LBB181:
 1054              	.LBB182:
 264:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_BTF) {
 1055              		.loc 1 264 0
 1056 026e 104B     		ldr	r3, .L70+36
 1057 0270 0340     		ands	r3, r3, r0
 1058 0272 FBB1     		cbz	r3, .L63
 1059              	.LBB183:
 265:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 1060              		.loc 1 265 0
 1061 0274 686A     		ldr	r0, [r5, #36]
 1062              	.LVL61:
 1063 0276 FFF7FEFF 		bl	I2C_ReceiveData
 1064              	.LVL62:
 266:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 1065              		.loc 1 266 0
 1066 027a 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 267:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 1067              		.loc 1 267 0
 1068 027e 0121     		movs	r1, #1
 266:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 1069              		.loc 1 266 0
 1070 0280 E418     		adds	r4, r4, r3
 1071              	.LVL63:
 1072 0282 6071     		strb	r0, [r4, #5]
 267:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 1073              		.loc 1 267 0
 1074 0284 686A     		ldr	r0, [r5, #36]
 1075              	.LVL64:
 1076              	.L69:
 1077 0286 FFF7FEFF 		bl	I2C_GenerateSTOP
 1078 028a 1DE0     		b	.L67
 1079              	.L71:
 1080              		.align	2
 1081              	.L70:
 1082 028c 00000000 		.word	i2c2
 1083 0290 00580040 		.word	1073764352
 1084 0294 01000010 		.word	268435457
 1085 0298 02000010 		.word	268435458
 1086 029c 80000010 		.word	268435584
 1087 02a0 00000000 		.word	.LANCHOR2
 1088 02a4 40000010 		.word	268435520
 1089 02a8 00000000 		.word	.LANCHOR3
 1090 02ac 00000000 		.word	.LANCHOR4
 1091 02b0 04000010 		.word	268435460
 1092              	.LVL65:
 1093              	.L63:
 1094              	.LBE183:
 270:arch/stm32/mcu_periph/i2c_arch.c ****   else if (event & I2C_FLAG_RXNE) {       // should really be BTF ?
 1095              		.loc 1 270 0
 1096 02b4 0E4B     		ldr	r3, .L72
 1097 02b6 0340     		ands	r3, r3, r0
 1098 02b8 C3B1     		cbz	r3, .L32
 1099              	.LBB184:
 271:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 1100              		.loc 1 271 0
 1101 02ba 686A     		ldr	r0, [r5, #36]
 1102              	.LVL66:
 1103 02bc FFF7FEFF 		bl	I2C_ReceiveData
 1104              	.LVL67:
 272:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 1105              		.loc 1 272 0
 1106 02c0 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 1107 02c4 E418     		adds	r4, r4, r3
 1108              	.LVL68:
 1109 02c6 6071     		strb	r0, [r4, #5]
 1110              	.LVL69:
 1111              	.L67:
 273:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CStopRequested;
 1112              		.loc 1 273 0
 1113 02c8 0723     		movs	r3, #7
 1114 02ca 08E0     		b	.L65
 1115              	.LVL70:
 1116              	.L41:
 1117              	.LBE184:
 1118              	.LBE182:
 1119              	.LBE181:
 1120              	.LBB185:
 1121              	.LBB186:
 284:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_SB) {
 1122              		.loc 1 284 0
 1123 02cc 094B     		ldr	r3, .L72+4
 1124 02ce 0340     		ands	r3, r3, r0
 1125 02d0 63B1     		cbz	r3, .L32
 285:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Receiver);
 1126              		.loc 1 285 0
 1127 02d2 686A     		ldr	r0, [r5, #36]
 1128              	.LVL71:
 1129 02d4 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 1130 02d6 0122     		movs	r2, #1
 1131              	.LVL72:
 1132              	.L68:
 1133 02d8 FFF7FEFF 		bl	I2C_Send7bitAddress
 286:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CAddrRdSent;
 1134              		.loc 1 286 0
 1135 02dc 0323     		movs	r3, #3
 1136              	.LVL73:
 1137              	.L65:
 1138 02de 85F82230 		strb	r3, [r5, #34]
 1139 02e2 70BD     		pop	{r4, r5, r6, pc}
 1140              	.LVL74:
 1141              	.L33:
 1142              	.LBE186:
 1143              	.LBE185:
 1144              	.LBE188:
 1145              	.LBE191:
 592:arch/stm32/mcu_periph/i2c_arch.c **** }
 1146              		.loc 1 592 0
 1147 02e4 BDE87040 		pop	{r4, r5, r6, lr}
 1148              	.LBB192:
 1149              	.LBB189:
 323:arch/stm32/mcu_periph/i2c_arch.c ****     OUT_OF_SYNC_STATE_MACHINE(p, p->status, event);
 1150              		.loc 1 323 0
 1151 02e8 FFF7FEBF 		b	abort_and_reset.constprop.4
 1152              	.LVL75:
 1153              	.L32:
 1154 02ec 70BD     		pop	{r4, r5, r6, pc}
 1155              	.L73:
 1156 02ee 00BF     		.align	2
 1157              	.L72:
 1158 02f0 40000010 		.word	268435520
 1159 02f4 01000010 		.word	268435457
 1160              	.LBE189:
 1161              	.LBE192:
 1162              		.cfi_endproc
 1163              	.LFE42:
 1165              		.section	.text.i2c2_er_irq_handler,"ax",%progbits
 1166              		.align	1
 1167              		.global	i2c2_er_irq_handler
 1168              		.thumb
 1169              		.thumb_func
 1171              	i2c2_er_irq_handler:
 1172              	.LFB43:
 594:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_er_irq_handler(void) {
 1173              		.loc 1 594 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              	.LVL76:
 1178 0000 10B5     		push	{r4, lr}
 1179              	.LCFI5:
 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 14, -4
 1182              		.cfi_offset 4, -8
 1183              	.LBB193:
 1184              	.LBB194:
 330:arch/stm32/mcu_periph/i2c_arch.c ****   p->errors->er_irq_cnt;
 1185              		.loc 1 330 0
 1186 0002 384C     		ldr	r4, .L82
 331:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_AF)) {       /* Acknowledge failure */
 1187              		.loc 1 331 0
 1188 0004 3849     		ldr	r1, .L82+4
 330:arch/stm32/mcu_periph/i2c_arch.c ****   p->errors->er_irq_cnt;
 1189              		.loc 1 330 0
 1190 0006 236B     		ldr	r3, [r4, #48]
 331:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_AF)) {       /* Acknowledge failure */
 1191              		.loc 1 331 0
 1192 0008 606A     		ldr	r0, [r4, #36]
 330:arch/stm32/mcu_periph/i2c_arch.c ****   p->errors->er_irq_cnt;
 1193              		.loc 1 330 0
 1194 000a 5B69     		ldr	r3, [r3, #20]
 331:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_AF)) {       /* Acknowledge failure */
 1195              		.loc 1 331 0
 1196 000c FFF7FEFF 		bl	I2C_GetITStatus
 1197 0010 40B1     		cbz	r0, .L75
 332:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->ack_fail_cnt++;
 1198              		.loc 1 332 0
 1199 0012 236B     		ldr	r3, [r4, #48]
 333:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_AF);
 1200              		.loc 1 333 0
 1201 0014 606A     		ldr	r0, [r4, #36]
 332:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->ack_fail_cnt++;
 1202              		.loc 1 332 0
 1203 0016 1A88     		ldrh	r2, [r3, #0]
 333:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_AF);
 1204              		.loc 1 333 0
 1205 0018 3349     		ldr	r1, .L82+4
 332:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->ack_fail_cnt++;
 1206              		.loc 1 332 0
 1207 001a 0132     		adds	r2, r2, #1
 1208 001c 92B2     		uxth	r2, r2
 1209 001e 1A80     		strh	r2, [r3, #0]	@ movhi
 333:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_AF);
 1210              		.loc 1 333 0
 1211 0020 FFF7FEFF 		bl	I2C_ClearITPendingBit
 1212              	.L75:
 335:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_BERR)) {     /* Misplaced Start or Stop condition */
 1213              		.loc 1 335 0
 1214 0024 2F4C     		ldr	r4, .L82
 1215 0026 4FF00121 		mov	r1, #16777472
 1216 002a 606A     		ldr	r0, [r4, #36]
 1217 002c FFF7FEFF 		bl	I2C_GetITStatus
 1218 0030 48B1     		cbz	r0, .L76
 336:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->miss_start_stop_cnt++;
 1219              		.loc 1 336 0
 1220 0032 236B     		ldr	r3, [r4, #48]
 337:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_BERR);
 1221              		.loc 1 337 0
 1222 0034 606A     		ldr	r0, [r4, #36]
 336:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->miss_start_stop_cnt++;
 1223              		.loc 1 336 0
 1224 0036 5A88     		ldrh	r2, [r3, #2]
 337:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_BERR);
 1225              		.loc 1 337 0
 1226 0038 4FF00121 		mov	r1, #16777472
 336:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->miss_start_stop_cnt++;
 1227              		.loc 1 336 0
 1228 003c 0132     		adds	r2, r2, #1
 1229 003e 92B2     		uxth	r2, r2
 1230 0040 5A80     		strh	r2, [r3, #2]	@ movhi
 337:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_BERR);
 1231              		.loc 1 337 0
 1232 0042 FFF7FEFF 		bl	I2C_ClearITPendingBit
 1233              	.L76:
 339:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_ARLO)) {     /* Arbitration lost */
 1234              		.loc 1 339 0
 1235 0046 274C     		ldr	r4, .L82
 1236 0048 2849     		ldr	r1, .L82+8
 1237 004a 606A     		ldr	r0, [r4, #36]
 1238 004c FFF7FEFF 		bl	I2C_GetITStatus
 1239 0050 40B1     		cbz	r0, .L77
 340:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->arb_lost_cnt++;
 1240              		.loc 1 340 0
 1241 0052 236B     		ldr	r3, [r4, #48]
 341:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_ARLO);
 1242              		.loc 1 341 0
 1243 0054 606A     		ldr	r0, [r4, #36]
 340:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->arb_lost_cnt++;
 1244              		.loc 1 340 0
 1245 0056 9A88     		ldrh	r2, [r3, #4]
 341:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_ARLO);
 1246              		.loc 1 341 0
 1247 0058 2449     		ldr	r1, .L82+8
 340:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->arb_lost_cnt++;
 1248              		.loc 1 340 0
 1249 005a 0132     		adds	r2, r2, #1
 1250 005c 92B2     		uxth	r2, r2
 1251 005e 9A80     		strh	r2, [r3, #4]	@ movhi
 341:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_ARLO);
 1252              		.loc 1 341 0
 1253 0060 FFF7FEFF 		bl	I2C_ClearITPendingBit
 1254              	.L77:
 346:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_OVR)) {      /* Overrun/Underrun */
 1255              		.loc 1 346 0
 1256 0064 1F4C     		ldr	r4, .L82
 1257 0066 2249     		ldr	r1, .L82+12
 1258 0068 606A     		ldr	r0, [r4, #36]
 1259 006a FFF7FEFF 		bl	I2C_GetITStatus
 1260 006e 40B1     		cbz	r0, .L78
 347:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->over_under_cnt++;
 1261              		.loc 1 347 0
 1262 0070 236B     		ldr	r3, [r4, #48]
 348:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_OVR);
 1263              		.loc 1 348 0
 1264 0072 606A     		ldr	r0, [r4, #36]
 347:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->over_under_cnt++;
 1265              		.loc 1 347 0
 1266 0074 DA88     		ldrh	r2, [r3, #6]
 348:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_OVR);
 1267              		.loc 1 348 0
 1268 0076 1E49     		ldr	r1, .L82+12
 347:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->over_under_cnt++;
 1269              		.loc 1 347 0
 1270 0078 0132     		adds	r2, r2, #1
 1271 007a 92B2     		uxth	r2, r2
 1272 007c DA80     		strh	r2, [r3, #6]	@ movhi
 348:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_OVR);
 1273              		.loc 1 348 0
 1274 007e FFF7FEFF 		bl	I2C_ClearITPendingBit
 1275              	.L78:
 350:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_PECERR)) {   /* PEC Error in reception */
 1276              		.loc 1 350 0
 1277 0082 184C     		ldr	r4, .L82
 1278 0084 1B49     		ldr	r1, .L82+16
 1279 0086 606A     		ldr	r0, [r4, #36]
 1280 0088 FFF7FEFF 		bl	I2C_GetITStatus
 1281 008c 40B1     		cbz	r0, .L79
 351:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->pec_recep_cnt++;
 1282              		.loc 1 351 0
 1283 008e 236B     		ldr	r3, [r4, #48]
 352:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_PECERR);
 1284              		.loc 1 352 0
 1285 0090 606A     		ldr	r0, [r4, #36]
 351:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->pec_recep_cnt++;
 1286              		.loc 1 351 0
 1287 0092 1A89     		ldrh	r2, [r3, #8]
 352:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_PECERR);
 1288              		.loc 1 352 0
 1289 0094 1749     		ldr	r1, .L82+16
 351:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->pec_recep_cnt++;
 1290              		.loc 1 351 0
 1291 0096 0132     		adds	r2, r2, #1
 1292 0098 92B2     		uxth	r2, r2
 1293 009a 1A81     		strh	r2, [r3, #8]	@ movhi
 352:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_PECERR);
 1294              		.loc 1 352 0
 1295 009c FFF7FEFF 		bl	I2C_ClearITPendingBit
 1296              	.L79:
 354:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_TIMEOUT)) {  /* Timeout or Tlow error */
 1297              		.loc 1 354 0
 1298 00a0 104C     		ldr	r4, .L82
 1299 00a2 1549     		ldr	r1, .L82+20
 1300 00a4 606A     		ldr	r0, [r4, #36]
 1301 00a6 FFF7FEFF 		bl	I2C_GetITStatus
 1302 00aa 40B1     		cbz	r0, .L80
 355:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->timeout_tlow_cnt++;
 1303              		.loc 1 355 0
 1304 00ac 236B     		ldr	r3, [r4, #48]
 356:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_TIMEOUT);
 1305              		.loc 1 356 0
 1306 00ae 606A     		ldr	r0, [r4, #36]
 355:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->timeout_tlow_cnt++;
 1307              		.loc 1 355 0
 1308 00b0 5A89     		ldrh	r2, [r3, #10]
 356:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_TIMEOUT);
 1309              		.loc 1 356 0
 1310 00b2 1149     		ldr	r1, .L82+20
 355:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->timeout_tlow_cnt++;
 1311              		.loc 1 355 0
 1312 00b4 0132     		adds	r2, r2, #1
 1313 00b6 92B2     		uxth	r2, r2
 1314 00b8 5A81     		strh	r2, [r3, #10]	@ movhi
 356:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_TIMEOUT);
 1315              		.loc 1 356 0
 1316 00ba FFF7FEFF 		bl	I2C_ClearITPendingBit
 1317              	.L80:
 358:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_SMBALERT)) { /* SMBus alert */
 1318              		.loc 1 358 0
 1319 00be 094C     		ldr	r4, .L82
 1320 00c0 0E49     		ldr	r1, .L82+24
 1321 00c2 606A     		ldr	r0, [r4, #36]
 1322 00c4 FFF7FEFF 		bl	I2C_GetITStatus
 1323 00c8 40B1     		cbz	r0, .L81
 359:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->smbus_alert_cnt++;
 1324              		.loc 1 359 0
 1325 00ca 236B     		ldr	r3, [r4, #48]
 360:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_SMBALERT);
 1326              		.loc 1 360 0
 1327 00cc 606A     		ldr	r0, [r4, #36]
 359:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->smbus_alert_cnt++;
 1328              		.loc 1 359 0
 1329 00ce 9A89     		ldrh	r2, [r3, #12]
 360:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_SMBALERT);
 1330              		.loc 1 360 0
 1331 00d0 0A49     		ldr	r1, .L82+24
 359:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->smbus_alert_cnt++;
 1332              		.loc 1 359 0
 1333 00d2 0132     		adds	r2, r2, #1
 1334 00d4 92B2     		uxth	r2, r2
 1335 00d6 9A81     		strh	r2, [r3, #12]	@ movhi
 360:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_SMBALERT);
 1336              		.loc 1 360 0
 1337 00d8 FFF7FEFF 		bl	I2C_ClearITPendingBit
 1338              	.L81:
 1339              	.LBE194:
 1340              	.LBE193:
 597:arch/stm32/mcu_periph/i2c_arch.c **** }
 1341              		.loc 1 597 0
 1342 00dc BDE81040 		pop	{r4, lr}
 1343              	.LBB196:
 1344              	.LBB195:
 363:arch/stm32/mcu_periph/i2c_arch.c ****   abort_and_reset(p);
 1345              		.loc 1 363 0
 1346 00e0 FFF7FEBF 		b	abort_and_reset.constprop.4
 1347              	.L83:
 1348              		.align	2
 1349              	.L82:
 1350 00e4 00000000 		.word	i2c2
 1351 00e8 00040001 		.word	16778240
 1352 00ec 00020001 		.word	16777728
 1353 00f0 00080001 		.word	16779264
 1354 00f4 00100001 		.word	16781312
 1355 00f8 00400001 		.word	16793600
 1356 00fc 00800001 		.word	16809984
 1357              	.LBE195:
 1358              	.LBE196:
 1359              		.cfi_endproc
 1360              	.LFE43:
 1362              		.section	.text.i2c_idle,"ax",%progbits
 1363              		.align	1
 1364              		.global	i2c_idle
 1365              		.thumb
 1366              		.thumb_func
 1368              	i2c_idle:
 1369              	.LFB44:
 604:arch/stm32/mcu_periph/i2c_arch.c **** {
 1370              		.loc 1 604 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL77:
 1375 0000 08B5     		push	{r3, lr}
 1376              	.LCFI6:
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 14, -4
 1379              		.cfi_offset 3, -8
 605:arch/stm32/mcu_periph/i2c_arch.c ****   return !I2C_GetFlagStatus(p->reg_addr, I2C_FLAG_BUSY);
 1380              		.loc 1 605 0
 1381 0002 4FF40031 		mov	r1, #131072
 1382 0006 406A     		ldr	r0, [r0, #36]
 1383              	.LVL78:
 1384 0008 FFF7FEFF 		bl	I2C_GetFlagStatus
 606:arch/stm32/mcu_periph/i2c_arch.c **** }
 1385              		.loc 1 606 0
 1386 000c D0F10100 		rsbs	r0, r0, #1
 1387 0010 38BF     		it	cc
 1388 0012 0020     		movcc	r0, #0
 1389 0014 08BD     		pop	{r3, pc}
 1390              		.cfi_endproc
 1391              	.LFE44:
 1393              		.section	.text.i2c_submit,"ax",%progbits
 1394              		.align	1
 1395              		.global	i2c_submit
 1396              		.thumb
 1397              		.thumb_func
 1399              	i2c_submit:
 1400              	.LFB45:
 608:arch/stm32/mcu_periph/i2c_arch.c **** bool_t i2c_submit(struct i2c_periph* p, struct i2c_transaction* t) {
 1401              		.loc 1 608 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              	.LVL79:
 1406 0000 38B5     		push	{r3, r4, r5, lr}
 1407              	.LCFI7:
 1408              		.cfi_def_cfa_offset 16
 1409              		.cfi_offset 14, -4
 1410              		.cfi_offset 5, -8
 1411              		.cfi_offset 4, -12
 1412              		.cfi_offset 3, -16
 611:arch/stm32/mcu_periph/i2c_arch.c ****   temp = p->trans_insert_idx + 1;
 1413              		.loc 1 611 0
 1414 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 613:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp == p->trans_extract_idx)
 1415              		.loc 1 613 0
 1416 0006 90F82120 		ldrb	r2, [r0, #33]	@ zero_extendqisi2
 611:arch/stm32/mcu_periph/i2c_arch.c ****   temp = p->trans_insert_idx + 1;
 1417              		.loc 1 611 0
 1418 000a 0133     		adds	r3, r3, #1
 1419 000c DBB2     		uxtb	r3, r3
 1420              	.LVL80:
 612:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp >= I2C_TRANSACTION_QUEUE_LEN) temp = 0;
 1421              		.loc 1 612 0
 1422 000e 072B     		cmp	r3, #7
 1423 0010 88BF     		it	hi
 1424 0012 0023     		movhi	r3, #0
 1425              	.LVL81:
 613:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp == p->trans_extract_idx)
 1426              		.loc 1 613 0
 1427 0014 9A42     		cmp	r2, r3
 608:arch/stm32/mcu_periph/i2c_arch.c **** bool_t i2c_submit(struct i2c_periph* p, struct i2c_transaction* t) {
 1428              		.loc 1 608 0
 1429 0016 0446     		mov	r4, r0
 1430 0018 4FF00000 		mov	r0, #0
 1431              	.LVL82:
 613:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp == p->trans_extract_idx)
 1432              		.loc 1 613 0
 1433 001c 1CD0     		beq	.L87
 616:arch/stm32/mcu_periph/i2c_arch.c ****   t->status = I2CTransPending;
 1434              		.loc 1 616 0
 1435 001e 81F82500 		strb	r0, [r1, #37]
 1436              	.LBB197:
 1437              	.LBB198:
 1438              		.file 2 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
   1:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /******************************************************************************
   2:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @file:    core_cm3.h
   3:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @purpose: CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @version: V1.10
   5:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @date:    24. Feb. 2009
   6:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *----------------------------------------------------------------------------
   7:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
   8:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  10:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-Mx 
  11:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  12:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  13:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  14:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  15:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  16:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  17:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  18:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  19:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  20:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  ******************************************************************************/
  21:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  22:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  23:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  24:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  25:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  26:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  27:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  28:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  29:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  30:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x10)                                                       /*!<
  31:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  32:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  33:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  34:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  35:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
  36:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *  Lint configuration \n
  37:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *  ----------------------- \n
  38:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  39:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *  The following Lint messages will be suppressed and not shown: \n
  40:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *  \n
  41:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 10: --- \n
  42:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    register uint32_t __regBasePri         __asm("basepri"); \n
  43:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Error 10: Expecting ';' \n
  44:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  45:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 530: --- \n
  46:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    return(__regBasePri); \n
  47:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Warning 530: Symbol '__regBasePri' (line 264) not initialized \n
  48:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  49:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 550: --- \n
  50:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *      __regBasePri = (basePri & 0x1ff); \n
  51:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    } \n
  52:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Warning 550: Symbol '__regBasePri' (line 271) not accessed \n
  53:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  54:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 754: --- \n
  55:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    uint32_t RESERVED0[24]; \n
  56:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h) 
  57:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  58:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 750: --- \n
  59:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    #define __CM3_CORE_H__ \n
  60:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced \n
  61:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  62:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 528: --- \n
  63:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  64:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not referen
  65:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  66:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 751: --- \n
  67:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    } InterruptType_Type; \n
  68:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced \n
  69:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * \n
  70:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * \n
  71:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Note:  To re-enable a Message, insert a space before 'lint' * \n
  72:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  73:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
  74:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  75:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -save */
  76:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e10  */
  77:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e530 */
  78:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e550 */
  79:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e754 */
  80:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e750 */
  81:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e528 */
  82:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e751 */
  83:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  84:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  85:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  86:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  87:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  88:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  89:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
  90:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  91:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  92:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  93:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  94:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
  95:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  96:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  97:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  98:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  99:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 100:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * IO definitions
 101:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 102:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 103:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 104:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 105:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define     __I     volatile const            /*!< defines 'read only' permissions      */
 106:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 107:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 108:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 109:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 110:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 111:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*******************************************************************************
 112:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *                 Register Abstraction
 113:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  ******************************************************************************/
 114:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 115:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 116:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* System Reset */
 117:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_VECTRESET              0         /*!< Vector Reset Bit             */
 118:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_SYSRESETREQ            2         /*!< System Reset Request         */
 119:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_AIRCR_VECTKEY    (0x5FA << 16)   /*!< AIRCR Key for write access   */
 120:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_AIRCR_ENDIANESS        15        /*!< Endianess                    */
 121:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 122:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* Core Debug */
 123:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA (1 << 24)      /*!< DEMCR TRCENA enable          */
 124:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA              1         /*!< ITM enable                   */
 125:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 126:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 127:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 128:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 129:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapping struct for Nested Vectored Interrupt Controller (NVIC) */
 130:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 131:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 132:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Interrupt Set Enable Register            */
 133:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 134:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Interrupt Clear Enable Register          */
 135:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 136:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Interrupt Set Pending Register           */
 137:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 138:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Interrupt Clear Pending Register         */
 139:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 140:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Interrupt Active bit Register            */
 141:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 142:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Interrupt Priority Register, 8Bit wide   */
 143:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 144:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Software Trigger Interrupt Register      */
 145:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }  NVIC_Type;
 146:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 147:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 148:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapping struct for System Control Block */
 149:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 150:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 151:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< CPU ID Base Register                            
 152:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Interrupt Control State Register                
 153:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Vector Table Offset Register                    
 154:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Application Interrupt / Reset Control Register  
 155:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< System Control Register                         
 156:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Configuration Control Register                  
 157:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< System Handlers Priority Registers (4-7, 8-11, 1
 158:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< System Handler Control and State Register       
 159:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Configurable Fault Status Register              
 160:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Hard Fault Status Register                      
 161:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Debug Fault Status Register                     
 162:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Mem Manage Address Register                     
 163:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Bus Fault Address Register                      
 164:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Auxiliary Fault Status Register                 
 165:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Processor Feature Register                      
 166:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Debug Feature Register                          
 167:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Auxiliary Feature Register                      
 168:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Memory Model Feature Register                   
 169:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< ISA Feature Register                            
 170:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } SCB_Type;
 171:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 172:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 173:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapping struct for SysTick */
 174:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 175:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 176:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< SysTick Control and Status Register */
 177:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< SysTick Reload Value Register       */
 178:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< SysTick Current Value Register      */
 179:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< SysTick Calibration Register        */
 180:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } SysTick_Type;
 181:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 182:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 183:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapping structur for ITM */
 184:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 185:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 186:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __O  union  
 187:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   {
 188:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< ITM Stimulus Port 8-bit               */
 189:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< ITM Stimulus Port 16-bit              */
 190:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< ITM Stimulus Port 32-bit              */
 191:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< ITM Stimulus Port Registers           */
 192:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 193:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< ITM Trace Enable Register             */
 194:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 195:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< ITM Trace Privilege Register          */
 196:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 197:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< ITM Trace Control Register            */
 198:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 199:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< ITM Integration Write Register        */
 200:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< ITM Integration Read Register         */
 201:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< ITM Integration Mode Control Register */
 202:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 203:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< ITM Lock Access Register              */
 204:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< ITM Lock Status Register              */
 205:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
 206:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< ITM Product ID Registers              */
 207:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID5;
 208:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID6;
 209:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID7;
 210:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID0;
 211:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID1;
 212:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID2;
 213:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID3;
 214:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CID0;
 215:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CID1;
 216:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CID2;
 217:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CID3;
 218:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } ITM_Type;
 219:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 220:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 221:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapped struct for Interrupt Type */
 222:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 223:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 224:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 225:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Interrupt Control Type Register  */
 226:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 227:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Auxiliary Control Register       */
 228:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #else
 229:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 230:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
 231:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } InterruptType_Type;
 232:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 233:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 234:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* Memory Protection Unit */
 235:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 236:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 237:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 238:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< MPU Type Register                               
 239:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< MPU Control Register                            
 240:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< MPU Region RNRber Register                      
 241:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< MPU Region Base Address Register                
 242:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< MPU Region Attribute and Size Register          
 243:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< MPU Alias 1 Region Base Address Register        
 244:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< MPU Alias 1 Region Attribute and Size Register  
 245:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< MPU Alias 2 Region Base Address Register        
 246:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< MPU Alias 2 Region Attribute and Size Register  
 247:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< MPU Alias 3 Region Base Address Register        
 248:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< MPU Alias 3 Region Attribute and Size Register  
 249:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } MPU_Type;
 250:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
 251:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 252:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 253:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* Core Debug Register */
 254:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 255:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 256:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Debug Halting Control and Status Register       
 257:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Debug Core Register Selector Register           
 258:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Debug Core Register Data Register               
 259:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Debug Exception and Monitor Control Register    
 260:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } CoreDebug_Type;
 261:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 262:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 263:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 264:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 265:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 266:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 267:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 268:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 269:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 270:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 271:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 272:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 273:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 274:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 275:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 276:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 277:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 278:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 279:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 280:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 281:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
 282:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 283:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 284:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 285:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*******************************************************************************
 286:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 287:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  ******************************************************************************/
 288:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 289:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 290:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 291:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 292:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 293:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 294:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 295:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 296:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 297:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __NOP           __no_operation                              /*!< no operation intrinsic i
 298:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 299:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 300:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                        /*!< asm keyword for GNU Co
 301:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 302:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 303:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
 304:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 305:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 306:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 307:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 308:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 309:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 310:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 311:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 312:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 313:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 314:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __NOP                             __nop
 315:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __WFI                             __wfi
 316:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __WFE                             __wfe
 317:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __SEV                             __sev
 318:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 319:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
 320:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 321:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __REV                             __rev
 322:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 323:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 324:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 325:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 326:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 327:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 328:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 329:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 330:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 331:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 332:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 333:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   /* intrinsic void __enable_irq();     */
 334:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   /* intrinsic void __disable_irq();    */
 335:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 336:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 337:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 338:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 339:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 340:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 341:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t ProcessStackPointer
 342:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 343:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 344:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 345:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 346:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 347:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 348:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 349:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 350:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Process Stack Pointer
 351:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 352:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 353:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 354:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 355:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 356:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 357:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 358:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 359:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 360:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 361:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 362:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t Main Stack Pointer
 363:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 364:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 365:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Cortex processor register
 366:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 367:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 368:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 369:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 370:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 371:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 372:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Main Stack Pointer
 373:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 374:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 375:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 376:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 377:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 378:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 379:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 380:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 381:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 382:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 383:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t value to reverse
 384:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t reversed value
 385:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 386:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 387:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 388:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 389:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 390:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*
 391:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 392:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 393:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  int16_t value to reverse
 394:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return int32_t reversed value
 395:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 396:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 397:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 398:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 399:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 400:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 401:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 402:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 403:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 404:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 405:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 406:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 407:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 408:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 409:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 410:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 411:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __CLREX(void);
 412:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 413:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 414:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 415:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 416:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 417:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t BasePriority
 418:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 419:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the base priority register
 420:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 421:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 422:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 423:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 424:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 425:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 426:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t BasePriority
 427:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 428:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 429:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the base priority register
 430:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 431:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 432:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 433:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 434:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 435:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 436:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 437:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t PriMask
 438:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 439:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the state of the priority mask bit from the priority mask
 440:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * register
 441:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 442:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 443:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 444:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 445:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 446:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 447:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t PriMask
 448:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 449:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 450:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 451:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 452:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 453:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 454:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 455:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 456:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 457:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 458:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t FaultMask
 459:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 460:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 461:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 462:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 463:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 464:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 465:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 466:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 467:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t faultMask value
 468:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 469:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 470:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the fault mask register
 471:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 472:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 473:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 474:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 475:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 476:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * 
 477:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 478:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t Control value
 479:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 480:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the control register
 481:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 482:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 483:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 484:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 485:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 486:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 487:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Control value
 488:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 489:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 490:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the control register
 491:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 492:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 493:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 494:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 495:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 496:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 497:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 498:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 499:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 500:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 501:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 502:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 503:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 504:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 505:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 506:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 507:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 508:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 509:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 510:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 511:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t BasePriority
 512:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 513:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the base priority register
 514:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 515:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 516:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 517:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 518:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   return(__regBasePri);
 519:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 520:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 521:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 522:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 523:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 524:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t BasePriority
 525:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 526:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 527:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the base priority register
 528:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 529:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 530:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 531:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 532:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0x1ff);
 533:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 534:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 535:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 536:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 537:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 538:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 539:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t PriMask
 540:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 541:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the state of the priority mask bit from the priority mask
 542:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * register
 543:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 544:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 545:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 546:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 547:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   return(__regPriMask);
 548:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 549:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 550:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 551:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 552:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 553:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t PriMask
 554:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 555:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 556:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 557:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 558:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 559:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 560:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 561:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 562:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 563:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 564:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 565:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 566:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 567:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 568:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t FaultMask
 569:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 570:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 571:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 572:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
 573:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 574:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 575:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   return(__regFaultMask);
 576:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 577:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 578:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 579:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 580:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 581:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t faultMask value
 582:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 583:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 584:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the fault mask register
 585:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 586:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
 587:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 588:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 589:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
 590:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 591:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 592:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 593:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 594:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * 
 595:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 596:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t Control value
 597:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 598:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the control register
 599:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 600:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
 601:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 602:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
 603:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   return(__regControl);
 604:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 605:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 606:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 607:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 608:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 609:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Control value
 610:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 611:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 612:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the control register
 613:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 614:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
 615:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 616:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
 617:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __regControl = control;
 618:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 619:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 620:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
 621:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 622:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 623:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 624:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
 625:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
 626:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 627:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
 628:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
 629:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 630:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
 631:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
 632:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 633:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
 634:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
 635:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
 636:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
 637:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 638:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 639:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 640:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 641:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 642:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t ProcessStackPointer
 643:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 644:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 645:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 646:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 647:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 648:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 649:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 650:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 651:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Process Stack Pointer
 652:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 653:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 654:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 655:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 656:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 657:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 658:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 659:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 660:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 661:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 662:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 663:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t Main Stack Pointer
 664:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 665:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 666:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Cortex processor register
 667:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 668:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 669:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 670:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 671:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 672:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 673:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Main Stack Pointer
 674:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 675:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 676:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 677:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 678:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 679:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 680:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 681:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 682:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 683:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 684:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t value to reverse
 685:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t reversed value
 686:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 687:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 688:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 689:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 690:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 691:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 692:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
 693:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 694:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t value to reverse
 695:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t reversed value
 696:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 697:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Reverse bit order of value
 698:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 699:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
 700:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 701:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 702:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  LDR Exclusive
 703:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 704:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint8_t* address
 705:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint8_t value of (*address)
 706:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 707:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive LDR command
 708:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 709:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
 710:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 711:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 712:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  LDR Exclusive
 713:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 714:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t* address
 715:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint16_t value of (*address)
 716:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 717:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive LDR command
 718:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 719:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
 720:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 721:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 722:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  LDR Exclusive
 723:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 724:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t* address
 725:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t value of (*address)
 726:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 727:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive LDR command
 728:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 729:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
 730:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 731:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 732:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  STR Exclusive
 733:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 734:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint8_t *address
 735:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint8_t value to store
 736:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t successful / failed
 737:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 738:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive STR command
 739:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 740:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
 741:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 742:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 743:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  STR Exclusive
 744:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 745:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t *address
 746:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t value to store
 747:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t successful / failed
 748:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 749:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive STR command
 750:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 751:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
 752:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 753:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 754:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  STR Exclusive
 755:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 756:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t *address
 757:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t value to store
 758:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t successful / failed
 759:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 760:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive STR command
 761:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 762:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
 763:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 764:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 765:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                    */
 766:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                    */
 767:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                                  */
 768:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                                  */
 769:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                          */
 770:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                        */
 771:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long);     */
 772:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);                  */
 773:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 774:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 775:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 776:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
 777:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* GNU gcc specific functions */
 778:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 779:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
 780:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 781:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 1439              		.loc 2 781 0
 1440              	@ 781 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cm
 1441 0022 72B6     		cpsid i
 1442              	@ 0 "" 2
 1443              		.thumb
 1444              	.LBE198:
 1445              	.LBE197:
 621:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans[p->trans_insert_idx] = t;
 1446              		.loc 1 621 0
 1447 0024 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 622:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans_insert_idx = temp;
 1448              		.loc 1 622 0
 1449 0028 84F82030 		strb	r3, [r4, #32]
 625:arch/stm32/mcu_periph/i2c_arch.c ****   if (p->status == I2CIdle)
 1450              		.loc 1 625 0
 1451 002c 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 1452              	.LVL83:
 621:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans[p->trans_insert_idx] = t;
 1453              		.loc 1 621 0
 1454 0030 44F82210 		str	r1, [r4, r2, lsl #2]
 625:arch/stm32/mcu_periph/i2c_arch.c ****   if (p->status == I2CIdle)
 1455              		.loc 1 625 0
 1456 0034 73B9     		cbnz	r3, .L88
 1457              	.LVL84:
 1458              	.LBB199:
 1459              	.LBB200:
 636:arch/stm32/mcu_periph/i2c_arch.c ****   p->status = I2CStartRequested;
 1460              		.loc 1 636 0
 1461 0036 0125     		movs	r5, #1
 635:arch/stm32/mcu_periph/i2c_arch.c ****   p->idx_buf = 0;
 1462              		.loc 1 635 0
 1463 0038 84F82330 		strb	r3, [r4, #35]
 637:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_EVT, ENABLE);
 1464              		.loc 1 637 0
 1465 003c 606A     		ldr	r0, [r4, #36]
 1466 003e 4FF40071 		mov	r1, #512
 1467              	.LVL85:
 636:arch/stm32/mcu_periph/i2c_arch.c ****   p->status = I2CStartRequested;
 1468              		.loc 1 636 0
 1469 0042 84F82250 		strb	r5, [r4, #34]
 637:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_EVT, ENABLE);
 1470              		.loc 1 637 0
 1471 0046 2A46     		mov	r2, r5
 1472              	.LVL86:
 1473 0048 FFF7FEFF 		bl	I2C_ITConfig
 1474              		.loc 1 638 0
 1475 004c 606A     		ldr	r0, [r4, #36]
 1476 004e 2946     		mov	r1, r5
 1477 0050 FFF7FEFF 		bl	I2C_GenerateSTART
 1478              	.LVL87:
 1479              	.L88:
 1480              	.LBE200:
 1481              	.LBE199:
 1482              	.LBB201:
 1483              	.LBB202:
 780:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 1484              		.loc 2 780 0
 1485              	@ 780 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/cm
 1486 0054 62B6     		cpsie i
 1487              	@ 0 "" 2
 1488              		.thumb
 1489              	.LBE202:
 1490              	.LBE201:
 630:arch/stm32/mcu_periph/i2c_arch.c ****   return TRUE;
 1491              		.loc 1 630 0
 1492 0056 0120     		movs	r0, #1
 1493              	.L87:
 631:arch/stm32/mcu_periph/i2c_arch.c **** }
 1494              		.loc 1 631 0
 1495 0058 38BD     		pop	{r3, r4, r5, pc}
 1496              		.cfi_endproc
 1497              	.LFE45:
 1499              		.global	i2c2_errors
 1500              		.section	.bss.counter.3378,"aw",%nobits
 1501              		.set	.LANCHOR4,. + 0
 1504              	counter.3378:
 1505 0000 00       		.space	1
 1506              		.section	.bss.i2c2_errors,"aw",%nobits
 1507              		.align	2
 1508              		.set	.LANCHOR1,. + 0
 1511              	i2c2_errors:
 1512 0000 00000000 		.space	108
 1512      00000000 
 1512      00000000 
 1512      00000000 
 1512      00000000 
 1513              		.section	.bss.counter.3351,"aw",%nobits
 1514              		.set	.LANCHOR2,. + 0
 1517              	counter.3351:
 1518 0000 00       		.space	1
 1519              		.section	.data.I2C2_InitStruct,"aw",%progbits
 1520              		.align	2
 1521              		.set	.LANCHOR0,. + 0
 1524              	I2C2_InitStruct:
 1525 0000 0000     		.short	0
 1526 0002 FFBF     		.short	-16385
 1527 0004 0000     		.short	0
 1528 0006 0004     		.short	1024
 1529 0008 0040     		.short	16384
 1530 000a 0000     		.space	2
 1531 000c E0930400 		.word	300000
 1532              		.section	.bss.counter.3367,"aw",%nobits
 1533              		.set	.LANCHOR3,. + 0
 1536              	counter.3367:
 1537 0000 00       		.space	1
 1538              		.text
 1539              	.Letext0:
 1540              		.file 3 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 1541              		.file 4 "/home/uav/paparazzi/sw/include/std.h"
 1542              		.file 5 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 1543              		.file 6 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 1544              		.file 7 "./mcu_periph/i2c.h"
 1545              		.file 8 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
 1546              		.file 9 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include
DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c_arch.c
     /tmp/cccPFJsb.s:18     .text.i2c_delay:0000000000000000 $t
     /tmp/cccPFJsb.s:22     .text.i2c_delay:0000000000000000 i2c_delay
     /tmp/cccPFJsb.s:57     .text.i2c_hard_reset.constprop.6:0000000000000000 $t
     /tmp/cccPFJsb.s:61     .text.i2c_hard_reset.constprop.6:0000000000000000 i2c_hard_reset.constprop.6
     /tmp/cccPFJsb.s:286    .text.i2c_hard_reset.constprop.6:0000000000000130 $d
     /tmp/cccPFJsb.s:292    .text.abort_and_reset.constprop.4:0000000000000000 $t
     /tmp/cccPFJsb.s:296    .text.abort_and_reset.constprop.4:0000000000000000 abort_and_reset.constprop.4
     /tmp/cccPFJsb.s:408    .text.abort_and_reset.constprop.4:0000000000000080 $d
     /tmp/cccPFJsb.s:419    .text.i2c_event:0000000000000000 $t
     /tmp/cccPFJsb.s:424    .text.i2c_event:0000000000000000 i2c_event
     /tmp/cccPFJsb.s:437    .text.i2c2_hw_init:0000000000000000 $t
     /tmp/cccPFJsb.s:442    .text.i2c2_hw_init:0000000000000000 i2c2_hw_init
     /tmp/cccPFJsb.s:555    .text.i2c2_hw_init:00000000000000a0 $d
     /tmp/cccPFJsb.s:563    .text.i2c2_ev_irq_handler:0000000000000000 $t
     /tmp/cccPFJsb.s:568    .text.i2c2_ev_irq_handler:0000000000000000 i2c2_ev_irq_handler
     /tmp/cccPFJsb.s:605    .text.i2c2_ev_irq_handler:0000000000000022 $d
     /tmp/cccPFJsb.s:618    .text.i2c2_ev_irq_handler:0000000000000032 $t
     /tmp/cccPFJsb.s:1082   .text.i2c2_ev_irq_handler:000000000000028c $d
     /tmp/cccPFJsb.s:1096   .text.i2c2_ev_irq_handler:00000000000002b4 $t
     /tmp/cccPFJsb.s:1158   .text.i2c2_ev_irq_handler:00000000000002f0 $d
     /tmp/cccPFJsb.s:1166   .text.i2c2_er_irq_handler:0000000000000000 $t
     /tmp/cccPFJsb.s:1171   .text.i2c2_er_irq_handler:0000000000000000 i2c2_er_irq_handler
     /tmp/cccPFJsb.s:1350   .text.i2c2_er_irq_handler:00000000000000e4 $d
     /tmp/cccPFJsb.s:1363   .text.i2c_idle:0000000000000000 $t
     /tmp/cccPFJsb.s:1368   .text.i2c_idle:0000000000000000 i2c_idle
     /tmp/cccPFJsb.s:1394   .text.i2c_submit:0000000000000000 $t
     /tmp/cccPFJsb.s:1399   .text.i2c_submit:0000000000000000 i2c_submit
     /tmp/cccPFJsb.s:1511   .bss.i2c2_errors:0000000000000000 i2c2_errors
     /tmp/cccPFJsb.s:1504   .bss.counter.3378:0000000000000000 counter.3378
     /tmp/cccPFJsb.s:1505   .bss.counter.3378:0000000000000000 $d
     /tmp/cccPFJsb.s:1507   .bss.i2c2_errors:0000000000000000 $d
     /tmp/cccPFJsb.s:1517   .bss.counter.3351:0000000000000000 counter.3351
     /tmp/cccPFJsb.s:1518   .bss.counter.3351:0000000000000000 $d
     /tmp/cccPFJsb.s:1520   .data.I2C2_InitStruct:0000000000000000 $d
     /tmp/cccPFJsb.s:1524   .data.I2C2_InitStruct:0000000000000000 I2C2_InitStruct
     /tmp/cccPFJsb.s:1536   .bss.counter.3367:0000000000000000 counter.3367
     /tmp/cccPFJsb.s:1537   .bss.counter.3367:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
I2C_DeInit
GPIO_SetBits
GPIO_Init
GPIO_ReadInputDataBit
GPIO_ResetBits
I2C_Init
I2C_SoftwareResetCmd
i2c2
I2C_ITConfig
I2C_GenerateSTART
NVIC_PriorityGroupConfig
NVIC_Init
RCC_APB1PeriphClockCmd
RCC_APB2PeriphClockCmd
I2C_Cmd
I2C_GetLastEvent
I2C_Send7bitAddress
I2C_SendData
I2C_GenerateSTOP
I2C_ReceiveData
I2C_AcknowledgeConfig
I2C_GetITStatus
I2C_ClearITPendingBit
I2C_GetFlagStatus
